[
  {"callee": "getInstance",
    "MethodType": "Cipher",
    "Type": "parameter",
    "Check": 0,
    "Incorrect": ["(.)*DES(.)*", "(.)*DESede(.)*", "#AES", "AES/ECB(.)*", "(.)*DESedeWrap(.)*",
      "(.)*RC2(.)*", "RC2", "RC4","(.)*RC4(.)*", "(.)*RC5(.)*", "(.)*Blowfish(.)*", "(.)IDEA(.)*", "PBEWithMD5AndDES",
      "PBEWithMD5AndTripleDES", "PBEWithSHA1AndDESede", "PBEWithSHA1AndRC2_40", "AES/CTR/NoPadding", "ARCFOUR",
      "AES/ECB/PKCS5Padding", "RSA/NONE/NoPadding","x-qpid-encryption-algorithm", "RSA/NONE/NoPadding", "x-qpid-encrypted-keys", "x-qpid-encrypted-keys", "x-qpid-encryption-algorithm"],
    "Correct": ["AES/CFB/PKCS5Padding" ,"RSA/ECB/OAEPWithSHA-1AndMGF1Padding", "AES/GCM/PKCS5Padding", "RSA/CBC/PKCS5Padding"]
  },

  {
    "callee": "getInstance",
    "MethodType": "MessageDigest",
    "Type": "parameter",
    "Check": 0,
    "Incorrect": ["#MD2", "(.)*MD5", "(.)*MD4","(.)*SHA-1","#RC2", "#RC4", "#SHA1", "#SHA-224", "#SHA-2", "#HmacSHA1"],
    "Correct": ["SHA-512", "SHA-256", "SHA-3"]
  },

  {
    "callee": "getInstance",
    "MethodType": "SecretKeyFactory",
    "Type": "parameter",
    "Check": 0,
    "Incorrect": ["(.)*DES(.)*", "(.)*DESede(.)*", "ARCFOUR","PBEWithMD5AndDES", "PBKDF2WithHmacSHA1"],
    "Correct": ["use AES with 256 bit to generate secret key", "PBEWithHmacSHA256AndAES_128"]
  },

  {
    "callee": "getInstance",
    "MethodType": "SSLContext",
    "Type": "parameter",
    "Check": 0,
    "Incorrect": ["#SSL", "TLSv1.1","TLSv1.0"],
    "Correct": ["LSv1.2, TLSv1.3"]
  },

  {
    "callee": "initialize",
    "MethodType": "KeyPairGenerator",
    "Type": "number",
    "Check": 0,
    "MinNum": 2048,
    "Correct": ["Value should greater than 2048"]
  },

  {
    "callee": "<init>",
    "MethodType": "SecretKeySpec",
    "Type": "parameter",
    "Check": 0,
    "Incorrect": null,
    "Correct": ["key Parameter should not be a fixed value"]
  },

  {
    "callee": "<init>",
    "MethodType": "SecretKeySpec",
    "Type": "parameter",
    "Check": 1,
    "Incorrect": ["(.)*DES(.)*", "(.)*DESede(.)*", "ARCFOUR", "PBE-WithMD5AndDES", "PBKDF2WithHmacSHA1"],
    "Correct": ["use AES with 256 bit to generate secret key", "PBEWithHmacSHA256AndAES_128"]
  },

  {
    "callee": "<init>",
    "MethodType": "PBEParameterSpec",
    "Type": "number",
    "Check": 1,
    "MinNum": 1000,
    "Correct": ["Value should greater than 1000"]
  },

  {
    "callee": "<init>",
    "MethodType": "PBEKeySpec",
    "Type": "number",
    "Check": 2,
    "MinNum": 1000,
    "Correct": ["salt iteration value should greater than 1000"]
  },

  {
    "callee": "setSeed",
    "MethodType": "SecureRandom",
    "Type": "parameter",
    "Check": 0,
    "Incorrect": null,
    "Correct": ["Parameter should not be a fixed value"]
  },

  {
    "callee": "<init>",
    "MethodType": "IvParameterSpec",
    "Type": "parameter",
    "Check": 0,
    "Incorrect": null,
    "Correct": ["IV Parameter should not be a fixed value"]
  },

  {
    "callee": "<init>",
    "MethodType": "PBEParameterSpec",
    "Type": "parameter",
    "Check": 0,
    "Incorrect": null,
    "Correct": ["salt/password Parameter should not be a fixed value"]
  },

  {
    "callee": "<init>",
    "MethodType": "PBEKeySpec",
    "Type": "parameter",
    "Check": 0,
    "Incorrect": null,
    "Correct": ["Parameter should not be a fixed value"]
  },
  {
    "callee": "<init>",
    "MethodType": "PBEKeySpec",
    "Type": "parameter",
    "Check": 1,
    "Incorrect": null,
    "Correct": ["Parameter should not be a fixed value"]
  },

  {
    "callee": "<init>",
    "MethodType": "Ljava/util/Random",
    "Type": "type",
    "Check": 0,
    "Incorrect": null,
    "Correct": ["Should use SecureRandom"]
  },

  {
    "callee": "load",
    "MethodType": "KeyStore",
    "Type": "parameter",
    "Check": 1,
    "Incorrect": null,
    "Correct": ["Parameter should not be a fixed value"]
  },
  {
    "callee": "<init>",
    "MethodType": "PBEParameterSpec",
    "Type": "number",
    "Check": 1,
    "args": 3,
    "MinNum": 1000,
    "Correct": ["Value should greater than 1000"]
  },
  {
    "callee": "<init>",
    "MethodType": "PBEKeySpec",
    "Type": "parameter",
    "Check": 1,
    "args": 4,
    "Incorrect": null,
    "Correct": ["Parameter should not be a fixed value"]
  }
]
