<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>SpotBugs Report</title>
<style type="text/css">
		.tablerow0 {
			background: #EEEEEE;
		}

		.tablerow1 {
			background: white;
		}

		.detailrow0 {
			background: #EEEEEE;
		}

		.detailrow1 {
			background: white;
		}

		.tableheader {
			background: #b9b9fe;
			font-size: larger;
		}

		.tablerow0:hover, .tablerow1:hover {
			background: #aaffaa;
		}

		.priority-1 {
		    color: red;
		    font-weight: bold;
		}
		.priority-2 {
		    color: orange;
		    font-weight: bold;
		}
		.priority-3 {
		    color: green;
		    font-weight: bold;
		}
		.priority-4 {
		    color: blue;
		    font-weight: bold;
		}
		</style>
<script type="text/javascript">
			function toggleRow(elid) {
				if (document.getElementById) {
					element = document.getElementById(elid);
					if (element) {
						if (element.style.display == 'none') {
							element.style.display = 'block';
							//window.status = 'Toggle on!';
						} else {
							element.style.display = 'none';
							//window.status = 'Toggle off!';
						}
					}
				}
			}
		</script>
</head>
<body>
<h1>
<a href="https://spotbugs.github.io/">SpotBugs</a> Report</h1>
<h2>Project Information</h2>
<p>Project: 
		</p>
<p>SpotBugs version: 3.1.12</p>
<p>Code analyzed:</p>
<ul>
<li>/xxx/CryptoAPIDetect/dataset/group/orc.git/spark-core_2.11-2.4.0.jar</li>
</ul>
<p>
<br/>
<br/>
</p>
<h2>Metrics</h2>
<p>180917 lines of code analyzed,
	in 8583 classes, 
	in 98 packages.</p>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Metric</th>
<th align="right">Total</th>
<th align="right">Density*</th>
</tr>
<tr class="tablerow0">
<td>High Priority Warnings</td>
<td align="right">41</td>
<td align="right">0.23</td>
</tr>
<tr class="tablerow1">
<td>Medium Priority Warnings</td>
<td align="right">296</td>
<td align="right">1.64</td>
</tr>
<tr class="$totalClass">
<td>
<b>Total Warnings</b>
</td>
<td align="right">
<b>337</b>
</td>
<td align="right">
<b>1.86</b>
</td>
</tr>
</table>
<p>
<i>(* Defects per Thousand lines of non-commenting source statements)</i>
</p>
<p>
<br/>
<br/>
</p>
<h2>Contents</h2>
<ul>
<li>
<a href="#Warnings_SECURITY">Security Warnings</a>
</li>
<li>
<a href="#Details">Details</a>
</li>
</ul>
<h1>Summary</h1>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Warning Type</th>
<th align="right">Number</th>
</tr>
<tr class="tablerow0">
<td>
<a href="#Warnings_SECURITY">Security Warnings</a>
</td>
<td align="right">337</td>
</tr>
<tr class="tablerow1">
<td>
<b>Total</b>
</td>
<td align="right">
<b>337</b>
</td>
</tr>
</table>
<h1>Warnings</h1>
<p>Click on a warning row to see full context information.</p>
<h2>
<a name="Warnings_SECURITY">Security Warnings</a>
</h2>
<table class="warningtable" width="100%" cellspacing="0">
<tr class="tableheader">
<th align="left">Code</th>
<th align="left">Warning</th>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70652');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70652" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.spark.deploy.RPackageUtils$<br/>In method org.apache.spark.deploy.RPackageUtils$.org$apache$spark$deploy$RPackageUtils$$print(String, PrintStream, Level, Throwable)<br/>At RPackageUtils.scala:[line 78]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77617');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77617" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.spark.util.Utils$<br/>In method org.apache.spark.util.Utils$.exceptionString(Throwable)<br/>At Utils.scala:[line 2133]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N84672');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N84672" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.spark_project.jetty.server.handler.ErrorHandler<br/>In method org.spark_project.jetty.server.handler.ErrorHandler.writeErrorPageStacks(HttpServletRequest, Writer)<br/>At ErrorHandler.java:[line 302]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N84343');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N84343" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.spark_project.jetty.server.ShutdownMonitor<br/>In method org.spark_project.jetty.server.ShutdownMonitor.debug(Throwable)<br/>At ShutdownMonitor.java:[line 146]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N95674');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N95674" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.spark_project.jetty.util.log.JavaUtilLog$1<br/>In method org.spark_project.jetty.util.log.JavaUtilLog$1.run()<br/>At JavaUtilLog.java:[line 105]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N95728');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N95728" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.spark_project.jetty.util.log.Log<br/>In method org.spark_project.jetty.util.log.Log.initStandardLogging(Throwable)<br/>At Log.java:[line 202]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N95782');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N95782" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.spark_project.jetty.util.log.StdErrLog<br/>In method org.spark_project.jetty.util.log.StdErrLog.&lt;static initializer for StdErrLog&gt;()<br/>At StdErrLog.java:[line 126]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N95467');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N95467" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.spark_project.jetty.util.RolloverFileOutputStream$RollTask<br/>In method org.spark_project.jetty.util.RolloverFileOutputStream$RollTask.run()<br/>At RolloverFileOutputStream.java:[line 368]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N90005');">
<td>
<span class="priority-2">HRS</span>
</td>
<td>HTTP parameter directly written to HTTP header output in org.spark_project.jetty.servlet.DefaultServlet.doGet(HttpServletRequest, HttpServletResponse)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N90005" style="display: none;">
<a href="#HRS_REQUEST_PARAMETER_TO_HTTP_HEADER">Bug type HRS_REQUEST_PARAMETER_TO_HTTP_HEADER (click for details)</a>
<br/>In class org.spark_project.jetty.servlet.DefaultServlet<br/>In method org.spark_project.jetty.servlet.DefaultServlet.doGet(HttpServletRequest, HttpServletResponse)<br/>At DefaultServlet.java:[line 502]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N90059');">
<td>
<span class="priority-2">HRS</span>
</td>
<td>HTTP parameter directly written to HTTP header output in org.spark_project.jetty.servlet.DefaultServlet.passConditionalHeaders(HttpServletRequest, HttpServletResponse, HttpContent)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N90059" style="display: none;">
<a href="#HRS_REQUEST_PARAMETER_TO_HTTP_HEADER">Bug type HRS_REQUEST_PARAMETER_TO_HTTP_HEADER (click for details)</a>
<br/>In class org.spark_project.jetty.servlet.DefaultServlet<br/>In method org.spark_project.jetty.servlet.DefaultServlet.passConditionalHeaders(HttpServletRequest, HttpServletResponse, HttpContent)<br/>Local variable named ifnm<br/>At DefaultServlet.java:[line 780]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N90120');">
<td>
<span class="priority-2">HRS</span>
</td>
<td>HTTP parameter directly written to HTTP header output in org.spark_project.jetty.servlet.DefaultServlet.sendWelcome(HttpContent, String, boolean, boolean, HttpServletRequest, HttpServletResponse)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N90120" style="display: none;">
<a href="#HRS_REQUEST_PARAMETER_TO_HTTP_HEADER">Bug type HRS_REQUEST_PARAMETER_TO_HTTP_HEADER (click for details)</a>
<br/>In class org.spark_project.jetty.servlet.DefaultServlet<br/>In method org.spark_project.jetty.servlet.DefaultServlet.sendWelcome(HttpContent, String, boolean, boolean, HttpServletRequest, HttpServletResponse)<br/>At DefaultServlet.java:[line 573]<br/>Another occurrence at DefaultServlet.java:[line 592]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N93002');">
<td>
<span class="priority-2">HRS</span>
</td>
<td>HTTP parameter directly written to HTTP header output in org.spark_project.jetty.servlets.CrossOriginFilter.handle(HttpServletRequest, HttpServletResponse, FilterChain)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N93002" style="display: none;">
<a href="#HRS_REQUEST_PARAMETER_TO_HTTP_HEADER">Bug type HRS_REQUEST_PARAMETER_TO_HTTP_HEADER (click for details)</a>
<br/>In class org.spark_project.jetty.servlets.CrossOriginFilter<br/>In method org.spark_project.jetty.servlets.CrossOriginFilter.handle(HttpServletRequest, HttpServletResponse, FilterChain)<br/>Local variable named origin<br/>At CrossOriginFilter.java:[line 295]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68758');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68758" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class org.apache.spark.api.python.PythonWorkerFactory<br/>In method org.apache.spark.api.python.PythonWorkerFactory.createSimpleWorker()<br/>At PythonWorkerFactory.scala:[line 147]<br/>Sink method java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/api/python/PythonWorkerFactory.org$apache$spark$api$python$PythonWorkerFactory$$pythonExec<br/>Unknown source java/util/Arrays.asList([Ljava/lang/Object;)Ljava/util/List;<br/>Unknown source org/apache/spark/api/python/PythonWorkerFactory.workerModule()Ljava/lang/String;<br/>Unknown source org/apache/spark/api/python/PythonWorkerFactory.workerModule<br/>At PythonWorkerFactory.scala:[line 63]<br/>At PythonWorkerFactory.scala:[line 147]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68862');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68862" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class org.apache.spark.api.python.PythonWorkerFactory<br/>In method org.apache.spark.api.python.PythonWorkerFactory.startDaemon()<br/>At PythonWorkerFactory.scala:[line 190]<br/>Sink method java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/api/python/PythonWorkerFactory.org$apache$spark$api$python$PythonWorkerFactory$$pythonExec<br/>Unknown source java/util/Arrays.asList([Ljava/lang/Object;)Ljava/util/List;<br/>Unknown source org/apache/spark/api/python/PythonWorkerFactory.daemonModule<br/>Unknown source org/apache/spark/api/python/PythonWorkerFactory.daemonModule()Ljava/lang/String;<br/>At PythonWorkerFactory.scala:[line 54]<br/>At PythonWorkerFactory.scala:[line 189]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69369');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69369" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class org.apache.spark.api.r.RRunner$<br/>In method org.apache.spark.api.r.RRunner$.createRProcess(int, String)<br/>At RRunner.scala:[line 351]<br/>Sink method java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/api/r/RRunner$.createRProcess(ILjava/lang/String;)Lorg/apache/spark/api/r/BufferedStreamThread; parameter 0<br/>Unknown source java/util/Arrays.asList([Ljava/lang/Object;)Ljava/util/List;<br/>Unknown source scala/collection/Seq.apply(I)Ljava/lang/Object;<br/>Unknown source scala/collection/mutable/StringBuilder.append(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;<br/>Unknown source scala/Option.getOrElse(Lscala/Function0;)Ljava/lang/Object;<br/>Unknown source org/apache/spark/SparkConf.get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source scala/collection/mutable/StringBuilder.toString()Ljava/lang/String;<br/>At RRunner.scala:[line 344]<br/>At RRunner.scala:[line 350]<br/>At RRunner.scala:[line 351]<br/>At RRunner.scala:[line 380]<br/>At RRunner.scala:[line 406]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70282');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70282" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class org.apache.spark.deploy.PythonRunner$<br/>In method org.apache.spark.deploy.PythonRunner$.main(String[])<br/>At PythonRunner.scala:[line 87]<br/>Sink method java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V<br/>Sink parameter 0<br/>Unknown source scala/collection/convert/Decorators$AsJava.asJava()Ljava/lang/Object;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70583');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70583" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class org.apache.spark.deploy.RPackageUtils$<br/>In method org.apache.spark.deploy.RPackageUtils$.org$apache$spark$deploy$RPackageUtils$$rPackageBuilder(File, PrintStream, boolean, String)<br/>At RPackageUtils.scala:[line 118]<br/>Sink method java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V<br/>Sink parameter 0<br/>Unknown source scala/collection/convert/Decorators$AsJava.asJava()Ljava/lang/Object;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71107');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71107" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class org.apache.spark.deploy.RRunner$<br/>In method org.apache.spark.deploy.RRunner$.main(String[])<br/>At RRunner.scala:[line 88]<br/>Sink method java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V<br/>Sink parameter 0<br/>Unknown source scala/collection/convert/Decorators$AsJava.asJava()Ljava/lang/Object;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73722');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/ProcessBuilder.&lt;init&gt;([Ljava/lang/String;)V can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73722" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class org.apache.spark.deploy.worker.CommandUtils$<br/>In method org.apache.spark.deploy.worker.CommandUtils$.buildProcessBuilder(Command, SecurityManager, int, String, Function1, Seq, Map)<br/>At CommandUtils.scala:[line 52]<br/>Sink method java/lang/ProcessBuilder.&lt;init&gt;([Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/collection/Seq.toArray(Lscala/reflect/ClassTag;)Ljava/lang/Object;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75520');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75520" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class org.apache.spark.rdd.PipedRDD<br/>In method org.apache.spark.rdd.PipedRDD.compute(Partition, TaskContext)<br/>At PipedRDD.scala:[line 67]<br/>Sink method java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V<br/>Sink parameter 0<br/>Unknown source scala/collection/convert/Decorators$AsJava.asJava()Ljava/lang/Object;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77548');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/ProcessBuilder.&lt;init&gt;([Ljava/lang/String;)V can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77548" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class org.apache.spark.util.Utils$<br/>In method org.apache.spark.util.Utils$.executeCommand(Seq, File, Map, boolean)<br/>At Utils.scala:[line 1222]<br/>Sink method java/lang/ProcessBuilder.&lt;init&gt;([Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/collection/Seq.toArray(Lscala/reflect/ClassTag;)Ljava/lang/Object;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N92171');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/Runtime.exec(Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process; can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N92171" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class org.spark_project.jetty.servlets.CGI<br/>In method org.spark_project.jetty.servlets.CGI.exec(File, String, HttpServletRequest, HttpServletResponse)<br/>At CGI.java:[line 352]<br/>Sink method java/lang/Runtime.exec(Ljava/lang/String;[Ljava/lang/String;Ljava/io/File;)Ljava/lang/Process;<br/>Sink parameter 1<br/>Unknown source org/spark_project/jetty/servlets/CGI$EnvList.getEnvArray()[Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/servlets/CGI$EnvList.envMap<br/>Unknown source java/util/Map.values()Ljava/util/Collection;<br/>Unknown source java/util/Collection.toArray([Ljava/lang/Object;)[Ljava/lang/Object;<br/>At CGI.java:[line 352]<br/>At CGI.java:[line 560]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N93340');">
<td>
<span class="priority-1">SECCORS</span>
</td>
<td>The program defines an overly permissive Cross-Origin Resource Sharing (CORS) policy</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N93340" style="display: none;">
<a href="#PERMISSIVE_CORS">Bug type PERMISSIVE_CORS (click for details)</a>
<br/>In class org.spark_project.jetty.servlets.CrossOriginFilter<br/>In method org.spark_project.jetty.servlets.CrossOriginFilter.handlePreflightResponse(HttpServletRequest, HttpServletResponse, String)<br/>At CrossOriginFilter.java:[line 418]<br/>Sink method javax/servlet/http/HttpServletResponse.setHeader(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/servlets/CrossOriginFilter.handlePreflightResponse(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;)V parameter 0<br/>Method usage with tainted arguments detected<br/>At CrossOriginFilter.java:[line 267]<br/>At CrossOriginFilter.java:[line 281]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N93433');">
<td>
<span class="priority-1">SECCORS</span>
</td>
<td>The program defines an overly permissive Cross-Origin Resource Sharing (CORS) policy</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N93433" style="display: none;">
<a href="#PERMISSIVE_CORS">Bug type PERMISSIVE_CORS (click for details)</a>
<br/>In class org.spark_project.jetty.servlets.CrossOriginFilter<br/>In method org.spark_project.jetty.servlets.CrossOriginFilter.handleSimpleResponse(HttpServletRequest, HttpServletResponse, String)<br/>At CrossOriginFilter.java:[line 398]<br/>Sink method javax/servlet/http/HttpServletResponse.setHeader(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/servlets/CrossOriginFilter.handleSimpleResponse(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;)V parameter 0<br/>Method usage with tainted arguments detected<br/>At CrossOriginFilter.java:[line 267]<br/>At CrossOriginFilter.java:[line 276]<br/>At CrossOriginFilter.java:[line 290]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N84236');">
<td>
<span class="priority-2">SECHOC</span>
</td>
<td>Cookie without the HttpOnly flag could be read by a malicious script in the browser</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N84236" style="display: none;">
<a href="#HTTPONLY_COOKIE">Bug type HTTPONLY_COOKIE (click for details)</a>
<br/>In class org.spark_project.jetty.server.CookieCutter<br/>In method org.spark_project.jetty.server.CookieCutter.parseFields()<br/>At CookieCutter.java:[line 307]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N84726');">
<td>
<span class="priority-2">SECHRS</span>
</td>
<td>This use of javax/servlet/http/HttpServletResponse.setHeader(Ljava/lang/String;Ljava/lang/String;)V might be used to include CRLF characters into HTTP headers</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N84726" style="display: none;">
<a href="#HTTP_RESPONSE_SPLITTING">Bug type HTTP_RESPONSE_SPLITTING (click for details)</a>
<br/>In class org.spark_project.jetty.server.handler.MovedContextHandler$Redirector<br/>In method org.spark_project.jetty.server.handler.MovedContextHandler$Redirector.handle(String, Request, HttpServletRequest, HttpServletResponse)<br/>At MovedContextHandler.java:[line 124]<br/>Sink method javax/servlet/http/HttpServletResponse.setHeader(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/Request.getRootURL()Ljava/lang/StringBuilder;<br/>Tainted source javax/servlet/http/HttpServletRequest.getPathInfo()Ljava/lang/String;<br/>Tainted source org/spark_project/jetty/util/URIUtil.addPaths(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/handler/MovedContextHandler._newContextURL<br/>Unknown source org/spark_project/jetty/util/URIUtil.addPaths(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Tainted source javax/servlet/http/HttpServletRequest.getQueryString()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/URIUtil.addPaths(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>At Request.java:[line 1342]<br/>At MovedContextHandler.java:[line 109]<br/>At MovedContextHandler.java:[line 111]<br/>At MovedContextHandler.java:[line 113]<br/>At MovedContextHandler.java:[line 115]<br/>At MovedContextHandler.java:[line 119]<br/>At MovedContextHandler.java:[line 120]<br/>At MovedContextHandler.java:[line 121]<br/>At MovedContextHandler.java:[line 124]<br/>At URIUtil.java:[line 559]<br/>At URIUtil.java:[line 569]<br/>At URIUtil.java:[line 571]<br/>At URIUtil.java:[line 573]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N90185');">
<td>
<span class="priority-2">SECHRS</span>
</td>
<td>This use of javax/servlet/http/HttpServletResponse.setHeader(Ljava/lang/String;Ljava/lang/String;)V might be used to include CRLF characters into HTTP headers</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N90185" style="display: none;">
<a href="#HTTP_RESPONSE_SPLITTING">Bug type HTTP_RESPONSE_SPLITTING (click for details)</a>
<br/>In class org.spark_project.jetty.servlet.DefaultServlet<br/>In method org.spark_project.jetty.servlet.DefaultServlet.passConditionalHeaders(HttpServletRequest, HttpServletResponse, HttpContent)<br/>At DefaultServlet.java:[line 780]<br/>Sink method javax/servlet/http/HttpServletResponse.setHeader(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/http/HttpField._value<br/>Tainted source javax/servlet/http/HttpServletRequest.getHeader(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/http/HttpField.getValue()Ljava/lang/String;<br/>At HttpField.java:[line 70]<br/>At DefaultServlet.java:[line 725]<br/>At DefaultServlet.java:[line 741]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N93063');">
<td>
<span class="priority-2">SECHRS</span>
</td>
<td>This use of javax/servlet/http/HttpServletResponse.setHeader(Ljava/lang/String;Ljava/lang/String;)V might be used to include CRLF characters into HTTP headers</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N93063" style="display: none;">
<a href="#HTTP_RESPONSE_SPLITTING">Bug type HTTP_RESPONSE_SPLITTING (click for details)</a>
<br/>In class org.spark_project.jetty.servlets.CrossOriginFilter<br/>In method org.spark_project.jetty.servlets.CrossOriginFilter.handle(HttpServletRequest, HttpServletResponse, FilterChain)<br/>At CrossOriginFilter.java:[line 295]<br/>Sink method javax/servlet/http/HttpServletResponse.setHeader(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source javax/servlet/http/HttpServletRequest.getHeader(Ljava/lang/String;)Ljava/lang/String;<br/>At CrossOriginFilter.java:[line 267]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N93142');">
<td>
<span class="priority-2">SECHRS</span>
</td>
<td>This use of javax/servlet/http/HttpServletResponse.setHeader(Ljava/lang/String;Ljava/lang/String;)V might be used to include CRLF characters into HTTP headers</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N93142" style="display: none;">
<a href="#HTTP_RESPONSE_SPLITTING">Bug type HTTP_RESPONSE_SPLITTING (click for details)</a>
<br/>In class org.spark_project.jetty.servlets.CrossOriginFilter<br/>In method org.spark_project.jetty.servlets.CrossOriginFilter.handlePreflightResponse(HttpServletRequest, HttpServletResponse, String)<br/>At CrossOriginFilter.java:[line 418]<br/>Sink method javax/servlet/http/HttpServletResponse.setHeader(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/servlets/CrossOriginFilter.handlePreflightResponse(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;)V parameter 0<br/>Method usage with tainted arguments detected<br/>At CrossOriginFilter.java:[line 267]<br/>At CrossOriginFilter.java:[line 281]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N93236');">
<td>
<span class="priority-2">SECHRS</span>
</td>
<td>This use of javax/servlet/http/HttpServletResponse.setHeader(Ljava/lang/String;Ljava/lang/String;)V might be used to include CRLF characters into HTTP headers</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N93236" style="display: none;">
<a href="#HTTP_RESPONSE_SPLITTING">Bug type HTTP_RESPONSE_SPLITTING (click for details)</a>
<br/>In class org.spark_project.jetty.servlets.CrossOriginFilter<br/>In method org.spark_project.jetty.servlets.CrossOriginFilter.handleSimpleResponse(HttpServletRequest, HttpServletResponse, String)<br/>At CrossOriginFilter.java:[line 398]<br/>Sink method javax/servlet/http/HttpServletResponse.setHeader(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/servlets/CrossOriginFilter.handleSimpleResponse(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;)V parameter 0<br/>Method usage with tainted arguments detected<br/>At CrossOriginFilter.java:[line 267]<br/>At CrossOriginFilter.java:[line 276]<br/>At CrossOriginFilter.java:[line 290]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N84289');">
<td>
<span class="priority-2">SECIC</span>
</td>
<td>Cookie without the secure flag could be sent in clear text if a HTTP URL is visited</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N84289" style="display: none;">
<a href="#INSECURE_COOKIE">Bug type INSECURE_COOKIE (click for details)</a>
<br/>In class org.spark_project.jetty.server.CookieCutter<br/>In method org.spark_project.jetty.server.CookieCutter.parseFields()<br/>At CookieCutter.java:[line 307]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N99353');">
<td>
<span class="priority-2">SECLDAPI</span>
</td>
<td>This use of javax/naming/ldap/LdapName.&lt;init&gt;(Ljava/lang/String;)V can be vulnerable to LDAP injection</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N99353" style="display: none;">
<a href="#LDAP_INJECTION">Bug type LDAP_INJECTION (click for details)</a>
<br/>In class org.spark_project.jetty.util.ssl.X509<br/>In method new org.spark_project.jetty.util.ssl.X509(String, X509Certificate)<br/>At X509.java:[line 93]<br/>Sink method javax/naming/ldap/LdapName.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javax/security/auth/x500/X500Principal.getName(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N83853');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N83853" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.spark_project.jetty.security.authentication.DigestAuthenticator$Digest<br/>In method org.spark_project.jetty.security.authentication.DigestAuthenticator$Digest.check(Object)<br/>At DigestAuthenticator.java:[line 339]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N99075');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N99075" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.spark_project.jetty.util.security.Credential$MD5<br/>In method org.spark_project.jetty.util.security.Credential$MD5.check(Object)<br/>At Credential.java:[line 184]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N99133');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N99133" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.spark_project.jetty.util.security.Credential$MD5<br/>In method org.spark_project.jetty.util.security.Credential$MD5.digest(String)<br/>At Credential.java:[line 226]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65551');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.apache.spark.MapOutputTracker$$anonfun$deserializeObject$1$2.apply()</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65551" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.apache.spark.MapOutputTracker$$anonfun$deserializeObject$1$2<br/>In method org.apache.spark.MapOutputTracker$$anonfun$deserializeObject$1$2.apply()<br/>At MapOutputTracker.scala:[line 833]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65605');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.apache.spark.RangePartitioner$$anonfun$readObject$1.apply$mcV$sp()</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65605" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.apache.spark.RangePartitioner$$anonfun$readObject$1<br/>In method org.apache.spark.RangePartitioner$$anonfun$readObject$1.apply$mcV$sp()<br/>At Partitioner.scala:[line 278]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65659');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.apache.spark.RangePartitioner$$anonfun$readObject$1.apply$mcV$sp()</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65659" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.apache.spark.RangePartitioner$$anonfun$readObject$1<br/>In method org.apache.spark.RangePartitioner$$anonfun$readObject$1.apply$mcV$sp()<br/>At Partitioner.scala:[line 279]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76568');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.apache.spark.serializer.JavaDeserializationStream.readObject(ClassTag)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76568" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.apache.spark.serializer.JavaDeserializationStream<br/>In method org.apache.spark.serializer.JavaDeserializationStream.readObject(ClassTag)<br/>At JavaSerializer.scala:[line 75]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67592');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.apache.spark.ThrowableSerializationWrapper.readObject(ObjectInputStream)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67592" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.apache.spark.ThrowableSerializationWrapper<br/>In method org.apache.spark.ThrowableSerializationWrapper.readObject(ObjectInputStream)<br/>At TaskEndReason.scala:[line 193]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77671');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.apache.spark.util.Utils$.deserialize(byte[])</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77671" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.apache.spark.util.Utils$<br/>In method org.apache.spark.util.Utils$.deserialize(byte[])<br/>At Utils.scala:[line 156]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77725');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.apache.spark.util.Utils$.deserialize(byte[], ClassLoader)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77725" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.apache.spark.util.Utils$<br/>In method org.apache.spark.util.Utils$.deserialize(byte[], ClassLoader)<br/>At Utils.scala:[line 169]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N86826');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.spark_project.jetty.server.session.HashSessionManager.restoreSessionAttributes(InputStream, int, HashedSession)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N86826" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.HashSessionManager<br/>In method org.spark_project.jetty.server.session.HashSessionManager.restoreSessionAttributes(InputStream, int, HashedSession)<br/>At HashSessionManager.java:[line 691]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N89951');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.spark_project.jetty.server.session.JDBCSessionManager$1.run()</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N89951" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.JDBCSessionManager$1<br/>In method org.spark_project.jetty.server.session.JDBCSessionManager$1.run()<br/>At JDBCSessionManager.java:[line 970]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75462');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75462" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.spark.rdd.PartitionwiseSampledRDD<br/>In method org.apache.spark.rdd.PartitionwiseSampledRDD.getPartitions()<br/>At PartitionwiseSampledRDD.scala:[line 57]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75915');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75915" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.spark.rdd.RDD$$anonfun$coalesce$1$$anonfun$8<br/>In method org.apache.spark.rdd.RDD$$anonfun$coalesce$1$$anonfun$8.apply(int, Iterator)<br/>At RDD.scala:[line 454]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75973');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75973" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.spark.rdd.RDD$$anonfun$takeSample$1<br/>In method org.apache.spark.rdd.RDD$$anonfun$takeSample$1.apply()<br/>At RDD.scala:[line 576]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N82025');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N82025" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.spark.util.random.XORShiftRandom<br/>In method new org.apache.spark.util.random.XORShiftRandom(long)<br/>At XORShiftRandom.scala:[line 38]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N82083');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N82083" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.spark.util.random.XORShiftRandom$<br/>In method org.apache.spark.util.random.XORShiftRandom$.benchmark(int)<br/>At XORShiftRandom.scala:[line 94]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77490');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77490" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.spark.util.SizeEstimator$<br/>In method org.apache.spark.util.SizeEstimator$.visitArray(Object, Class, SizeEstimator$SearchState)<br/>At SizeEstimator.scala:[line 259]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N80057');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N80057" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.spark.util.Utils$<br/>In method new org.apache.spark.util.Utils$()<br/>At Utils.scala:[line 82]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N80115');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N80115" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.spark.util.Utils$<br/>In method org.apache.spark.util.Utils$.randomizeInPlace$default$2()<br/>At Utils.scala:[line 925]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N82199');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N82199" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.spark_project.jetty.client.util.DigestAuthentication$DigestResult<br/>In method org.spark_project.jetty.client.util.DigestAuthentication$DigestResult.newClientNonce()<br/>At DigestAuthentication.java:[line 265]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N82257');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N82257" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.spark_project.jetty.client.util.MultiPartContentProvider<br/>In method org.spark_project.jetty.client.util.MultiPartContentProvider.makeBoundary()<br/>At MultiPartContentProvider.java:[line 101]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N83074');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N83074" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.spark_project.jetty.plus.webapp.PlusConfiguration<br/>In method org.spark_project.jetty.plus.webapp.PlusConfiguration.lockCompEnv(WebAppContext)<br/>At PlusConfiguration.java:[line 108]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N86768');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N86768" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.AbstractSessionIdManager<br/>In method org.spark_project.jetty.server.session.AbstractSessionIdManager.initRandom()<br/>At AbstractSessionIdManager.java:[line 237]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N84397');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N84397" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.spark_project.jetty.server.ShutdownMonitor<br/>In method org.spark_project.jetty.server.ShutdownMonitor.listen()<br/>At ShutdownMonitor.java:[line 285]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74161');">
<td>
<span class="priority-2">SECPRS</span>
</td>
<td>This Scala random generator (scala.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74161" style="display: none;">
<a href="#PREDICTABLE_RANDOM_SCALA">Bug type PREDICTABLE_RANDOM_SCALA (click for details)</a>
<br/>In class org.apache.spark.deploy.worker.Worker<br/>In method new org.apache.spark.deploy.worker.Worker(RpcEnv, int, int, int, RpcAddress[], String, String, SparkConf, SecurityManager, Supplier)<br/>At Worker.scala:[line 86]<br/>Value scala.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75325');">
<td>
<span class="priority-2">SECPRS</span>
</td>
<td>This Scala random generator (scala.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75325" style="display: none;">
<a href="#PREDICTABLE_RANDOM_SCALA">Bug type PREDICTABLE_RANDOM_SCALA (click for details)</a>
<br/>In class org.apache.spark.rdd.DefaultPartitionCoalescer<br/>In method new org.apache.spark.rdd.DefaultPartitionCoalescer(double)<br/>At CoalescedRDD.scala:[line 163]<br/>Value scala.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76622');">
<td>
<span class="priority-2">SECPRS</span>
</td>
<td>This Scala random generator (scala.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76622" style="display: none;">
<a href="#PREDICTABLE_RANDOM_SCALA">Bug type PREDICTABLE_RANDOM_SCALA (click for details)</a>
<br/>In class org.apache.spark.storage.BasicBlockReplicationPolicy<br/>In method org.apache.spark.storage.BasicBlockReplicationPolicy.prioritize(BlockManagerId, Seq, HashSet, BlockId, int)<br/>At BlockReplicationPolicy.scala:[line 162]<br/>Value scala.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76680');">
<td>
<span class="priority-2">SECPRS</span>
</td>
<td>This Scala random generator (scala.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76680" style="display: none;">
<a href="#PREDICTABLE_RANDOM_SCALA">Bug type PREDICTABLE_RANDOM_SCALA (click for details)</a>
<br/>In class org.apache.spark.storage.BlockManagerMasterEndpoint<br/>In method org.apache.spark.storage.BlockManagerMasterEndpoint.org$apache$spark$storage$BlockManagerMasterEndpoint$$removeBlockManager(BlockManagerId)<br/>At BlockManagerMasterEndpoint.scala:[line 235]<br/>Value scala.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76926');">
<td>
<span class="priority-2">SECPRS</span>
</td>
<td>This Scala random generator (scala.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76926" style="display: none;">
<a href="#PREDICTABLE_RANDOM_SCALA">Bug type PREDICTABLE_RANDOM_SCALA (click for details)</a>
<br/>In class org.apache.spark.storage.RandomBlockReplicationPolicy<br/>In method org.apache.spark.storage.RandomBlockReplicationPolicy.prioritize(BlockManagerId, Seq, HashSet, BlockId, int)<br/>At BlockReplicationPolicy.scala:[line 117]<br/>Value scala.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77348');">
<td>
<span class="priority-2">SECPRS</span>
</td>
<td>This Scala random generator (scala.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77348" style="display: none;">
<a href="#PREDICTABLE_RANDOM_SCALA">Bug type PREDICTABLE_RANDOM_SCALA (click for details)</a>
<br/>In class org.apache.spark.ui.UIWorkloadGenerator$<br/>In method org.apache.spark.ui.UIWorkloadGenerator$.org$apache$spark$ui$UIWorkloadGenerator$$nextFloat$1()<br/>At UIWorkloadGenerator.scala:[line 66]<br/>Value scala.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N81967');">
<td>
<span class="priority-2">SECPRS</span>
</td>
<td>This Scala random generator (scala.util.Random.nextLong()) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N81967" style="display: none;">
<a href="#PREDICTABLE_RANDOM_SCALA">Bug type PREDICTABLE_RANDOM_SCALA (click for details)</a>
<br/>In class org.apache.spark.util.random.SamplingUtils$<br/>In method org.apache.spark.util.random.SamplingUtils$.reservoirSampleAndCount$default$3()<br/>At SamplingUtils.scala:[line 36]<br/>Value scala.util.Random.nextLong()</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N80173');">
<td>
<span class="priority-2">SECPRS</span>
</td>
<td>This Scala random generator (scala.util.Random.nextInt()) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N80173" style="display: none;">
<a href="#PREDICTABLE_RANDOM_SCALA">Bug type PREDICTABLE_RANDOM_SCALA (click for details)</a>
<br/>In class org.apache.spark.util.Utils$<br/>In method org.apache.spark.util.Utils$.getLocalDir(SparkConf)<br/>At Utils.scala:[line 801]<br/>Value scala.util.Random.nextInt()</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67700');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67700" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.api.python.EncryptedPythonBroadcastServer$$anonfun$handleConnection$1$$anonfun$apply$mcV$sp$1<br/>In method org.apache.spark.api.python.EncryptedPythonBroadcastServer$$anonfun$handleConnection$1$$anonfun$apply$mcV$sp$1.apply(Tuple2)<br/>At PythonRDD.scala:[line 889]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/Tuple2._2()Ljava/lang/Object;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67827');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67827" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.api.python.PythonBroadcast<br/>In method org.apache.spark.api.python.PythonBroadcast.finalize()<br/>At PythonRDD.scala:[line 696]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/api/python/PythonBroadcast.path<br/>Unknown source org/apache/spark/api/python/PythonBroadcast.path()Ljava/lang/String;<br/>At PythonRDD.scala:[line 659]<br/>At PythonRDD.scala:[line 696]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67921');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67921" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.api.python.PythonBroadcast$$anon$2<br/>In method org.apache.spark.api.python.PythonBroadcast$$anon$2.handleConnection(Socket)<br/>At PythonRDD.scala:[line 711]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/util/Utils$.localRootDirs<br/>Unknown source org/apache/spark/util/Utils$.localRootDirs()[Ljava/lang/String;<br/>Unknown source org/apache/spark/util/Utils$.getOrCreateLocalRootDirs(Lorg/apache/spark/SparkConf;)[Ljava/lang/String;<br/>Unknown source org/apache/spark/util/Utils$.getLocalDir(Lorg/apache/spark/SparkConf;)Ljava/lang/String;<br/>At PythonRDD.scala:[line 711]<br/>At Utils.scala:[line 94]<br/>At Utils.scala:[line 795]<br/>At Utils.scala:[line 796]<br/>At Utils.scala:[line 828]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68055');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68055" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.api.python.PythonBroadcast$$anon$2<br/>In method org.apache.spark.api.python.PythonBroadcast$$anon$2.handleConnection(Socket)<br/>At PythonRDD.scala:[line 712]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;<br/>Sink parameter 0<br/>Unknown source java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>At PythonRDD.scala:[line 711]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68228');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68228" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.api.python.PythonBroadcast$$anonfun$readObject$1<br/>In method org.apache.spark.api.python.PythonBroadcast$$anonfun$readObject$1.apply$mcJ$sp()<br/>At PythonRDD.scala:[line 680]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/util/Utils$.localRootDirs<br/>Unknown source org/apache/spark/util/Utils$.localRootDirs()[Ljava/lang/String;<br/>Unknown source org/apache/spark/util/Utils$.getOrCreateLocalRootDirs(Lorg/apache/spark/SparkConf;)[Ljava/lang/String;<br/>Unknown source org/apache/spark/util/Utils$.getLocalDir(Lorg/apache/spark/SparkConf;)Ljava/lang/String;<br/>At PythonRDD.scala:[line 680]<br/>At Utils.scala:[line 94]<br/>At Utils.scala:[line 795]<br/>At Utils.scala:[line 796]<br/>At Utils.scala:[line 828]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68362');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68362" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.api.python.PythonBroadcast$$anonfun$readObject$1<br/>In method org.apache.spark.api.python.PythonBroadcast$$anonfun$readObject$1.apply$mcJ$sp()<br/>At PythonRDD.scala:[line 681]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;<br/>Sink parameter 0<br/>Unknown source java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>At PythonRDD.scala:[line 680]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68441');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68441" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.api.python.PythonBroadcast$$anonfun$writeObject$1<br/>In method org.apache.spark.api.python.PythonBroadcast$$anonfun$writeObject$1.apply$mcJ$sp()<br/>At PythonRDD.scala:[line 668]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/api/python/PythonBroadcast.path<br/>Unknown source org/apache/spark/api/python/PythonBroadcast.path()Ljava/lang/String;<br/>At PythonRDD.scala:[line 659]<br/>At PythonRDD.scala:[line 668]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68535');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68535" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.api.python.PythonGatewayServer$<br/>In method org.apache.spark.api.python.PythonGatewayServer$.main(String[])<br/>At PythonGatewayServer.scala:[line 64]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/collection/immutable/Map.apply(Ljava/lang/Object;)Ljava/lang/Object;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68604');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68604" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.api.python.PythonRDD$<br/>In method org.apache.spark.api.python.PythonRDD$.readRDDFromFile(JavaSparkContext, String, int)<br/>At PythonRDD.scala:[line 175]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/api/python/PythonRDD$.readRDDFromFile(Lorg/apache/spark/api/java/JavaSparkContext;Ljava/lang/String;I)Lorg/apache/spark/api/java/JavaRDD; parameter 1<br/>Method usage not detected<br/>In PythonRDD.scala<br/>In RRDD.scala<br/>At RRDD.scala:[line 166]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69078');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69078" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.api.r.RBackend$<br/>In method org.apache.spark.api.r.RBackend$.main(String[])<br/>At RBackend.scala:[line 136]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/api/r/RBackend$.main([Ljava/lang/String;)V parameter 0<br/>Unknown source scala/collection/mutable/StringBuilder.append(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;<br/>Unknown source scala/collection/mutable/StringBuilder.toString()Ljava/lang/String;<br/>Method usage not detected<br/>At RBackend.scala:[line 136]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69172');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69172" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.api.r.RBackend$<br/>In method org.apache.spark.api.r.RBackend$.main(String[])<br/>At RBackend.scala:[line 144]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/api/r/RBackend$.main([Ljava/lang/String;)V parameter 0<br/>Unknown source scala/collection/mutable/StringBuilder.append(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;<br/>Method usage not detected<br/>At RBackend.scala:[line 136]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69572');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69572" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.api.r.RUtils$$anonfun$isSparkRInstalled$1<br/>In method org.apache.spark.api.r.RUtils$$anonfun$isSparkRInstalled$1.apply(String)<br/>At RUtils.scala:[line 47]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/collection/TraversableOnce.mkString(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69641');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69641" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.DependencyUtils$<br/>In method org.apache.spark.deploy.DependencyUtils$.addJarToClasspath(String, MutableURLClassLoader)<br/>At DependencyUtils.scala:[line 159]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/util/Utils$.resolveURI(Ljava/lang/String;)Ljava/net/URI;<br/>Unknown source org/apache/spark/deploy/DependencyUtils$.addJarToClasspath(Ljava/lang/String;Lorg/apache/spark/util/MutableURLClassLoader;)V parameter 1<br/>Unknown source java/io/File.toURI()Ljava/net/URI;<br/>Unknown source java/net/URI.getFragment()Ljava/lang/String;<br/>Unknown source org/apache/spark/util/Utils$.resolveURI(Ljava/lang/String;)Ljava/net/URI; parameter 0<br/>Unknown source java/net/URI.getScheme()Ljava/lang/String;<br/>Unknown source java/net/URI.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V<br/>Unknown source java/net/URI.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source java/net/URI.getHost()Ljava/lang/String;<br/>Unknown source java/net/URI.getPath()Ljava/lang/String;<br/>Method usage not detected<br/>In DependencyUtils.scala<br/>At DependencyUtils.scala:[line 156]<br/>At DependencyUtils.scala:[line 159]<br/>At SparkSubmit.scala:[line 803]<br/>At SparkSubmit.scala:[line 804]<br/>At Utils.scala:[line 1991]<br/>At Utils.scala:[line 1999]<br/>At Utils.scala:[line 2000]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69838');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69838" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.DependencyUtils$<br/>In method org.apache.spark.deploy.DependencyUtils$.downloadFile(String, File, SparkConf, Configuration, SecurityManager)<br/>At DependencyUtils.scala:[line 132]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/util/Utils$.resolveURI(Ljava/lang/String;)Ljava/net/URI;<br/>Unknown source java/io/File.toURI()Ljava/net/URI;<br/>Unknown source java/net/URI.getFragment()Ljava/lang/String;<br/>Unknown source org/apache/spark/util/Utils$.resolveURI(Ljava/lang/String;)Ljava/net/URI; parameter 0<br/>Unknown source java/net/URI.getScheme()Ljava/lang/String;<br/>Unknown source java/net/URI.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V<br/>Unknown source java/net/URI.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source java/net/URI.getHost()Ljava/lang/String;<br/>Unknown source org/apache/spark/deploy/DependencyUtils$.downloadFile(Ljava/lang/String;Ljava/io/File;Lorg/apache/spark/SparkConf;Lorg/apache/hadoop/conf/Configuration;Lorg/apache/spark/SecurityManager;)Ljava/lang/String; parameter 4<br/>Unknown source java/net/URI.getPath()Ljava/lang/String;<br/>Method usage not detected<br/>In DependencyUtils.scala<br/>At DependencyUtils.scala:[line 125]<br/>At DependencyUtils.scala:[line 132]<br/>At SparkSubmit.scala:[line 400]<br/>At SparkSubmit.scala:[line 408]<br/>At SparkSubmit.scala:[line 411]<br/>At SparkSubmit.scala:[line 414]<br/>At SparkSubmit.scala:[line 417]<br/>At SparkSubmit.scala:[line 367]<br/>At Utils.scala:[line 1991]<br/>At Utils.scala:[line 1999]<br/>At Utils.scala:[line 2000]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70075');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70075" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.DependencyUtils$<br/>In method org.apache.spark.deploy.DependencyUtils$.downloadFile(String, File, SparkConf, Configuration, SecurityManager)<br/>At DependencyUtils.scala:[line 133]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72199');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72199" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.history.FsHistoryProvider$$anonfun$2<br/>In method org.apache.spark.deploy.history.FsHistoryProvider$$anonfun$2.apply(String)<br/>At FsHistoryProvider.scala:[line 130]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/deploy/history/FsHistoryProvider$$anonfun$2.apply(Ljava/lang/String;)Ljava/io/File; parameter 0<br/>Method usage not detected<br/>At FsHistoryProvider.scala:[line 130]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72558');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72558" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.history.HistoryServerDiskManager<br/>In method org.apache.spark.deploy.history.HistoryServerDiskManager.org$apache$spark$deploy$history$HistoryServerDiskManager$$appStorePath(String, Option)<br/>At HistoryServerDiskManager.scala:[line 239]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/Option.getOrElse(Lscala/Function0;)Ljava/lang/Object;<br/>Unknown source scala/collection/mutable/StringBuilder.append(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;<br/>Unknown source scala/collection/mutable/StringBuilder.toString()Ljava/lang/String;<br/>Unknown source org/apache/spark/deploy/history/HistoryServerDiskManager.org$apache$spark$deploy$history$HistoryServerDiskManager$$appStorePath(Ljava/lang/String;Lscala/Option;)Ljava/io/File; parameter 1<br/>At FsHistoryProvider.scala:[line 337]<br/>At FsHistoryProvider.scala:[line 934]<br/>At FsHistoryProvider.scala:[line 956]<br/>At HistoryServerDiskManager.scala:[line 127]<br/>At HistoryServerDiskManager.scala:[line 238]<br/>At HistoryServerDiskManager.scala:[line 243]<br/>At HistoryServerDiskManager.scala:[line 156]<br/>At HistoryServerDiskManager.scala:[line 274]<br/>At HistoryServerDiskManager.scala:[line 277]<br/>At HistoryServerDiskManager.scala:[line 301]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72742');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72742" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.history.HistoryServerDiskManager$$anonfun$1<br/>In method org.apache.spark.deploy.history.HistoryServerDiskManager$$anonfun$1.apply(ApplicationStoreInfo)<br/>At HistoryServerDiskManager.scala:[line 80]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/deploy/history/ApplicationStoreInfo.path()Ljava/lang/String;<br/>Unknown source org/apache/spark/deploy/history/ApplicationStoreInfo.path<br/>At HistoryServerDiskManager.scala:[line 320]<br/>At HistoryServerDiskManager.scala:[line 80]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72836');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72836" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.history.HistoryServerDiskManager$$anonfun$2<br/>In method org.apache.spark.deploy.history.HistoryServerDiskManager$$anonfun$2.apply(ApplicationStoreInfo)<br/>At HistoryServerDiskManager.scala:[line 224]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/deploy/history/ApplicationStoreInfo.path()Ljava/lang/String;<br/>Unknown source org/apache/spark/deploy/history/ApplicationStoreInfo.path<br/>At HistoryServerDiskManager.scala:[line 320]<br/>At HistoryServerDiskManager.scala:[line 224]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72930');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72930" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.master.FileSystemPersistenceEngine<br/>In method new org.apache.spark.deploy.master.FileSystemPersistenceEngine(String, Serializer)<br/>At FileSystemPersistenceEngine.scala:[line 41]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/deploy/master/FileSystemPersistenceEngine.&lt;init&gt;(Ljava/lang/String;Lorg/apache/spark/serializer/Serializer;)V parameter 1<br/>At RecoveryModeFactory.scala:[line 55]<br/>At RecoveryModeFactory.scala:[line 59]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73019');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73019" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.master.FileSystemPersistenceEngine<br/>In method org.apache.spark.deploy.master.FileSystemPersistenceEngine.persist(String, Object)<br/>At FileSystemPersistenceEngine.scala:[line 44]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/deploy/master/FileSystemPersistenceEngine.persist(Ljava/lang/String;Ljava/lang/Object;)V parameter 1<br/>Unknown source org/apache/spark/deploy/master/FileSystemPersistenceEngine.dir()Ljava/lang/String;<br/>Unknown source scala/collection/mutable/StringBuilder.append(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;<br/>Unknown source scala/collection/mutable/StringBuilder.toString()Ljava/lang/String;<br/>Unknown source org/apache/spark/deploy/master/FileSystemPersistenceEngine.dir<br/>Method usage not detected<br/>At FileSystemPersistenceEngine.scala:[line 37]<br/>At FileSystemPersistenceEngine.scala:[line 44]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73133');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73133" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.master.FileSystemPersistenceEngine<br/>In method org.apache.spark.deploy.master.FileSystemPersistenceEngine.read(String, ClassTag)<br/>At FileSystemPersistenceEngine.scala:[line 55]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/deploy/master/FileSystemPersistenceEngine.dir()Ljava/lang/String;<br/>Unknown source org/apache/spark/deploy/master/FileSystemPersistenceEngine.dir<br/>At FileSystemPersistenceEngine.scala:[line 37]<br/>At FileSystemPersistenceEngine.scala:[line 55]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73227');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73227" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.master.FileSystemPersistenceEngine<br/>In method org.apache.spark.deploy.master.FileSystemPersistenceEngine.unpersist(String)<br/>At FileSystemPersistenceEngine.scala:[line 48]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/deploy/master/FileSystemPersistenceEngine.dir()Ljava/lang/String;<br/>Unknown source scala/collection/mutable/StringBuilder.append(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;<br/>Unknown source scala/collection/mutable/StringBuilder.toString()Ljava/lang/String;<br/>Unknown source org/apache/spark/deploy/master/FileSystemPersistenceEngine.unpersist(Ljava/lang/String;)V parameter 0<br/>Unknown source org/apache/spark/deploy/master/FileSystemPersistenceEngine.dir<br/>Method usage not detected<br/>At FileSystemPersistenceEngine.scala:[line 37]<br/>At FileSystemPersistenceEngine.scala:[line 48]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70351');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70351" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.PythonRunner$$anonfun$6<br/>In method org.apache.spark.deploy.PythonRunner$$anonfun$6.apply()<br/>At PythonRunner.scala:[line 126]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/deploy/PythonRunner$$anonfun$6.path$1<br/>At PythonRunner.scala:[line 126]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70430');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70430" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.PythonRunner$$anonfun$resolvePyFiles$1<br/>In method org.apache.spark.deploy.PythonRunner$$anonfun$resolvePyFiles$1.apply(String)<br/>At PythonRunner.scala:[line 170]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/deploy/PythonRunner$$anonfun$resolvePyFiles$1.apply(Ljava/lang/String;)Lscala/collection/Iterable; parameter 0<br/>Method usage not detected<br/>At PythonRunner.scala:[line 164]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70514');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70514" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.PythonRunner$$anonfun$resolvePyFiles$1<br/>In method org.apache.spark.deploy.PythonRunner$$anonfun$resolvePyFiles$1.apply(String)<br/>At PythonRunner.scala:[line 172]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70706');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70706" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.RPackageUtils$<br/>In method org.apache.spark.deploy.RPackageUtils$.org$apache$spark$deploy$RPackageUtils$$extractRFolder(JarFile, PrintStream, boolean)<br/>At RPackageUtils.scala:[line 151]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/util/jar/JarEntry.getName()Ljava/lang/String;<br/>At RPackageUtils.scala:[line 149]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70785');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70785" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.RPackageUtils$<br/>In method org.apache.spark.deploy.RPackageUtils$.org$apache$spark$deploy$RPackageUtils$$extractRFolder(JarFile, PrintStream, boolean)<br/>At RPackageUtils.scala:[line 158]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/util/jar/JarEntry.getName()Ljava/lang/String;<br/>At RPackageUtils.scala:[line 149]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70864');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70864" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.RPackageUtils$<br/>In method org.apache.spark.deploy.RPackageUtils$.zipRLibraries(File, String)<br/>At RPackageUtils.scala:[line 235]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/deploy/RPackageUtils$.zipRLibraries(Ljava/io/File;Ljava/lang/String;)Ljava/io/File; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70938');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/net/URI;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70938" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.RPackageUtils$$anonfun$checkAndBuildRPackage$1<br/>In method org.apache.spark.deploy.RPackageUtils$$anonfun$checkAndBuildRPackage$1.apply(String)<br/>At RPackageUtils.scala:[line 179]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/net/URI;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/util/Utils$.resolveURI(Ljava/lang/String;)Ljava/net/URI;<br/>Unknown source org/apache/spark/deploy/RPackageUtils$$anonfun$checkAndBuildRPackage$1.apply(Ljava/lang/String;)V parameter 0<br/>Unknown source java/io/File.toURI()Ljava/net/URI;<br/>Unknown source java/net/URI.getFragment()Ljava/lang/String;<br/>Unknown source org/apache/spark/util/Utils$.resolveURI(Ljava/lang/String;)Ljava/net/URI; parameter 0<br/>Unknown source java/net/URI.getScheme()Ljava/lang/String;<br/>Unknown source java/net/URI.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V<br/>Unknown source java/net/URI.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source java/net/URI.getHost()Ljava/lang/String;<br/>Unknown source java/net/URI.getPath()Ljava/lang/String;<br/>Method usage not detected<br/>At RPackageUtils.scala:[line 178]<br/>At RPackageUtils.scala:[line 179]<br/>At Utils.scala:[line 1991]<br/>At Utils.scala:[line 1999]<br/>At Utils.scala:[line 2000]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71176');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71176" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.RRunner$<br/>In method org.apache.spark.deploy.RRunner$.main(String[])<br/>At RRunner.scala:[line 60]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/deploy/RRunner$.main([Ljava/lang/String;)V parameter 0<br/>Unknown source org/apache/spark/deploy/PythonRunner$.formatPath(Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source scala/util/Try.getOrElse(Lscala/Function0;)Ljava/lang/Object;<br/>Unknown source org/apache/spark/deploy/PythonRunner$.formatPath(Ljava/lang/String;Z)Ljava/lang/String;<br/>Unknown source scala/collection/immutable/StringOps.stripPrefix(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source java/net/URI.getPath()Ljava/lang/String;<br/>Method usage with tainted arguments detected<br/>At PythonRunner.scala:[line 129]<br/>In RRunner.scala<br/>At RRunner.scala:[line 37]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71303');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71303" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.SparkDocker$<br/>In method org.apache.spark.deploy.SparkDocker$.startNode(ProcessBuilder)<br/>At FaultToleranceTest.scala:[line 411]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;<br/>Sink parameter 0<br/>Unknown source org/apache/spark/util/Utils$.createDirectory(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;<br/>Unknown source org/apache/spark/util/Utils$.createTempDir(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;<br/>Unknown source java/io/File.getCanonicalFile()Ljava/io/File;<br/>At FaultToleranceTest.scala:[line 411]<br/>At Utils.scala:[line 332]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71402');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71402" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.SparkHadoopUtil<br/>In method org.apache.spark.deploy.SparkHadoopUtil.loginUserFromKeytab(String, String)<br/>At SparkHadoopUtil.scala:[line 133]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/deploy/SparkHadoopUtil.loginUserFromKeytab(Ljava/lang/String;Ljava/lang/String;)V parameter 0<br/>At HistoryServer.scala:[line 325]<br/>At HistoryServer.scala:[line 326]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71491');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71491" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.SparkSubmit<br/>In method org.apache.spark.deploy.SparkSubmit.org$apache$spark$deploy$SparkSubmit$$downloadResource$1(String, SparkConf, Configuration, File, ObjectRef, Seq, VolatileByteRef)<br/>At SparkSubmit.scala:[line 396]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/fs/Path.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71560');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71560" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.SparkSubmitArguments<br/>In method org.apache.spark.deploy.SparkSubmitArguments.loadEnvironmentArguments()<br/>At SparkSubmitArguments.scala:[line 241]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/deploy/SparkSubmitArguments.primaryResource()Ljava/lang/String;<br/>Unknown source org/apache/spark/deploy/SparkSubmitArguments.primaryResource<br/>At SparkSubmitArguments.scala:[line 60]<br/>At SparkSubmitArguments.scala:[line 241]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71654');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71654" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.SparkSubmitUtils$<br/>In method org.apache.spark.deploy.SparkSubmitUtils$.loadIvySettings(String, Option, Option)<br/>At SparkSubmit.scala:[line 1164]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/deploy/SparkSubmitUtils$.loadIvySettings(Ljava/lang/String;Lscala/Option;Lscala/Option;)Lorg/apache/ivy/core/settings/IvySettings; parameter 2<br/>At DependencyUtils.scala:[line 48]<br/>In SparkSubmit.scala</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71741');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71741" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.SparkSubmitUtils$$anonfun$clearIvyResolutionFiles$1<br/>In method org.apache.spark.deploy.SparkSubmitUtils$$anonfun$clearIvyResolutionFiles$1.apply(String)<br/>At SparkSubmit.scala:[line 1240]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/deploy/SparkSubmitUtils$$anonfun$clearIvyResolutionFiles$1.apply(Ljava/lang/String;)Z parameter 0<br/>Method usage not detected<br/>At SparkSubmit.scala:[line 1239]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71825');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71825" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.SparkSubmitUtils$$anonfun$processIvyPathArg$2<br/>In method org.apache.spark.deploy.SparkSubmitUtils$$anonfun$processIvyPathArg$2.apply(String)<br/>At SparkSubmit.scala:[line 1182]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/deploy/SparkSubmitUtils$$anonfun$processIvyPathArg$2.apply(Ljava/lang/String;)V parameter 0<br/>Method usage not detected<br/>At SparkSubmit.scala:[line 1181]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71909');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71909" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.SparkSubmitUtils$$anonfun$processIvyPathArg$2<br/>In method org.apache.spark.deploy.SparkSubmitUtils$$anonfun$processIvyPathArg$2.apply(String)<br/>At SparkSubmit.scala:[line 1183]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 1<br/>Unknown source org/apache/spark/deploy/SparkSubmitUtils$$anonfun$processIvyPathArg$2.apply(Ljava/lang/String;)V parameter 0<br/>Method usage not detected<br/>At SparkSubmit.scala:[line 1181]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73791');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73791" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.worker.DriverRunner<br/>In method org.apache.spark.deploy.worker.DriverRunner.createWorkingDirectory()<br/>At DriverRunner.scala:[line 139]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/deploy/worker/DriverRunner.driverId()Ljava/lang/String;<br/>Unknown source org/apache/spark/deploy/worker/DriverRunner.driverId<br/>At DriverRunner.scala:[line 43]<br/>At DriverRunner.scala:[line 139]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73885');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73885" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.worker.DriverRunner<br/>In method org.apache.spark.deploy.worker.DriverRunner.downloadUserJar(File)<br/>At DriverRunner.scala:[line 152]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/collection/mutable/ArrayOps.last()Ljava/lang/Object;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73954');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73954" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.worker.DriverWrapper$<br/>In method org.apache.spark.deploy.worker.DriverWrapper$.main(String[])<br/>At DriverWrapper.scala:[line 52]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/collection/immutable/$colon$colon.head()Ljava/lang/Object;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74501');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74501" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.worker.ui.LogPage<br/>In method new org.apache.spark.deploy.worker.ui.LogPage(WorkerWebUI)<br/>At LogPage.scala:[line 32]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.toURI()Ljava/net/URI;<br/>Unknown source java/net/URI.normalize()Ljava/net/URI;<br/>Unknown source java/net/URI.getPath()Ljava/lang/String;<br/>At LogPage.scala:[line 32]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74590');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74590" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.worker.ui.LogPage<br/>In method org.apache.spark.deploy.worker.ui.LogPage.getLog(String, String, Option, int)<br/>At LogPage.scala:[line 137]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/deploy/worker/ui/LogPage.getLog(Ljava/lang/String;Ljava/lang/String;Lscala/Option;I)Lscala/Tuple4; parameter 3<br/>At LogPage.scala:[line 49]<br/>At LogPage.scala:[line 51]<br/>At LogPage.scala:[line 56]<br/>At LogPage.scala:[line 81]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74699');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74699" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.worker.ui.LogPage<br/>In method org.apache.spark.deploy.worker.ui.LogPage.getLog(String, String, Option, int)<br/>At LogPage.scala:[line 138]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.toURI()Ljava/net/URI;<br/>Unknown source java/net/URI.normalize()Ljava/net/URI;<br/>Unknown source java/net/URI.getPath()Ljava/lang/String;<br/>At LogPage.scala:[line 137]<br/>At LogPage.scala:[line 138]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74023');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74023" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.worker.Worker<br/>In method new org.apache.spark.deploy.worker.Worker(RpcEnv, int, int, int, RpcAddress[], String, String, SparkConf, SecurityManager, Supplier)<br/>At Worker.scala:[line 132]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/sys/SystemProperties.apply(Ljava/lang/Object;)Ljava/lang/Object;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74092');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74092" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.worker.Worker<br/>In method new org.apache.spark.deploy.worker.Worker(RpcEnv, int, int, int, RpcAddress[], String, String, SparkConf, SecurityManager, Supplier)<br/>At Worker.scala:[line 134]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/Option.getOrElse(Lscala/Function0;)Ljava/lang/Object;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74219');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74219" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.worker.Worker$$anonfun$createWorkDir$1<br/>In method org.apache.spark.deploy.worker.Worker$$anonfun$createWorkDir$1.apply(String)<br/>At Worker.scala:[line 188]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/deploy/worker/Worker$$anonfun$createWorkDir$1.apply(Ljava/lang/String;)Ljava/io/File; parameter 0<br/>Method usage not detected<br/>At Worker.scala:[line 188]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74303');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74303" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.worker.Worker$$anonfun$org$apache$spark$deploy$worker$Worker$$maybeCleanupApplication$1$$anonfun$apply$1$$anonfun$apply$mcV$sp$10<br/>In method org.apache.spark.deploy.worker.Worker$$anonfun$org$apache$spark$deploy$worker$Worker$$maybeCleanupApplication$1$$anonfun$apply$1$$anonfun$apply$mcV$sp$10.apply(String)<br/>At Worker.scala:[line 642]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/deploy/worker/Worker$$anonfun$org$apache$spark$deploy$worker$Worker$$maybeCleanupApplication$1$$anonfun$apply$1$$anonfun$apply$mcV$sp$10.apply(Ljava/lang/String;)V parameter 0<br/>Method usage not detected<br/>At Worker.scala:[line 641]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74387');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74387" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.deploy.worker.Worker$$anonfun$receive$1<br/>In method org.apache.spark.deploy.worker.Worker$$anonfun$receive$1.applyOrElse(Object, Function1)<br/>At Worker.scala:[line 497]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/deploy/DeployMessages$LaunchExecutor.appId<br/>Unknown source scala/collection/mutable/StringBuilder.append(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;<br/>Unknown source org/apache/spark/deploy/DeployMessages$LaunchExecutor.appId()Ljava/lang/String;<br/>Unknown source scala/collection/mutable/StringBuilder.toString()Ljava/lang/String;<br/>At DeployMessage.scala:[line 115]<br/>At Worker.scala:[line 489]<br/>At Worker.scala:[line 497]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74798');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74798" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.executor.Executor$$anonfun$15<br/>In method org.apache.spark.executor.Executor$$anonfun$15.apply(String)<br/>At Executor.scala:[line 747]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/collection/mutable/ArrayOps.last()Ljava/lang/Object;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74867');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74867" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.executor.Executor$$anonfun$org$apache$spark$executor$Executor$$updateDependencies$3<br/>In method org.apache.spark.executor.Executor$$anonfun$org$apache$spark$executor$Executor$$updateDependencies$3.apply(Tuple2)<br/>At Executor.scala:[line 793]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/SparkFiles$.getRootDirectory()Ljava/lang/String;<br/>Unknown source scala/Option.getOrElse(Lscala/Function0;)Ljava/lang/Object;<br/>At Executor.scala:[line 793]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74951');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74951" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.executor.Executor$$anonfun$org$apache$spark$executor$Executor$$updateDependencies$5<br/>In method org.apache.spark.executor.Executor$$anonfun$org$apache$spark$executor$Executor$$updateDependencies$5.apply(Tuple2)<br/>At Executor.scala:[line 805]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/SparkFiles$.getRootDirectory()Ljava/lang/String;<br/>Unknown source scala/Option.getOrElse(Lscala/Function0;)Ljava/lang/Object;<br/>At Executor.scala:[line 805]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75035');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75035" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.executor.Executor$$anonfun$org$apache$spark$executor$Executor$$updateDependencies$5<br/>In method org.apache.spark.executor.Executor$$anonfun$org$apache$spark$executor$Executor$$updateDependencies$5.apply(Tuple2)<br/>At Executor.scala:[line 809]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/collection/mutable/ArrayOps.last()Ljava/lang/Object;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75162');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75162" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.metrics.MetricsConfig<br/>In method org.apache.spark.metrics.MetricsConfig.loadPropertiesFromFile(Option)<br/>At MetricsConfig.scala:[line 132]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/Some.x()Ljava/lang/Object;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75231');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75231" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.metrics.sink.CsvSink<br/>In method new org.apache.spark.metrics.sink.CsvSink(Properties, MetricRegistry, SecurityManager)<br/>At CsvSink.scala:[line 60]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/metrics/sink/CsvSink.pollDir()Ljava/lang/String;<br/>Unknown source org/apache/spark/metrics/sink/CsvSink.pollDir<br/>At CsvSink.scala:[line 51]<br/>At CsvSink.scala:[line 60]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75589');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75589" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.rdd.PipedRDD$$anon$1$$anonfun$cleanup$1<br/>In method org.apache.spark.rdd.PipedRDD$$anon$1$$anonfun$cleanup$1.apply$mcV$sp()<br/>At PipedRDD.scala:[line 191]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/rdd/PipedRDD$$anon$1.taskDirectory$1<br/>At PipedRDD.scala:[line 191]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75668');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75668" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.rdd.PipedRDD$$anonfun$compute$4<br/>In method org.apache.spark.rdd.PipedRDD$$anonfun$compute$4.apply(String)<br/>At PipedRDD.scala:[line 99]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/rdd/PipedRDD$$anonfun$compute$4.apply(Ljava/lang/String;)V parameter 0<br/>Method usage not detected<br/>At PipedRDD.scala:[line 98]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75752');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75752" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.rdd.PipedRDD$$anonfun$compute$4<br/>In method org.apache.spark.rdd.PipedRDD$$anonfun$compute$4.apply(String)<br/>At PipedRDD.scala:[line 100]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getAbsolutePath()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75821');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75821" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.rdd.PipedRDD$$anonfun$compute$4<br/>In method org.apache.spark.rdd.PipedRDD$$anonfun$compute$4.apply(String)<br/>At PipedRDD.scala:[line 101]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getName()Ljava/lang/String;<br/>Unknown source scala/collection/mutable/StringBuilder.append(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;<br/>Unknown source org/apache/spark/rdd/PipedRDD$$anonfun$compute$4.taskDirectory$1<br/>Unknown source scala/collection/mutable/StringBuilder.toString()Ljava/lang/String;<br/>At PipedRDD.scala:[line 101]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76031');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76031" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.rpc.netty.NettyStreamManager<br/>In method org.apache.spark.rpc.netty.NettyStreamManager.openStream(String)<br/>At NettyStreamManager.scala:[line 58]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/Tuple2._2()Ljava/lang/Object;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76184');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76184" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.scheduler.FairSchedulableBuilder$$anonfun$buildPools$1<br/>In method org.apache.spark.scheduler.FairSchedulableBuilder$$anonfun$buildPools$1.apply(String)<br/>At SchedulableBuilder.scala:[line 77]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/scheduler/FairSchedulableBuilder$$anonfun$buildPools$1.apply(Ljava/lang/String;)Lscala/Some; parameter 0<br/>Method usage not detected<br/>At SchedulableBuilder.scala:[line 76]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76268');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76268" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.scheduler.local.LocalSchedulerBackend$$anonfun$getUserClasspath$3<br/>In method org.apache.spark.scheduler.local.LocalSchedulerBackend$$anonfun$getUserClasspath$3.apply(String)<br/>At LocalSchedulerBackend.scala:[line 120]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/scheduler/local/LocalSchedulerBackend$$anonfun$getUserClasspath$3.apply(Ljava/lang/String;)Ljava/net/URL; parameter 0<br/>Method usage not detected<br/>At LocalSchedulerBackend.scala:[line 120]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65881');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65881" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.SparkContext<br/>In method org.apache.spark.SparkContext.addFile(String, boolean)<br/>At SparkContext.scala:[line 1532]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/SparkContext.addFile(Ljava/lang/String;Z)V parameter 1<br/>Method usage not detected<br/>At SparkContext.scala:[line 1508]<br/>At JavaSparkContext.scala:[line 675]<br/>At JavaSparkContext.scala:[line 690]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65985');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65985" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.SparkContext<br/>In method org.apache.spark.SparkContext.addFile(String, boolean)<br/>At SparkContext.scala:[line 1559]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/fs/Path.toUri()Ljava/net/URI;<br/>Unknown source java/net/URI.getPath()Ljava/lang/String;<br/>At SparkContext.scala:[line 1559]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66069');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66069" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.SparkContext<br/>In method org.apache.spark.SparkContext.addFile(String, boolean)<br/>At SparkContext.scala:[line 1568]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/SparkFiles$.getRootDirectory()Ljava/lang/String;<br/>Unknown source scala/Option.getOrElse(Lscala/Function0;)Ljava/lang/Object;<br/>At SparkContext.scala:[line 1568]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66153');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66153" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.SparkContext<br/>In method org.apache.spark.SparkContext.addJar(String)<br/>At SparkContext.scala:[line 1857]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/SparkContext.addJar(Ljava/lang/String;)V parameter 0<br/>Method usage not detected<br/>At JavaSparkContext.scala:[line 701]<br/>At RRDD.scala:[line 143]<br/>At RRDD.scala:[line 144]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66257');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66257" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.SparkContext<br/>In method org.apache.spark.SparkContext.addJar(String)<br/>At SparkContext.scala:[line 1866]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/SparkContext.addJar(Ljava/lang/String;)V parameter 0<br/>Unknown source java/net/URI.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source java/net/URI.getRawPath()Ljava/lang/String;<br/>Method usage not detected<br/>At SparkContext.scala:[line 1859]<br/>At SparkContext.scala:[line 1866]<br/>At JavaSparkContext.scala:[line 701]<br/>At RRDD.scala:[line 143]<br/>At RRDD.scala:[line 144]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66391');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66391" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.SparkContext<br/>In method org.apache.spark.SparkContext.addJar(String)<br/>At SparkContext.scala:[line 1868]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/SparkContext.addJar(Ljava/lang/String;)V parameter 0<br/>Unknown source java/net/URI.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source java/net/URI.getPath()Ljava/lang/String;<br/>Method usage not detected<br/>At SparkContext.scala:[line 1859]<br/>At SparkContext.scala:[line 1868]<br/>At JavaSparkContext.scala:[line 701]<br/>At RRDD.scala:[line 143]<br/>At RRDD.scala:[line 144]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66525');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66525" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.SparkContext$$anonfun$10<br/>In method org.apache.spark.SparkContext$$anonfun$10.apply(String)<br/>At SparkContext.scala:[line 429]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/SparkContext$$anonfun$10.apply(Ljava/lang/String;)Lorg/apache/spark/SparkConf; parameter 0<br/>Method usage not detected<br/>At SparkContext.scala:[line 428]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66609');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66609" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.SparkEnv<br/>In method org.apache.spark.SparkEnv.stop()<br/>At SparkEnv.scala:[line 103]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/Some.x()Ljava/lang/Object;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66678');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66678" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.SparkFiles$<br/>In method org.apache.spark.SparkFiles$.get(String)<br/>At SparkFiles.scala:[line 31]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/SparkFiles$.get(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Method usage not detected<br/>In SparkFiles.scala</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65713');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65713" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.SSLOptions$$anonfun$14<br/>In method org.apache.spark.SSLOptions$$anonfun$14.apply(String)<br/>At SSLOptions.scala:[line 201]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/SSLOptions$$anonfun$14.apply(Ljava/lang/String;)Ljava/io/File; parameter 0<br/>Method usage not detected<br/>At SSLOptions.scala:[line 201]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65797');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65797" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.SSLOptions$$anonfun$6<br/>In method org.apache.spark.SSLOptions$$anonfun$6.apply(String)<br/>At SSLOptions.scala:[line 184]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/SSLOptions$$anonfun$6.apply(Ljava/lang/String;)Ljava/io/File; parameter 0<br/>Method usage not detected<br/>At SSLOptions.scala:[line 184]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76738');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76738" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.storage.DiskBlockManager<br/>In method org.apache.spark.storage.DiskBlockManager.getFile(String)<br/>At DiskBlockManager.scala:[line 68]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/collection/immutable/StringOps.format(Lscala/collection/Seq;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76807');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76807" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.storage.DiskBlockManager<br/>In method org.apache.spark.storage.DiskBlockManager.getFile(String)<br/>At DiskBlockManager.scala:[line 77]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/storage/DiskBlockManager.getFile(Ljava/lang/String;)Ljava/io/File; parameter 0<br/>At DiskBlockManager.scala:[line 80]<br/>At DiskBlockManager.scala:[line 84]<br/>At DiskStore.scala:[line 100]<br/>At DiskStore.scala:[line 116]<br/>At DiskStore.scala:[line 129]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66760');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66760" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.TestUtils$<br/>In method org.apache.spark.TestUtils$.createCompiledClass(String, File, TestUtils$JavaSourceFromString, Seq)<br/>At TestUtils.scala:[line 146]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/TestUtils$.createCompiledClass(Ljava/lang/String;Ljava/io/File;Lorg/apache/spark/TestUtils$JavaSourceFromString;Lscala/collection/Seq;)Ljava/io/File; parameter 3<br/>Unknown source scala/collection/mutable/StringBuilder.append(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;<br/>Unknown source scala/collection/mutable/StringBuilder.toString()Ljava/lang/String;<br/>Method usage not detected<br/>In TestUtils.scala<br/>At TestUtils.scala:[line 145]<br/>At TestUtils.scala:[line 167]<br/>At TestUtils.scala:[line 168]<br/>At TestUtils.scala:[line 169]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66892');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66892" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.TestUtils$<br/>In method org.apache.spark.TestUtils$.createCompiledClass(String, File, TestUtils$JavaSourceFromString, Seq)<br/>At TestUtils.scala:[line 148]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/TestUtils$.createCompiledClass(Ljava/lang/String;Ljava/io/File;Lorg/apache/spark/TestUtils$JavaSourceFromString;Lscala/collection/Seq;)Ljava/io/File; parameter 3<br/>Unknown source scala/collection/mutable/StringBuilder.append(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;<br/>Unknown source scala/collection/mutable/StringBuilder.toString()Ljava/lang/String;<br/>Method usage not detected<br/>In TestUtils.scala<br/>At TestUtils.scala:[line 145]<br/>At TestUtils.scala:[line 167]<br/>At TestUtils.scala:[line 168]<br/>At TestUtils.scala:[line 169]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67024');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67024" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.TestUtils$<br/>In method org.apache.spark.TestUtils$.createJarWithClasses(Seq, String, Seq, Seq)<br/>At TestUtils.scala:[line 71]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/collection/immutable/StringOps.format(Lscala/collection/Seq;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67093');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67093" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.TestUtils$<br/>In method org.apache.spark.TestUtils$.createJarWithFiles(Map, File)<br/>At TestUtils.scala:[line 81]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;<br/>Sink parameter 0<br/>Unknown source scala/Option.getOrElse(Lscala/Function0;)Ljava/lang/Object;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N81297');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N81297" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.logging.RollingFileAppender<br/>In method org.apache.spark.util.logging.RollingFileAppender.moveFile()<br/>At RollingFileAppender.scala:[line 112]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getName()Ljava/lang/String;<br/>Unknown source org/apache/spark/util/logging/RollingPolicy.generateRolledOverFileSuffix()Ljava/lang/String;<br/>Unknown source scala/collection/mutable/StringBuilder.append(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;<br/>Unknown source scala/collection/mutable/StringBuilder.toString()Ljava/lang/String;<br/>At RollingFileAppender.scala:[line 113]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N81391');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N81391" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.logging.RollingFileAppender<br/>In method org.apache.spark.util.logging.RollingFileAppender.moveFile()<br/>At RollingFileAppender.scala:[line 127]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/StringContext.s(Lscala/collection/Seq;)Ljava/lang/String;<br/>Unknown source scala/Predef$.genericWrapArray(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;<br/>At RollingFileAppender.scala:[line 128]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N81475');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N81475" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.logging.RollingFileAppender<br/>In method org.apache.spark.util.logging.RollingFileAppender.rolloverFileExist(File)<br/>At RollingFileAppender.scala:[line 106]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/util/logging/RollingFileAppender$.GZIP_LOG_SUFFIX()Ljava/lang/String;<br/>Unknown source org/apache/spark/util/logging/RollingFileAppender$.GZIP_LOG_SUFFIX<br/>Unknown source scala/collection/mutable/StringBuilder.append(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;<br/>Unknown source java/io/File.getAbsolutePath()Ljava/lang/String;<br/>Unknown source scala/collection/mutable/StringBuilder.toString()Ljava/lang/String;<br/>At RollingFileAppender.scala:[line 106]<br/>At RollingFileAppender.scala:[line 177]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N81584');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N81584" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.logging.RollingFileAppender<br/>In method org.apache.spark.util.logging.RollingFileAppender.rotateFile(File, File)<br/>At RollingFileAppender.scala:[line 85]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/util/logging/RollingFileAppender$.GZIP_LOG_SUFFIX()Ljava/lang/String;<br/>Unknown source org/apache/spark/util/logging/RollingFileAppender$.GZIP_LOG_SUFFIX<br/>Unknown source scala/collection/mutable/StringBuilder.append(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;<br/>Unknown source java/io/File.getAbsolutePath()Ljava/lang/String;<br/>Unknown source scala/collection/mutable/StringBuilder.toString()Ljava/lang/String;<br/>At RollingFileAppender.scala:[line 85]<br/>At RollingFileAppender.scala:[line 177]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N81693');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N81693" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.logging.RollingFileAppender$<br/>In method org.apache.spark.util.logging.RollingFileAppender$.getSortedRolledOverFiles(String, String)<br/>At RollingFileAppender.scala:[line 186]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/util/logging/RollingFileAppender$.getSortedRolledOverFiles(Ljava/lang/String;Ljava/lang/String;)Lscala/collection/Seq; parameter 1<br/>At LogPage.scala:[line 49]<br/>At LogPage.scala:[line 51]<br/>At LogPage.scala:[line 56]<br/>At LogPage.scala:[line 81]<br/>At LogPage.scala:[line 144]<br/>In RollingFileAppender.scala</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N81820');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N81820" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.logging.RollingFileAppender$<br/>In method org.apache.spark.util.logging.RollingFileAppender$.getSortedRolledOverFiles(String, String)<br/>At RollingFileAppender.scala:[line 191]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/util/logging/RollingFileAppender$.getSortedRolledOverFiles(Ljava/lang/String;Ljava/lang/String;)Lscala/collection/Seq; parameter 0<br/>At LogPage.scala:[line 41]<br/>At LogPage.scala:[line 56]<br/>At LogPage.scala:[line 66]<br/>At LogPage.scala:[line 81]<br/>At LogPage.scala:[line 132]<br/>At LogPage.scala:[line 144]<br/>At UIUtils.scala:[line 566]<br/>In RollingFileAppender.scala</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77406');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77406" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.ShutdownHookManager$$anonfun$1$$anonfun$apply$mcV$sp$3<br/>In method org.apache.spark.util.ShutdownHookManager$$anonfun$1$$anonfun$apply$mcV$sp$3.apply(String)<br/>At ShutdownHookManager.scala:[line 65]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/util/ShutdownHookManager$$anonfun$1$$anonfun$apply$mcV$sp$3.apply(Ljava/lang/String;)V parameter 0<br/>Method usage not detected<br/>At ShutdownHookManager.scala:[line 62]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77779');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77779" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.Utils$<br/>In method org.apache.spark.util.Utils$.doFetchFile(String, File, String, SparkConf, SecurityManager, Configuration)<br/>At Utils.scala:[line 684]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/util/Utils$.doFetchFile(Ljava/lang/String;Ljava/io/File;Ljava/lang/String;Lorg/apache/spark/SparkConf;Lorg/apache/spark/SecurityManager;Lorg/apache/hadoop/conf/Configuration;)Ljava/io/File; parameter 3<br/>At DependencyUtils.scala:[line 136]<br/>In Utils.scala<br/>At Utils.scala:[line 448]<br/>At Utils.scala:[line 472]<br/>At Utils.scala:[line 476]<br/>At Utils.scala:[line 496]<br/>At Utils.scala:[line 509]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77916');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77916" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.Utils$<br/>In method org.apache.spark.util.Utils$.doFetchFile(String, File, String, SparkConf, SecurityManager, Configuration)<br/>At Utils.scala:[line 718]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/util/Utils$.doFetchFile(Ljava/lang/String;Ljava/io/File;Ljava/lang/String;Lorg/apache/spark/SparkConf;Lorg/apache/spark/SecurityManager;Lorg/apache/hadoop/conf/Configuration;)Ljava/io/File; parameter 5<br/>At SparkContext.scala:[line 1568]<br/>In DependencyUtils.scala<br/>At DependencyUtils.scala:[line 125]<br/>At DependencyUtils.scala:[line 136]<br/>At DriverDescription.scala:[line 21]<br/>At SparkSubmit.scala:[line 400]<br/>At SparkSubmit.scala:[line 408]<br/>At SparkSubmit.scala:[line 411]<br/>At SparkSubmit.scala:[line 414]<br/>At SparkSubmit.scala:[line 417]<br/>At SparkSubmit.scala:[line 367]<br/>At DriverRunner.scala:[line 155]<br/>At DriverRunner.scala:[line 156]<br/>At Executor.scala:[line 793]<br/>At Executor.scala:[line 798]<br/>At Executor.scala:[line 799]<br/>At Executor.scala:[line 805]<br/>In Utils.scala<br/>At Utils.scala:[line 496]<br/>At Utils.scala:[line 509]<br/>At Utils.scala:[line 1991]<br/>At Utils.scala:[line 1999]<br/>At Utils.scala:[line 2000]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N78211');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/net/URI;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N78211" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.Utils$<br/>In method org.apache.spark.util.Utils$.doFetchFile(String, File, String, SparkConf, SecurityManager, Configuration)<br/>At Utils.scala:[line 718]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/net/URI;)V<br/>Sink parameter 0<br/>Unknown source java/net/URI.getScheme()Ljava/lang/String;<br/>Unknown source java/net/URI.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source org/apache/spark/util/Utils$.doFetchFile(Ljava/lang/String;Ljava/io/File;Ljava/lang/String;Lorg/apache/spark/SparkConf;Lorg/apache/spark/SecurityManager;Lorg/apache/hadoop/conf/Configuration;)Ljava/io/File; parameter 5<br/>At SparkContext.scala:[line 1568]<br/>In DependencyUtils.scala<br/>At DependencyUtils.scala:[line 125]<br/>At DependencyUtils.scala:[line 136]<br/>At DriverDescription.scala:[line 21]<br/>At SparkSubmit.scala:[line 400]<br/>At SparkSubmit.scala:[line 408]<br/>At SparkSubmit.scala:[line 411]<br/>At SparkSubmit.scala:[line 414]<br/>At SparkSubmit.scala:[line 417]<br/>At SparkSubmit.scala:[line 367]<br/>At DriverRunner.scala:[line 155]<br/>At DriverRunner.scala:[line 156]<br/>At Executor.scala:[line 793]<br/>At Executor.scala:[line 798]<br/>At Executor.scala:[line 799]<br/>At Executor.scala:[line 805]<br/>In Utils.scala<br/>At Utils.scala:[line 496]<br/>At Utils.scala:[line 509]<br/>At Utils.scala:[line 685]<br/>At Utils.scala:[line 687]<br/>At Utils.scala:[line 1991]<br/>At Utils.scala:[line 1999]<br/>At Utils.scala:[line 2000]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N78536');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N78536" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.Utils$<br/>In method org.apache.spark.util.Utils$.downloadFile(String, InputStream, File, boolean)<br/>At Utils.scala:[line 559]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;<br/>Sink parameter 0<br/>Unknown source java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>At Utils.scala:[line 560]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N78615');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N78615" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.Utils$<br/>In method org.apache.spark.util.Utils$.downloadFile(String, InputStream, File, boolean)<br/>At Utils.scala:[line 560]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getAbsolutePath()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N78684');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N78684" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.Utils$<br/>In method org.apache.spark.util.Utils$.fetchFile(String, File, SparkConf, SecurityManager, Configuration, long, boolean)<br/>At Utils.scala:[line 473]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/collection/mutable/ArrayOps.last()Ljava/lang/Object;<br/>Unknown source scala/collection/mutable/StringBuilder.append(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;<br/>Unknown source org/apache/spark/util/Utils$.decodeFileNameInURI(Ljava/net/URI;)Ljava/lang/String;<br/>Unknown source scala/collection/mutable/StringBuilder.toString()Ljava/lang/String;<br/>Unknown source java/net/URI.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source java/net/URI.getPath()Ljava/lang/String;<br/>At Utils.scala:[line 448]<br/>At Utils.scala:[line 472]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N78798');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N78798" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.Utils$<br/>In method org.apache.spark.util.Utils$.fetchFile(String, File, SparkConf, SecurityManager, Configuration, long, boolean)<br/>At Utils.scala:[line 486]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/util/Utils$.cachedLocalDir()Ljava/lang/String;<br/>Unknown source org/apache/spark/util/Utils$.cachedLocalDir<br/>At Utils.scala:[line 85]<br/>At Utils.scala:[line 486]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N78892');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N78892" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.Utils$<br/>In method org.apache.spark.util.Utils$.fetchFile(String, File, SparkConf, SecurityManager, Configuration, long, boolean)<br/>At Utils.scala:[line 487]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/StringContext.s(Lscala/collection/Seq;)Ljava/lang/String;<br/>Unknown source scala/Predef$.genericWrapArray(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;<br/>At Utils.scala:[line 477]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N78976');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N78976" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.Utils$<br/>In method org.apache.spark.util.Utils$.fetchFile(String, File, SparkConf, SecurityManager, Configuration, long, boolean)<br/>At Utils.scala:[line 493]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/StringContext.s(Lscala/collection/Seq;)Ljava/lang/String;<br/>Unknown source scala/Predef$.genericWrapArray(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;<br/>At Utils.scala:[line 476]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N79060');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N79060" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.Utils$<br/>In method org.apache.spark.util.Utils$.fetchHcfsFile(Path, File, FileSystem, SparkConf, Configuration, boolean, Option)<br/>At Utils.scala:[line 746]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/Option.getOrElse(Lscala/Function0;)Ljava/lang/Object;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N79129');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N79129" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.Utils$<br/>In method org.apache.spark.util.Utils$.getPropertiesFromFile(String)<br/>At Utils.scala:[line 2093]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/util/Utils$.getPropertiesFromFile(Ljava/lang/String;)Lscala/collection/Map; parameter 0<br/>At SparkSubmitArguments.scala:[line 93]<br/>At SparkSubmitArguments.scala:[line 94]<br/>At TopologyMapper.scala:[line 71]<br/>At TopologyMapper.scala:[line 74]<br/>In Utils.scala<br/>At Utils.scala:[line 2042]<br/>At Utils.scala:[line 2043]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N79266');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N79266" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.Utils$<br/>In method org.apache.spark.util.Utils$.offsetBytes(String, long, long, long)<br/>At Utils.scala:[line 1565]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/util/Utils$.offsetBytes(Ljava/lang/String;JJJ)Ljava/lang/String; parameter 6<br/>Method usage not detected<br/>In Utils.scala</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N79348');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N79348" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.Utils$<br/>In method org.apache.spark.util.Utils$.resolveURI(String)<br/>At Utils.scala:[line 1998]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/util/Utils$.resolveURI(Ljava/lang/String;)Ljava/net/URI; parameter 0<br/>Unknown source java/net/URI.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source java/net/URI.getPath()Ljava/lang/String;<br/>At SparkContext.scala:[line 402]<br/>In DependencyUtils.scala<br/>At DependencyUtils.scala:[line 125]<br/>At DependencyUtils.scala:[line 156]<br/>At DependencyUtils.scala:[line 181]<br/>At DependencyUtils.scala:[line 144]<br/>At DependencyUtils.scala:[line 145]<br/>At RPackageUtils.scala:[line 178]<br/>At RPackageUtils.scala:[line 179]<br/>At SparkSubmit.scala:[line 392]<br/>At SparkSubmit.scala:[line 400]<br/>At SparkSubmit.scala:[line 803]<br/>At SparkSubmit.scala:[line 804]<br/>At SparkSubmit.scala:[line 408]<br/>At SparkSubmit.scala:[line 411]<br/>At SparkSubmit.scala:[line 414]<br/>At SparkSubmit.scala:[line 417]<br/>At SparkSubmit.scala:[line 367]<br/>At SparkSubmitArguments.scala:[line 491]<br/>In Utils.scala<br/>At Utils.scala:[line 1991]<br/>At Utils.scala:[line 1998]<br/>At Utils.scala:[line 2023]<br/>At Utils.scala:[line 2024]<br/>At Utils.scala:[line 2013]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N79673');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N79673" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.Utils$<br/>In method org.apache.spark.util.Utils$.resolveURI(String)<br/>At Utils.scala:[line 2005]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/util/Utils$.resolveURI(Ljava/lang/String;)Ljava/net/URI; parameter 0<br/>At SparkContext.scala:[line 402]<br/>In DependencyUtils.scala<br/>At DependencyUtils.scala:[line 125]<br/>At DependencyUtils.scala:[line 156]<br/>At DependencyUtils.scala:[line 181]<br/>At DependencyUtils.scala:[line 144]<br/>At DependencyUtils.scala:[line 145]<br/>At RPackageUtils.scala:[line 178]<br/>At RPackageUtils.scala:[line 179]<br/>At SparkSubmit.scala:[line 392]<br/>At SparkSubmit.scala:[line 400]<br/>At SparkSubmit.scala:[line 803]<br/>At SparkSubmit.scala:[line 804]<br/>At SparkSubmit.scala:[line 408]<br/>At SparkSubmit.scala:[line 411]<br/>At SparkSubmit.scala:[line 414]<br/>At SparkSubmit.scala:[line 417]<br/>At SparkSubmit.scala:[line 367]<br/>At SparkSubmitArguments.scala:[line 491]<br/>In Utils.scala<br/>At Utils.scala:[line 2023]<br/>At Utils.scala:[line 2024]<br/>At Utils.scala:[line 2013]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N79968');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N79968" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.Utils$<br/>In method org.apache.spark.util.Utils$.tempFileWith(File)<br/>At Utils.scala:[line 2550]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/collection/mutable/StringBuilder.append(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;<br/>Unknown source java/io/File.getAbsolutePath()Ljava/lang/String;<br/>Unknown source scala/collection/mutable/StringBuilder.toString()Ljava/lang/String;<br/>At Utils.scala:[line 2550]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N80976');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N80976" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.Utils$$anon$6<br/>In method org.apache.spark.util.Utils$$anon$6.load(String)<br/>At Utils.scala:[line 1517]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/util/Utils$$anon$6.load(Ljava/lang/String;)Ljava/lang/Long; parameter 0<br/>Method usage not detected<br/>At Utils.scala:[line 1515]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N81060');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N81060" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.Utils$$anonfun$getDefaultPropertiesFile$2<br/>In method org.apache.spark.util.Utils$$anonfun$getDefaultPropertiesFile$2.apply(String)<br/>At Utils.scala:[line 2117]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/StringContext.s(Lscala/collection/Seq;)Ljava/lang/String;<br/>Unknown source scala/Predef$.genericWrapArray(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;<br/>At Utils.scala:[line 2117]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N81144');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N81144" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.Utils$$anonfun$getOrCreateLocalRootDirsImpl$2<br/>In method org.apache.spark.util.Utils$$anonfun$getOrCreateLocalRootDirsImpl$2.apply(String)<br/>At Utils.scala:[line 880]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/util/Utils$$anonfun$getOrCreateLocalRootDirsImpl$2.apply(Ljava/lang/String;)Lscala/collection/Iterable; parameter 0<br/>Method usage not detected<br/>At Utils.scala:[line 878]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N81228');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N81228" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.spark.util.Utils$$anonfun$org$apache$spark$util$Utils$$copyRecursive$1<br/>In method org.apache.spark.util.Utils$$anonfun$org$apache$spark$util$Utils$$copyRecursive$1.apply(File)<br/>At Utils.scala:[line 662]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N83201');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/nio/file/Files.createTempFile(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N83201" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.proxy.AfterContentTransformer<br/>In method org.spark_project.jetty.proxy.AfterContentTransformer.overflow(ByteBuffer)<br/>At AfterContentTransformer.java:[line 244]<br/>Sink method java/nio/file/Files.createTempFile(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;<br/>Sink parameter 2<br/>Unknown source org/spark_project/jetty/proxy/AfterContentTransformer.inputFilePrefix<br/>Unknown source org/spark_project/jetty/proxy/AfterContentTransformer.getInputFilePrefix()Ljava/lang/String;<br/>At AfterContentTransformer.java:[line 105]<br/>At AfterContentTransformer.java:[line 244]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N83295');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/nio/file/Files.createTempFile(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N83295" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.proxy.AfterContentTransformer$Sink<br/>In method org.spark_project.jetty.proxy.AfterContentTransformer$Sink.overflow(ByteBuffer)<br/>At AfterContentTransformer.java:[line 431]<br/>Sink method java/nio/file/Files.createTempFile(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;<br/>Sink parameter 2<br/>Unknown source org/spark_project/jetty/proxy/AfterContentTransformer.getOutputFilePrefix()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/proxy/AfterContentTransformer.outputFilePrefix<br/>At AfterContentTransformer.java:[line 144]<br/>At AfterContentTransformer.java:[line 431]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N83705');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N83705" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.security.PropertyUserStore<br/>In method org.spark_project.jetty.security.PropertyUserStore.setConfigPath(String)<br/>At PropertyUserStore.java:[line 135]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/security/PropertyUserStore.setConfigPath(Ljava/lang/String;)V parameter 0<br/>At HashLoginService.java:[line 237]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N86539');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N86539" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.server.handler.gzip.GzipHandler<br/>In method org.spark_project.jetty.server.handler.gzip.GzipHandler.handle(String, Request, HttpServletRequest, HttpServletResponse)<br/>At GzipHandler.java:[line 458]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/Request.getPathInfo()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/Request._pathInfo<br/>Unknown source org/spark_project/jetty/server/Request.getServletPath()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/URIUtil.addPaths(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source javax/servlet/ServletContext.getRealPath(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/http/HttpURI.getPath()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/Request.getRequestURI()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/Request._servletPath<br/>Unknown source org/spark_project/jetty/http/HttpURI._path<br/>Unknown source org/spark_project/jetty/util/URIUtil.addPaths(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/spark_project/jetty/util/URIUtil.addPaths(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>At HttpURI.java:[line 573]<br/>At Request.java:[line 1081]<br/>At Request.java:[line 1306]<br/>At Request.java:[line 1482]<br/>At GzipHandler.java:[line 398]<br/>At GzipHandler.java:[line 455]<br/>At GzipHandler.java:[line 458]<br/>At URIUtil.java:[line 559]<br/>At URIUtil.java:[line 569]<br/>At URIUtil.java:[line 571]<br/>At URIUtil.java:[line 573]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N86969');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N86969" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.HashedSession<br/>In method org.spark_project.jetty.server.session.HashedSession.deIdle()<br/>At HashedSession.java:[line 223]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/session/MemSession.getId()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/AbstractSession._clusterId<br/>Unknown source org/spark_project/jetty/server/session/AbstractSession._nodeId<br/>At AbstractSession.java:[line 178]<br/>At HashedSession.java:[line 223]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N87068');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N87068" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.HashedSession<br/>In method org.spark_project.jetty.server.session.HashedSession.remove()<br/>At HashedSession.java:[line 116]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/session/AbstractSession._clusterId<br/>Unknown source org/spark_project/jetty/server/session/HashedSession.getId()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/AbstractSession._nodeId<br/>At AbstractSession.java:[line 178]<br/>At HashedSession.java:[line 115]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N87167');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N87167" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.HashedSession<br/>In method org.spark_project.jetty.server.session.HashedSession.save()<br/>At HashedSession.java:[line 156]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/session/MemSession.getId()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/AbstractSession._clusterId<br/>Unknown source org/spark_project/jetty/server/session/AbstractSession._nodeId<br/>At AbstractSession.java:[line 178]<br/>At HashedSession.java:[line 156]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N86880');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N86880" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.HashSessionManager<br/>In method org.spark_project.jetty.server.session.HashSessionManager.restoreSession(String)<br/>At HashSessionManager.java:[line 576]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/session/HashSessionManager.restoreSession(Ljava/lang/String;)Lorg/spark_project/jetty/server/session/HashedSession; parameter 0<br/>At HashSessionManager.java:[line 419]<br/>At HashSessionManager.java:[line 569]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N91274');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N91274" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.servlet.ServletHolder<br/>In method org.spark_project.jetty.servlet.ServletHolder.initJspServlet()<br/>At ServletHolder.java:[line 705]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/servlet/ServletHolder.getInitParameter(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/servlet/Holder._initParams<br/>Unknown source java/util/Map.get(Ljava/lang/Object;)Ljava/lang/Object;<br/>At Holder.java:[line 89]<br/>At ServletHolder.java:[line 705]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N92275');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N92275" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.servlets.CGI<br/>In method org.spark_project.jetty.servlets.CGI.service(HttpServletRequest, HttpServletResponse)<br/>At CGI.java:[line 194]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source javax/servlet/http/HttpServletRequest.getPathInfo()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/StringUtil.nonNull(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Tainted source org/spark_project/jetty/util/StringUtil.nonNull(Ljava/lang/String;)Ljava/lang/String;<br/>Tainted source javax/servlet/http/HttpServletRequest.getServletPath()Ljava/lang/String;<br/>At CGI.java:[line 193]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N92369');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N92369" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.servlets.CGI<br/>In method org.spark_project.jetty.servlets.CGI.service(HttpServletRequest, HttpServletResponse)<br/>At CGI.java:[line 208]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source javax/servlet/http/HttpServletRequest.getPathInfo()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/StringUtil.nonNull(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Tainted source org/spark_project/jetty/util/StringUtil.nonNull(Ljava/lang/String;)Ljava/lang/String;<br/>Tainted source javax/servlet/http/HttpServletRequest.getServletPath()Ljava/lang/String;<br/>At CGI.java:[line 193]<br/>At CGI.java:[line 206]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N92473');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N92473" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.servlets.CGI<br/>In method org.spark_project.jetty.servlets.CGI.init()<br/>At CGI.java:[line 118]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/servlets/CGI.getInitParameter(Ljava/lang/String;)Ljava/lang/String;<br/>At CGI.java:[line 109]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N93536');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N93536" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.servlets.DataRateLimitedServlet<br/>In method org.spark_project.jetty.servlets.DataRateLimitedServlet.doGet(HttpServletRequest, HttpServletResponse)<br/>At DataRateLimitedServlet.java:[line 118]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source javax/servlet/http/HttpServletRequest.getPathTranslated()Ljava/lang/String;<br/>At DataRateLimitedServlet.java:[line 111]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N93615');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/net/URI;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N93615" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.servlets.PutFilter<br/>In method org.spark_project.jetty.servlets.PutFilter.doFilter(ServletRequest, ServletResponse, FilterChain)<br/>At PutFilter.java:[line 144]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/net/URI;)V<br/>Sink parameter 0<br/>Tainted source javax/servlet/http/HttpServletRequest.getPathInfo()Ljava/lang/String;<br/>Tainted source org/spark_project/jetty/util/URIUtil.addPaths(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>Tainted source javax/servlet/http/HttpServletRequest.getServletPath()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/servlets/PutFilter._baseURI<br/>Tainted source java/net/URI.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source org/spark_project/jetty/util/URIUtil.addPaths(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/spark_project/jetty/util/URIUtil.addPaths(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>At PutFilter.java:[line 126]<br/>At PutFilter.java:[line 127]<br/>At PutFilter.java:[line 128]<br/>At PutFilter.java:[line 130]<br/>At PutFilter.java:[line 144]<br/>At URIUtil.java:[line 559]<br/>At URIUtil.java:[line 569]<br/>At URIUtil.java:[line 571]<br/>At URIUtil.java:[line 573]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N93804');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/net/URI;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N93804" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.servlets.PutFilter<br/>In method org.spark_project.jetty.servlets.PutFilter.handleMove(HttpServletRequest, HttpServletResponse, String, File)<br/>At PutFilter.java:[line 316]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/net/URI;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/util/URIUtil.canonicalPath(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/spark_project/jetty/servlets/PutFilter._baseURI<br/>Tainted source java/net/URI.&lt;init&gt;(Ljava/lang/String;)V<br/>Tainted source org/spark_project/jetty/util/URIUtil.addPaths(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>Tainted source javax/servlet/http/HttpServletRequest.getHeader(Ljava/lang/String;)Ljava/lang/String;<br/>Tainted source org/spark_project/jetty/util/URIUtil.canonicalPath(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/URIUtil.addPaths(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/spark_project/jetty/util/URIUtil.addPaths(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>At PutFilter.java:[line 298]<br/>At PutFilter.java:[line 313]<br/>At PutFilter.java:[line 315]<br/>At PutFilter.java:[line 316]<br/>At URIUtil.java:[line 559]<br/>At URIUtil.java:[line 569]<br/>At URIUtil.java:[line 571]<br/>At URIUtil.java:[line 573]<br/>At URIUtil.java:[line 629]<br/>At URIUtil.java:[line 704]<br/>At URIUtil.java:[line 721]<br/>At URIUtil.java:[line 723]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N94028');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N94028" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.servlets.PutFilter<br/>In method org.spark_project.jetty.servlets.PutFilter.handlePut(HttpServletRequest, HttpServletResponse, String, File)<br/>At PutFilter.java:[line 222]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/servlets/PutFilter._tmpdir<br/>At PutFilter.java:[line 222]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N94205');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N94205" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.IO<br/>In method org.spark_project.jetty.util.IO.copyDir(File, File)<br/>At IO.java:[line 265]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N94390');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N94390" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.MultiPartInputStreamParser<br/>In method org.spark_project.jetty.util.MultiPartInputStreamParser.parse()<br/>At MultiPartInputStreamParser.java:[line 511]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javax/servlet/MultipartConfigElement.getLocation()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N94459');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N94459" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.MultiPartInputStreamParser<br/>In method org.spark_project.jetty.util.MultiPartInputStreamParser.parse()<br/>At MultiPartInputStreamParser.java:[line 515]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javax/servlet/MultipartConfigElement.getLocation()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N94528');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N94528" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.MultiPartInputStreamParser$MultiPart<br/>In method org.spark_project.jetty.util.MultiPartInputStreamParser$MultiPart.createFile()<br/>At MultiPartInputStreamParser.java:[line 158]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/util/MultiPartInputStreamParser._tmpDir<br/>At MultiPartInputStreamParser.java:[line 158]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N94607');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N94607" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.MultiPartInputStreamParser$MultiPart<br/>In method org.spark_project.jetty.util.MultiPartInputStreamParser$MultiPart.write(String)<br/>At MultiPartInputStreamParser.java:[line 277]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/util/MultiPartInputStreamParser$MultiPart.write(Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N95836');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N95836" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.resource.FileResource<br/>In method new org.spark_project.jetty.util.resource.FileResource(File, String)<br/>At FileResource.java:[line 163]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/util/resource/FileResource.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V parameter 0<br/>Method usage not detected<br/>At URIUtil.java:[line 629]<br/>At URIUtil.java:[line 704]<br/>At URIUtil.java:[line 721]<br/>At URIUtil.java:[line 723]<br/>At FileResource.java:[line 254]<br/>At FileResource.java:[line 262]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N95970');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/net/URI;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N95970" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.resource.FileResource<br/>In method new org.spark_project.jetty.util.resource.FileResource(URI)<br/>At FileResource.java:[line 112]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/net/URI;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/util/resource/FileResource.&lt;init&gt;(Ljava/net/URI;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N96044');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/net/URI;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N96044" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.resource.FileResource<br/>In method new org.spark_project.jetty.util.resource.FileResource(URL)<br/>At FileResource.java:[line 71]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/net/URI;)V<br/>Sink parameter 0<br/>Unknown source java/net/URL.toURI()Ljava/net/URI;<br/>Unknown source org/spark_project/jetty/util/resource/FileResource.&lt;init&gt;(Ljava/net/URL;)V parameter 0<br/>Method usage not detected<br/>At FileResource.java:[line 71]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N96133');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/net/URI;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N96133" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.resource.FileResource<br/>In method new org.spark_project.jetty.util.resource.FileResource(URL)<br/>At FileResource.java:[line 90]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/net/URI;)V<br/>Sink parameter 0<br/>Unknown source java/net/URL.toString()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/TypeUtil.toHex(BLjava/lang/Appendable;)V parameter 0<br/>Unknown source java/net/URI.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source org/spark_project/jetty/util/URIUtil.encodePath(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/lang/Appendable.append(C)Ljava/lang/Appendable;<br/>Unknown source org/spark_project/jetty/util/resource/FileResource.&lt;init&gt;(Ljava/net/URL;)V parameter 0<br/>Unknown source org/spark_project/jetty/util/URIUtil.encodePath(Ljava/lang/StringBuilder;Ljava/lang/String;I)Ljava/lang/StringBuilder;<br/>Unknown source org/spark_project/jetty/util/URIUtil.encodePath(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/URIUtil.encodePath(Ljava/lang/StringBuilder;Ljava/lang/String;I)Ljava/lang/StringBuilder; parameter 2<br/>Method usage not detected<br/>At TypeUtil.java:[line 395]<br/>At TypeUtil.java:[line 397]<br/>At URIUtil.java:[line 66]<br/>At URIUtil.java:[line 67]<br/>At URIUtil.java:[line 137]<br/>At URIUtil.java:[line 140]<br/>At URIUtil.java:[line 143]<br/>At URIUtil.java:[line 146]<br/>At URIUtil.java:[line 149]<br/>At URIUtil.java:[line 152]<br/>At URIUtil.java:[line 155]<br/>At URIUtil.java:[line 158]<br/>At URIUtil.java:[line 161]<br/>At URIUtil.java:[line 164]<br/>At URIUtil.java:[line 167]<br/>At URIUtil.java:[line 170]<br/>At URIUtil.java:[line 173]<br/>At URIUtil.java:[line 176]<br/>At URIUtil.java:[line 179]<br/>At URIUtil.java:[line 182]<br/>At URIUtil.java:[line 185]<br/>At URIUtil.java:[line 206]<br/>At URIUtil.java:[line 209]<br/>At URIUtil.java:[line 212]<br/>At URIUtil.java:[line 215]<br/>At URIUtil.java:[line 218]<br/>At URIUtil.java:[line 221]<br/>At URIUtil.java:[line 224]<br/>At URIUtil.java:[line 227]<br/>At URIUtil.java:[line 230]<br/>At URIUtil.java:[line 233]<br/>At URIUtil.java:[line 236]<br/>At URIUtil.java:[line 239]<br/>At URIUtil.java:[line 242]<br/>At URIUtil.java:[line 245]<br/>At URIUtil.java:[line 248]<br/>At URIUtil.java:[line 251]<br/>At URIUtil.java:[line 254]<br/>At FileResource.java:[line 87]<br/>At FileResource.java:[line 88]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N96647');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N96647" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.resource.FileResource<br/>In method new org.spark_project.jetty.util.resource.FileResource(URL)<br/>At FileResource.java:[line 92]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/util/URIUtil.decodePath(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/spark_project/jetty/util/URIUtil.decodePath(Ljava/lang/String;II)Ljava/lang/String;<br/>Unknown source java/net/URI.getAuthority()Ljava/lang/String;<br/>Unknown source java/net/URL.toString()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/URIUtil.decodeISO88591Path(Ljava/lang/String;II)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/Utf8StringBuilder._buffer<br/>Unknown source org/spark_project/jetty/util/URIUtil.decodePath(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/resource/FileResource.&lt;init&gt;(Ljava/net/URL;)V parameter 0<br/>Unknown source org/spark_project/jetty/util/URIUtil.encodePath(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/URIUtil.encodePath(Ljava/lang/StringBuilder;Ljava/lang/String;I)Ljava/lang/StringBuilder; parameter 2<br/>Unknown source java/net/URL.getFile()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/TypeUtil.toHex(BLjava/lang/Appendable;)V parameter 0<br/>Unknown source org/spark_project/jetty/util/URIUtil.decodePath(Ljava/lang/String;II)Ljava/lang/String; parameter 2<br/>Unknown source java/net/URI.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source org/spark_project/jetty/util/URIUtil.decodeISO88591Path(Ljava/lang/String;II)Ljava/lang/String; parameter 2<br/>Unknown source org/spark_project/jetty/util/URIUtil.encodePath(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/lang/Appendable.append(C)Ljava/lang/Appendable;<br/>Unknown source org/spark_project/jetty/util/Utf8StringBuilder.toString()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/URIUtil.encodePath(Ljava/lang/StringBuilder;Ljava/lang/String;I)Ljava/lang/StringBuilder;<br/>Method usage not detected<br/>At TypeUtil.java:[line 395]<br/>At TypeUtil.java:[line 397]<br/>At URIUtil.java:[line 66]<br/>At URIUtil.java:[line 67]<br/>At URIUtil.java:[line 137]<br/>At URIUtil.java:[line 140]<br/>At URIUtil.java:[line 143]<br/>At URIUtil.java:[line 146]<br/>At URIUtil.java:[line 149]<br/>At URIUtil.java:[line 152]<br/>At URIUtil.java:[line 155]<br/>At URIUtil.java:[line 158]<br/>At URIUtil.java:[line 161]<br/>At URIUtil.java:[line 164]<br/>At URIUtil.java:[line 167]<br/>At URIUtil.java:[line 170]<br/>At URIUtil.java:[line 173]<br/>At URIUtil.java:[line 176]<br/>At URIUtil.java:[line 179]<br/>At URIUtil.java:[line 182]<br/>At URIUtil.java:[line 185]<br/>At URIUtil.java:[line 206]<br/>At URIUtil.java:[line 209]<br/>At URIUtil.java:[line 212]<br/>At URIUtil.java:[line 215]<br/>At URIUtil.java:[line 218]<br/>At URIUtil.java:[line 221]<br/>At URIUtil.java:[line 224]<br/>At URIUtil.java:[line 227]<br/>At URIUtil.java:[line 230]<br/>At URIUtil.java:[line 233]<br/>At URIUtil.java:[line 236]<br/>At URIUtil.java:[line 239]<br/>At URIUtil.java:[line 242]<br/>At URIUtil.java:[line 245]<br/>At URIUtil.java:[line 248]<br/>At URIUtil.java:[line 251]<br/>At URIUtil.java:[line 254]<br/>At URIUtil.java:[line 317]<br/>At URIUtil.java:[line 388]<br/>At URIUtil.java:[line 391]<br/>At URIUtil.java:[line 395]<br/>At URIUtil.java:[line 397]<br/>At URIUtil.java:[line 418]<br/>At URIUtil.java:[line 446]<br/>At URIUtil.java:[line 467]<br/>At URIUtil.java:[line 470]<br/>At Utf8StringBuilder.java:[line 74]<br/>At FileResource.java:[line 87]<br/>At FileResource.java:[line 88]<br/>At FileResource.java:[line 92]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N97321');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N97321" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.resource.FileResource<br/>In method new org.spark_project.jetty.util.resource.FileResource(URL)<br/>At FileResource.java:[line 100]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/util/resource/FileResource.&lt;init&gt;(Ljava/net/URL;)V parameter 0<br/>Unknown source java/security/Permission.getName()Ljava/lang/String;<br/>Unknown source java/net/URL.getFile()Ljava/lang/String;<br/>Method usage not detected<br/>At FileResource.java:[line 100]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N97415');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/net/URI;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N97415" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.resource.FileResource<br/>In method org.spark_project.jetty.util.resource.FileResource.checkFileAlias(URI, File)<br/>At FileResource.java:[line 214]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/net/URI;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/util/resource/FileResource.checkFileAlias(Ljava/net/URI;Ljava/io/File;)Ljava/net/URI; parameter 1<br/>At FileResource.java:[line 106]<br/>At FileResource.java:[line 124]<br/>At FileResource.java:[line 155]<br/>At FileResource.java:[line 190]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N97524');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N97524" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.resource.FileResource<br/>In method org.spark_project.jetty.util.resource.FileResource.checkFileAlias(URI, File)<br/>At FileResource.java:[line 225]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getCanonicalPath()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/resource/FileResource.checkFileAlias(Ljava/net/URI;Ljava/io/File;)Ljava/net/URI; parameter 0<br/>At FileResource.java:[line 106]<br/>At FileResource.java:[line 124]<br/>At FileResource.java:[line 155]<br/>At FileResource.java:[line 190]<br/>At FileResource.java:[line 218]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N97648');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N97648" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.resource.FileResource<br/>In method org.spark_project.jetty.util.resource.FileResource.list()<br/>At FileResource.java:[line 397]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.list()[Ljava/lang/String;<br/>At FileResource.java:[line 399]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N97801');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N97801" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.resource.JarFileResource<br/>In method org.spark_project.jetty.util.resource.JarFileResource.newConnection()<br/>At JarFileResource.java:[line 130]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/util/jar/JarFile.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N98038');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N98038" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.resource.JarResource<br/>In method org.spark_project.jetty.util.resource.JarResource.copyTo(File)<br/>At JarResource.java:[line 224]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/util/jar/JarEntry.getName()Ljava/lang/String;<br/>At JarResource.java:[line 184]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N98117');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N98117" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.resource.JarResource<br/>In method org.spark_project.jetty.util.resource.JarResource.copyTo(File)<br/>At JarResource.java:[line 235]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getParent()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N98384');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N98384" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.resource.Resource<br/>In method org.spark_project.jetty.util.resource.Resource.newResource(String, boolean)<br/>At Resource.java:[line 179]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/util/resource/Resource.newResource(Ljava/lang/String;Z)Lorg/spark_project/jetty/util/resource/Resource; parameter 1<br/>At SSLOptions.scala:[line 73]<br/>At SSLOptions.scala:[line 78]<br/>At JDBCLoginService.java:[line 133]<br/>At PropertyUserStore.java:[line 101]<br/>At SpnegoLoginService.java:[line 102]<br/>At ClientCertAuthenticator.java:[line 101]<br/>At ClientCertAuthenticator.java:[line 104]<br/>At ClientCertAuthenticator.java:[line 145]<br/>At ClientCertAuthenticator.java:[line 164]<br/>At ClientCertAuthenticator.java:[line 181]<br/>At ContextHandler.java:[line 1519]<br/>At ContextHandler.java:[line 1827]<br/>At ContextHandlerCollection.java:[line 246]<br/>At ResourceHandler.java:[line 229]<br/>At ResourceHandler.java:[line 267]<br/>At DefaultServlet.java:[line 212]<br/>At DefaultServlet.java:[line 217]<br/>At DefaultServlet.java:[line 225]<br/>At DefaultServlet.java:[line 230]<br/>At FileDestroyable.java:[line 43]<br/>At FileDestroyable.java:[line 53]<br/>At FileDestroyable.java:[line 71]<br/>At JarFileResource.java:[line 147]<br/>At JarFileResource.java:[line 148]<br/>At JarResource.java:[line 272]<br/>At Resource.java:[line 149]<br/>At Resource.java:[line 178]<br/>At ResourceCollection.java:[line 106]<br/>At ResourceCollection.java:[line 129]<br/>At ResourceCollection.java:[line 164]<br/>At ResourceCollection.java:[line 178]<br/>At CertificateUtils.java:[line 69]<br/>At SslContextFactory.java:[line 200]<br/>At SslContextFactory.java:[line 209]<br/>At SslContextFactory.java:[line 258]<br/>At SslContextFactory.java:[line 551]<br/>At SslContextFactory.java:[line 620]<br/>At SslContextFactory.java:[line 958]<br/>At SslContextFactory.java:[line 1077]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N98843');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N98843" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.resource.URLResource<br/>In method org.spark_project.jetty.util.resource.URLResource.getFile()<br/>At URLResource.java:[line 179]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/security/Permission.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N98912');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N98912" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.resource.URLResource<br/>In method org.spark_project.jetty.util.resource.URLResource.getFile()<br/>At URLResource.java:[line 183]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/net/URL.getFile()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/resource/URLResource._url<br/>At URLResource.java:[line 183]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N94681');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N94681" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.RolloverFileOutputStream<br/>In method org.spark_project.jetty.util.RolloverFileOutputStream.removeOldFiles(ZonedDateTime)<br/>At RolloverFileOutputStream.java:[line 287]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/util/RolloverFileOutputStream._filename<br/>At RolloverFileOutputStream.java:[line 287]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N94760');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N94760" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.RolloverFileOutputStream<br/>In method org.spark_project.jetty.util.RolloverFileOutputStream.removeOldFiles(ZonedDateTime)<br/>At RolloverFileOutputStream.java:[line 288]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getParent()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N94829');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N94829" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.RolloverFileOutputStream<br/>In method org.spark_project.jetty.util.RolloverFileOutputStream.removeOldFiles(ZonedDateTime)<br/>At RolloverFileOutputStream.java:[line 302]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.list()[Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N94898');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N94898" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.RolloverFileOutputStream<br/>In method org.spark_project.jetty.util.RolloverFileOutputStream.setFile(ZonedDateTime)<br/>At RolloverFileOutputStream.java:[line 243]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/util/RolloverFileOutputStream._filename<br/>At RolloverFileOutputStream.java:[line 243]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N94977');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N94977" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.RolloverFileOutputStream<br/>In method org.spark_project.jetty.util.RolloverFileOutputStream.setFile(ZonedDateTime)<br/>At RolloverFileOutputStream.java:[line 245]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/util/RolloverFileOutputStream._filename<br/>At RolloverFileOutputStream.java:[line 245]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N95056');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N95056" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.RolloverFileOutputStream<br/>In method org.spark_project.jetty.util.RolloverFileOutputStream.setFile(ZonedDateTime)<br/>At RolloverFileOutputStream.java:[line 246]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getParent()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N95125');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N95125" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.RolloverFileOutputStream<br/>In method org.spark_project.jetty.util.RolloverFileOutputStream.setFile(ZonedDateTime)<br/>At RolloverFileOutputStream.java:[line 258]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getName()Ljava/lang/String;<br/>Unknown source java/text/SimpleDateFormat.format(Ljava/util/Date;)Ljava/lang/String;<br/>At RolloverFileOutputStream.java:[line 256]<br/>At RolloverFileOutputStream.java:[line 257]<br/>At RolloverFileOutputStream.java:[line 258]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N95229');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N95229" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.RolloverFileOutputStream<br/>In method org.spark_project.jetty.util.RolloverFileOutputStream.setFile(ZonedDateTime)<br/>At RolloverFileOutputStream.java:[line 270]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/text/SimpleDateFormat.format(Ljava/util/Date;)Ljava/lang/String;<br/>Unknown source java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Unknown source java/io/File.toString()Ljava/lang/String;<br/>At RolloverFileOutputStream.java:[line 245]<br/>At RolloverFileOutputStream.java:[line 258]<br/>At RolloverFileOutputStream.java:[line 270]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N95521');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N95521" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.spark_project.jetty.util.Scanner<br/>In method org.spark_project.jetty.util.Scanner.exists(String)<br/>At Scanner.java:[line 379]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/util/Scanner.exists(Ljava/lang/String;)Z parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68134');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68134" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class org.apache.spark.api.python.PythonBroadcast$$anon$2<br/>In method org.apache.spark.api.python.PythonBroadcast$$anon$2.handleConnection(Socket)<br/>At PythonRDD.scala:[line 714]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/api/python/PythonBroadcast.path<br/>Unknown source org/apache/spark/api/python/PythonBroadcast.path()Ljava/lang/String;<br/>At PythonRDD.scala:[line 659]<br/>At PythonRDD.scala:[line 714]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76100');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76100" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class org.apache.spark.scheduler.EventLoggingListener<br/>In method org.apache.spark.scheduler.EventLoggingListener.start()<br/>At EventLoggingListener.scala:[line 115]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/fs/Path.toUri()Ljava/net/URI;<br/>Unknown source java/net/URI.getPath()Ljava/lang/String;<br/>At EventLoggingListener.scala:[line 115]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N95595');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileWriter.&lt;init&gt;(Ljava/lang/String;Z)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N95595" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class org.spark_project.jetty.util.component.FileNoticeLifeCycleListener<br/>In method org.spark_project.jetty.util.component.FileNoticeLifeCycleListener.writeState(String, LifeCycle)<br/>At FileNoticeLifeCycleListener.java:[line 45]<br/>Sink method java/io/FileWriter.&lt;init&gt;(Ljava/lang/String;Z)V<br/>Sink parameter 1<br/>Unknown source org/spark_project/jetty/util/component/FileNoticeLifeCycleListener._filename<br/>At FileNoticeLifeCycleListener.java:[line 45]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N95343');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;Z)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N95343" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class org.spark_project.jetty.util.RolloverFileOutputStream<br/>In method org.spark_project.jetty.util.RolloverFileOutputStream.setFile(ZonedDateTime)<br/>At RolloverFileOutputStream.java:[line 272]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;Z)V<br/>Sink parameter 1<br/>Unknown source java/text/SimpleDateFormat.format(Ljava/util/Date;)Ljava/lang/String;<br/>Unknown source java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Unknown source java/io/File.toString()Ljava/lang/String;<br/>At RolloverFileOutputStream.java:[line 245]<br/>At RolloverFileOutputStream.java:[line 258]<br/>At RolloverFileOutputStream.java:[line 270]<br/>At RolloverFileOutputStream.java:[line 272]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N82141');">
<td>
<span class="priority-2">SECRD</span>
</td>
<td>The regular expression "((^https?)://([^/\\?#]+))?([^\\?#]*)([^#]*)(.*)" is vulnerable to a denial of service attack (ReDOS)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N82141" style="display: none;">
<a href="#REDOS">Bug type REDOS (click for details)</a>
<br/>Value ((^https?)://([^/\\?#]+))?([^\\?#]*)([^#]*)(.*)<br/>In class org.spark_project.jetty.client.HttpRedirector<br/>In method org.spark_project.jetty.client.HttpRedirector.&lt;static initializer for HttpRedirector&gt;()<br/>At HttpRedirector.java:[line 70]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N94274');">
<td>
<span class="priority-2">SECRD</span>
</td>
<td>The regular expression "(\\d+)(\\.(\\d+))?(\\.(\\d+))?((-.+)?(\\+(\\d+)?(-.+)?)?)" is vulnerable to a denial of service attack (ReDOS)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N94274" style="display: none;">
<a href="#REDOS">Bug type REDOS (click for details)</a>
<br/>Value (\\d+)(\\.(\\d+))?(\\.(\\d+))?((-.+)?(\\+(\\d+)?(-.+)?)?)<br/>In class org.spark_project.jetty.util.JavaVersion<br/>In method org.spark_project.jetty.util.JavaVersion.&lt;static initializer for JavaVersion&gt;()<br/>At JavaVersion.java:[line 41]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N94332');">
<td>
<span class="priority-2">SECRD</span>
</td>
<td>The regular expression "1\\.(\\d)(\\.(\\d+)(_(\\d+))?)?(-.+)?" is vulnerable to a denial of service attack (ReDOS)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N94332" style="display: none;">
<a href="#REDOS">Bug type REDOS (click for details)</a>
<br/>Value 1\\.(\\d)(\\.(\\d+)(_(\\d+))?)?(-.+)?<br/>In class org.spark_project.jetty.util.JavaVersion<br/>In method org.spark_project.jetty.util.JavaVersion.&lt;static initializer for JavaVersion&gt;()<br/>At JavaVersion.java:[line 39]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70144');">
<td>
<span class="priority-2">SECSCI</span>
</td>
<td>The command execution could be vulnerable to injection</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70144" style="display: none;">
<a href="#SCALA_COMMAND_INJECTION">Bug type SCALA_COMMAND_INJECTION (click for details)</a>
<br/>In class org.apache.spark.deploy.Docker$<br/>In method org.apache.spark.deploy.Docker$.kill(DockerId)<br/>At FaultToleranceTest.scala:[line 444]<br/>Sink method scala/sys/process/package$.stringToProcess(Ljava/lang/String;)Lscala/sys/process/ProcessBuilder;<br/>Sink parameter 0<br/>Unknown source scala/collection/immutable/StringOps.format(Lscala/collection/Seq;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70213');">
<td>
<span class="priority-2">SECSCI</span>
</td>
<td>The command execution could be vulnerable to injection</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70213" style="display: none;">
<a href="#SCALA_COMMAND_INJECTION">Bug type SCALA_COMMAND_INJECTION (click for details)</a>
<br/>In class org.apache.spark.deploy.Docker$<br/>In method org.apache.spark.deploy.Docker$.makeRunCmd(String, String, String)<br/>At FaultToleranceTest.scala:[line 440]<br/>Sink method scala/sys/process/package$.stringToProcess(Ljava/lang/String;)Lscala/sys/process/ProcessBuilder;<br/>Sink parameter 0<br/>Unknown source scala/collection/immutable/StringOps.format(Lscala/collection/Seq;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67513');">
<td>
<span class="priority-2">SECSCI</span>
</td>
<td>The command execution could be vulnerable to injection</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67513" style="display: none;">
<a href="#SCALA_COMMAND_INJECTION">Bug type SCALA_COMMAND_INJECTION (click for details)</a>
<br/>In class org.apache.spark.TestUtils$$anonfun$1<br/>In method org.apache.spark.TestUtils$$anonfun$1.apply$mcI$sp()<br/>At TestUtils.scala:[line 199]<br/>Sink method scala/sys/process/Process$.apply(Ljava/lang/String;)Lscala/sys/process/ProcessBuilder;<br/>Sink parameter 0<br/>Unknown source org/apache/spark/TestUtils$$anonfun$1.command$1<br/>At TestUtils.scala:[line 199]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N83911');">
<td>
<span class="priority-2">SECSFDR</span>
</td>
<td>RequestDispatcher populated with user controlled parameters</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N83911" style="display: none;">
<a href="#REQUESTDISPATCHER_FILE_DISCLOSURE">Bug type REQUESTDISPATCHER_FILE_DISCLOSURE (click for details)</a>
<br/>In class org.spark_project.jetty.security.authentication.FormAuthenticator<br/>In method org.spark_project.jetty.security.authentication.FormAuthenticator.validateRequest(ServletRequest, ServletResponse, boolean)<br/>At FormAuthenticator.java:[line 327]<br/>Sink method javax/servlet/RequestDispatcher.forward(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V<br/>Sink parameter 2<br/>Unknown source org/spark_project/jetty/security/authentication/FormAuthenticator._formErrorPage<br/>Unknown source javax/servlet/http/HttpServletRequest.getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;<br/>At FormAuthenticator.java:[line 324]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N83994');">
<td>
<span class="priority-2">SECSFDR</span>
</td>
<td>RequestDispatcher populated with user controlled parameters</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N83994" style="display: none;">
<a href="#REQUESTDISPATCHER_FILE_DISCLOSURE">Bug type REQUESTDISPATCHER_FILE_DISCLOSURE (click for details)</a>
<br/>In class org.spark_project.jetty.security.authentication.FormAuthenticator<br/>In method org.spark_project.jetty.security.authentication.FormAuthenticator.validateRequest(ServletRequest, ServletResponse, boolean)<br/>At FormAuthenticator.java:[line 419]<br/>Sink method javax/servlet/RequestDispatcher.forward(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V<br/>Sink parameter 2<br/>Unknown source javax/servlet/http/HttpServletRequest.getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;<br/>Unknown source org/spark_project/jetty/security/authentication/FormAuthenticator._formLoginPage<br/>At FormAuthenticator.java:[line 416]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N90294');">
<td>
<span class="priority-1">SECSFDR</span>
</td>
<td>RequestDispatcher populated with user controlled parameters</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N90294" style="display: none;">
<a href="#REQUESTDISPATCHER_FILE_DISCLOSURE">Bug type REQUESTDISPATCHER_FILE_DISCLOSURE (click for details)</a>
<br/>In class org.spark_project.jetty.servlet.DefaultServlet<br/>In method org.spark_project.jetty.servlet.DefaultServlet.sendWelcome(HttpContent, String, boolean, boolean, HttpServletRequest, HttpServletResponse)<br/>At DefaultServlet.java:[line 601]<br/>Sink method javax/servlet/RequestDispatcher.include(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V<br/>Sink parameter 2<br/>Unknown source org/spark_project/jetty/servlet/DefaultServlet.getWelcomeFile(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/spark_project/jetty/servlet/DefaultServlet.sendWelcome(Lorg/spark_project/jetty/http/HttpContent;Ljava/lang/String;ZZLjavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V parameter 4<br/>Unknown source org/spark_project/jetty/servlet/DefaultServlet._welcomes<br/>Unknown source org/spark_project/jetty/util/URIUtil.addPaths(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/servlet/DefaultServlet.getWelcomeFile(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/URIUtil.addPaths(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/spark_project/jetty/util/URIUtil.addPaths(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source javax/servlet/ServletContext.getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;<br/>Method usage with tainted arguments detected<br/>At DefaultServlet.java:[line 450]<br/>At DefaultServlet.java:[line 451]<br/>At DefaultServlet.java:[line 456]<br/>At DefaultServlet.java:[line 457]<br/>At DefaultServlet.java:[line 465]<br/>At DefaultServlet.java:[line 490]<br/>At DefaultServlet.java:[line 579]<br/>At DefaultServlet.java:[line 597]<br/>At DefaultServlet.java:[line 680]<br/>At URIUtil.java:[line 559]<br/>At URIUtil.java:[line 569]<br/>At URIUtil.java:[line 571]<br/>At URIUtil.java:[line 573]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N90532');">
<td>
<span class="priority-1">SECSFDR</span>
</td>
<td>RequestDispatcher populated with user controlled parameters</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N90532" style="display: none;">
<a href="#REQUESTDISPATCHER_FILE_DISCLOSURE">Bug type REQUESTDISPATCHER_FILE_DISCLOSURE (click for details)</a>
<br/>In class org.spark_project.jetty.servlet.DefaultServlet<br/>In method org.spark_project.jetty.servlet.DefaultServlet.sendWelcome(HttpContent, String, boolean, boolean, HttpServletRequest, HttpServletResponse)<br/>At DefaultServlet.java:[line 605]<br/>Sink method javax/servlet/RequestDispatcher.forward(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V<br/>Sink parameter 2<br/>Unknown source org/spark_project/jetty/servlet/DefaultServlet.getWelcomeFile(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/spark_project/jetty/servlet/DefaultServlet.sendWelcome(Lorg/spark_project/jetty/http/HttpContent;Ljava/lang/String;ZZLjavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V parameter 4<br/>Unknown source org/spark_project/jetty/servlet/DefaultServlet._welcomes<br/>Unknown source org/spark_project/jetty/util/URIUtil.addPaths(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/servlet/DefaultServlet.getWelcomeFile(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/URIUtil.addPaths(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/spark_project/jetty/util/URIUtil.addPaths(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source javax/servlet/ServletContext.getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;<br/>Method usage with tainted arguments detected<br/>At DefaultServlet.java:[line 450]<br/>At DefaultServlet.java:[line 451]<br/>At DefaultServlet.java:[line 456]<br/>At DefaultServlet.java:[line 457]<br/>At DefaultServlet.java:[line 465]<br/>At DefaultServlet.java:[line 490]<br/>At DefaultServlet.java:[line 579]<br/>At DefaultServlet.java:[line 597]<br/>At DefaultServlet.java:[line 680]<br/>At URIUtil.java:[line 559]<br/>At URIUtil.java:[line 569]<br/>At URIUtil.java:[line 571]<br/>At URIUtil.java:[line 573]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N92674');">
<td>
<span class="priority-1">SECSFDR</span>
</td>
<td>RequestDispatcher populated with user controlled parameters</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N92674" style="display: none;">
<a href="#REQUESTDISPATCHER_FILE_DISCLOSURE">Bug type REQUESTDISPATCHER_FILE_DISCLOSURE (click for details)</a>
<br/>In class org.spark_project.jetty.servlets.ConcatServlet<br/>In method org.spark_project.jetty.servlets.ConcatServlet.doGet(HttpServletRequest, HttpServletResponse)<br/>At ConcatServlet.java:[line 138]<br/>Sink method javax/servlet/RequestDispatcher.include(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V<br/>Sink parameter 2<br/>Unknown source org/spark_project/jetty/util/URIUtil.decodePath(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/spark_project/jetty/util/URIUtil.decodePath(Ljava/lang/String;II)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/URIUtil.canonicalPath(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/spark_project/jetty/util/URIUtil.decodePath(Ljava/lang/String;II)Ljava/lang/String; parameter 2<br/>Unknown source org/spark_project/jetty/util/URIUtil.decodeISO88591Path(Ljava/lang/String;II)Ljava/lang/String; parameter 2<br/>Tainted source javax/servlet/http/HttpServletRequest.getQueryString()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/Utf8StringBuilder.toString()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/URIUtil.decodeISO88591Path(Ljava/lang/String;II)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/Utf8StringBuilder._buffer<br/>Tainted source org/spark_project/jetty/util/URIUtil.decodePath(Ljava/lang/String;)Ljava/lang/String;<br/>Tainted source java/util/Iterator.next()Ljava/lang/Object;<br/>Tainted source org/spark_project/jetty/util/URIUtil.canonicalPath(Ljava/lang/String;)Ljava/lang/String;<br/>Tainted source javax/servlet/ServletContext.getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;<br/>At ConcatServlet.java:[line 89]<br/>At ConcatServlet.java:[line 97]<br/>At ConcatServlet.java:[line 101]<br/>At ConcatServlet.java:[line 129]<br/>At ConcatServlet.java:[line 131]<br/>At ConcatServlet.java:[line 137]<br/>At URIUtil.java:[line 317]<br/>At URIUtil.java:[line 388]<br/>At URIUtil.java:[line 391]<br/>At URIUtil.java:[line 395]<br/>At URIUtil.java:[line 397]<br/>At URIUtil.java:[line 418]<br/>At URIUtil.java:[line 446]<br/>At URIUtil.java:[line 467]<br/>At URIUtil.java:[line 470]<br/>At URIUtil.java:[line 629]<br/>At URIUtil.java:[line 704]<br/>At URIUtil.java:[line 721]<br/>At URIUtil.java:[line 723]<br/>At Utf8StringBuilder.java:[line 74]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N94107');">
<td>
<span class="priority-1">SECSFDR</span>
</td>
<td>RequestDispatcher populated with user controlled parameters</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N94107" style="display: none;">
<a href="#REQUESTDISPATCHER_FILE_DISCLOSURE">Bug type REQUESTDISPATCHER_FILE_DISCLOSURE (click for details)</a>
<br/>In class org.spark_project.jetty.servlets.WelcomeFilter<br/>In method org.spark_project.jetty.servlets.WelcomeFilter.doFilter(ServletRequest, ServletResponse, FilterChain)<br/>At WelcomeFilter.java:[line 64]<br/>Sink method javax/servlet/RequestDispatcher.forward(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V<br/>Sink parameter 2<br/>Tainted source javax/servlet/http/HttpServletRequest.getServletPath()Ljava/lang/String;<br/>Tainted source javax/servlet/ServletRequest.getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;<br/>Unknown source org/spark_project/jetty/servlets/WelcomeFilter.welcome<br/>At WelcomeFilter.java:[line 62]<br/>At WelcomeFilter.java:[line 64]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75383');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75383" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.apache.spark.rdd.JdbcRDD$$anon$1<br/>In method new org.apache.spark.rdd.JdbcRDD$$anon$1(JdbcRDD, Partition, TaskContext)<br/>At JdbcRDD.scala:[line 83]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;<br/>Sink parameter 2<br/>Unknown source org/apache/spark/rdd/JdbcRDD.org$apache$spark$rdd$JdbcRDD$$sql<br/>At JdbcRDD.scala:[line 83]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N82315');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N82315" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.plus.security.DataSourceLoginService<br/>In method org.spark_project.jetty.plus.security.DataSourceLoginService.loadRoleInfo(MappedLoginService$KnownUser)<br/>At DataSourceLoginService.java:[line 403]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/plus/security/DataSourceLoginService._roleSql<br/>At DataSourceLoginService.java:[line 403]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N82394');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N82394" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.plus.security.DataSourceLoginService<br/>In method org.spark_project.jetty.plus.security.DataSourceLoginService.loadUser(String)<br/>At DataSourceLoginService.java:[line 320]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/plus/security/DataSourceLoginService._userSql<br/>At DataSourceLoginService.java:[line 320]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N82473');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N82473" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.plus.security.DataSourceLoginService<br/>In method org.spark_project.jetty.plus.security.DataSourceLoginService.loadUser(String)<br/>At DataSourceLoginService.java:[line 331]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/plus/security/DataSourceLoginService._roleSql<br/>At DataSourceLoginService.java:[line 331]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N82552');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N82552" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.plus.security.DataSourceLoginService<br/>In method org.spark_project.jetty.plus.security.DataSourceLoginService.loadUserInfo(String)<br/>At DataSourceLoginService.java:[line 367]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/plus/security/DataSourceLoginService._userSql<br/>At DataSourceLoginService.java:[line 367]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N82631');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N82631" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.plus.security.DataSourceLoginService<br/>In method org.spark_project.jetty.plus.security.DataSourceLoginService.prepareTables()<br/>At DataSourceLoginService.java:[line 523]<br/>Sink method java/sql/Statement.executeUpdate(Ljava/lang/String;)I<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/plus/security/DataSourceLoginService._userTableKey<br/>Unknown source org/spark_project/jetty/plus/security/DataSourceLoginService._userTableUserField<br/>Unknown source org/spark_project/jetty/plus/security/DataSourceLoginService._userTablePasswordField<br/>Unknown source org/spark_project/jetty/plus/security/DataSourceLoginService._userTableName<br/>At DataSourceLoginService.java:[line 523]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N82725');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N82725" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.plus.security.DataSourceLoginService<br/>In method org.spark_project.jetty.plus.security.DataSourceLoginService.prepareTables()<br/>At DataSourceLoginService.java:[line 542]<br/>Sink method java/sql/Statement.executeUpdate(Ljava/lang/String;)I<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/plus/security/DataSourceLoginService._roleTableKey<br/>Unknown source org/spark_project/jetty/plus/security/DataSourceLoginService._roleTableRoleField<br/>Unknown source org/spark_project/jetty/plus/security/DataSourceLoginService._roleTableName<br/>At DataSourceLoginService.java:[line 540]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N82814');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N82814" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.plus.security.DataSourceLoginService<br/>In method org.spark_project.jetty.plus.security.DataSourceLoginService.prepareTables()<br/>At DataSourceLoginService.java:[line 560]<br/>Sink method java/sql/Statement.executeUpdate(Ljava/lang/String;)I<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/plus/security/DataSourceLoginService._userRoleTableUserKey<br/>Unknown source org/spark_project/jetty/plus/security/DataSourceLoginService._userRoleTableName<br/>Unknown source org/spark_project/jetty/plus/security/DataSourceLoginService._userRoleTableRoleKey<br/>At DataSourceLoginService.java:[line 560]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N82903');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N82903" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.plus.security.DataSourceLoginService<br/>In method org.spark_project.jetty.plus.security.DataSourceLoginService.prepareTables()<br/>At DataSourceLoginService.java:[line 563]<br/>Sink method java/sql/Statement.executeUpdate(Ljava/lang/String;)I<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/plus/security/DataSourceLoginService._userRoleTableUserKey<br/>Unknown source org/spark_project/jetty/plus/security/DataSourceLoginService._userRoleTableName<br/>At DataSourceLoginService.java:[line 563]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N83389');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N83389" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.security.JDBCLoginService<br/>In method org.spark_project.jetty.security.JDBCLoginService.loadRoleInfo(MappedLoginService$KnownUser)<br/>At JDBCLoginService.java:[line 351]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/security/JDBCLoginService._roleSql<br/>At JDBCLoginService.java:[line 351]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N83468');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N83468" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.security.JDBCLoginService<br/>In method org.spark_project.jetty.security.JDBCLoginService.loadUser(String)<br/>At JDBCLoginService.java:[line 258]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/security/JDBCLoginService._userSql<br/>At JDBCLoginService.java:[line 258]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N83547');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N83547" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.security.JDBCLoginService<br/>In method org.spark_project.jetty.security.JDBCLoginService.loadUser(String)<br/>At JDBCLoginService.java:[line 271]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/security/JDBCLoginService._roleSql<br/>At JDBCLoginService.java:[line 271]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N83626');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N83626" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.security.JDBCLoginService<br/>In method org.spark_project.jetty.security.JDBCLoginService.loadUserInfo(String)<br/>At JDBCLoginService.java:[line 307]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/security/JDBCLoginService._userSql<br/>At JDBCLoginService.java:[line 307]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N87266');">
<td>
<span class="priority-1">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N87266" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.JDBCSessionIdManager<br/>In method org.spark_project.jetty.server.session.JDBCSessionIdManager.cleanExpiredSessionIds(Set)<br/>At JDBCSessionIdManager.java:[line 1529]<br/>Sink method java/sql/Statement.executeUpdate(Ljava/lang/String;)I<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionIdTableSchema.getIdColumn()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionIdTableSchema.access$100(Lorg/spark_project/jetty/server/session/JDBCSessionIdManager$SessionIdTableSchema;)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionIdTableSchema._idColumn<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager.cleanExpiredSessionIds(Ljava/util/Set;)V parameter 0<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager.fillInClause(Ljava/lang/String;[Ljava/lang/String;II)Ljava/lang/String;<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionIdTableSchema.getSchemaTableName()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager.fillInClause(Ljava/lang/String;[Ljava/lang/String;II)Ljava/lang/String; parameter 2<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager.fillInClause(Ljava/lang/String;[Ljava/lang/String;II)Ljava/lang/String; parameter 3<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>Method usage with tainted arguments detected<br/>At JDBCSessionIdManager.java:[line 1315]<br/>At JDBCSessionIdManager.java:[line 1316]<br/>At JDBCSessionIdManager.java:[line 1321]<br/>At JDBCSessionIdManager.java:[line 1337]<br/>At JDBCSessionIdManager.java:[line 1340]<br/>At JDBCSessionIdManager.java:[line 1344]<br/>At JDBCSessionIdManager.java:[line 1362]<br/>At JDBCSessionIdManager.java:[line 1363]<br/>At JDBCSessionIdManager.java:[line 1367]<br/>At JDBCSessionIdManager.java:[line 1407]<br/>At JDBCSessionIdManager.java:[line 1432]<br/>At JDBCSessionIdManager.java:[line 1507]<br/>At JDBCSessionIdManager.java:[line 1529]<br/>At JDBCSessionIdManager.java:[line 1556]<br/>At JDBCSessionIdManager.java:[line 1557]<br/>At JDBCSessionIdManager.java:[line 1560]<br/>At JDBCSessionIdManager.java:[line 1562]<br/>At JDBCSessionIdManager.java:[line 1564]<br/>At JDBCSessionIdManager.java:[line 1565]<br/>At JDBCSessionIdManager.java:[line 421]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N87585');">
<td>
<span class="priority-1">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N87585" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.JDBCSessionIdManager<br/>In method org.spark_project.jetty.server.session.JDBCSessionIdManager.cleanExpiredSessionIds(Set)<br/>At JDBCSessionIdManager.java:[line 1531]<br/>Sink method java/sql/Statement.executeUpdate(Ljava/lang/String;)I<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getSchemaTableName()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager.cleanExpiredSessionIds(Ljava/util/Set;)V parameter 0<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema._idColumn<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager.fillInClause(Ljava/lang/String;[Ljava/lang/String;II)Ljava/lang/String;<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.access$200(Lorg/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema;)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager.fillInClause(Ljava/lang/String;[Ljava/lang/String;II)Ljava/lang/String; parameter 2<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager.fillInClause(Ljava/lang/String;[Ljava/lang/String;II)Ljava/lang/String; parameter 3<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getIdColumn()Ljava/lang/String;<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>Method usage with tainted arguments detected<br/>At JDBCSessionIdManager.java:[line 1315]<br/>At JDBCSessionIdManager.java:[line 1316]<br/>At JDBCSessionIdManager.java:[line 1321]<br/>At JDBCSessionIdManager.java:[line 1337]<br/>At JDBCSessionIdManager.java:[line 1340]<br/>At JDBCSessionIdManager.java:[line 1344]<br/>At JDBCSessionIdManager.java:[line 1362]<br/>At JDBCSessionIdManager.java:[line 1363]<br/>At JDBCSessionIdManager.java:[line 1367]<br/>At JDBCSessionIdManager.java:[line 1407]<br/>At JDBCSessionIdManager.java:[line 1432]<br/>At JDBCSessionIdManager.java:[line 1507]<br/>At JDBCSessionIdManager.java:[line 1531]<br/>At JDBCSessionIdManager.java:[line 1556]<br/>At JDBCSessionIdManager.java:[line 1557]<br/>At JDBCSessionIdManager.java:[line 1560]<br/>At JDBCSessionIdManager.java:[line 1562]<br/>At JDBCSessionIdManager.java:[line 1564]<br/>At JDBCSessionIdManager.java:[line 1565]<br/>At JDBCSessionIdManager.java:[line 173]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N87904');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N87904" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.JDBCSessionIdManager<br/>In method org.spark_project.jetty.server.session.JDBCSessionIdManager.delete(String)<br/>At JDBCSessionIdManager.java:[line 1242]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager._deleteId<br/>At JDBCSessionIdManager.java:[line 1242]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N87983');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N87983" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.JDBCSessionIdManager<br/>In method org.spark_project.jetty.server.session.JDBCSessionIdManager.exists(String)<br/>At JDBCSessionIdManager.java:[line 1262]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager._queryId<br/>At JDBCSessionIdManager.java:[line 1262]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N88062');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N88062" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.JDBCSessionIdManager<br/>In method org.spark_project.jetty.server.session.JDBCSessionIdManager.insert(String)<br/>At JDBCSessionIdManager.java:[line 1213]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager._queryId<br/>At JDBCSessionIdManager.java:[line 1213]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N88141');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N88141" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.JDBCSessionIdManager<br/>In method org.spark_project.jetty.server.session.JDBCSessionIdManager.insert(String)<br/>At JDBCSessionIdManager.java:[line 1222]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager._insertId<br/>At JDBCSessionIdManager.java:[line 1222]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N88220');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N88220" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.JDBCSessionIdManager<br/>In method org.spark_project.jetty.server.session.JDBCSessionIdManager.prepareTables()<br/>At JDBCSessionIdManager.java:[line 1115]<br/>Sink method java/sql/Statement.executeUpdate(Ljava/lang/String;)I<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager._createSessionIdTable<br/>At JDBCSessionIdManager.java:[line 1115]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N88299');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N88299" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.JDBCSessionIdManager<br/>In method org.spark_project.jetty.server.session.JDBCSessionIdManager.prepareTables()<br/>At JDBCSessionIdManager.java:[line 1128]<br/>Sink method java/sql/Statement.executeUpdate(Ljava/lang/String;)I<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager._createSessionTable<br/>At JDBCSessionIdManager.java:[line 1128]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N88378');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N88378" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.JDBCSessionIdManager<br/>In method org.spark_project.jetty.server.session.JDBCSessionIdManager.prepareTables()<br/>At JDBCSessionIdManager.java:[line 1153]<br/>Sink method java/sql/Statement.executeUpdate(Ljava/lang/String;)I<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getSchemaTableName()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getAlterTableForMaxIntervalAsString()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getMaxIntervalColumn()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getTableName()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema._tableName<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getSchemaName()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$DatabaseAdaptor._longType<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$DatabaseAdaptor.getLongType()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema._schemaName<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema._maxIntervalColumn<br/>At JDBCSessionIdManager.java:[line 1153]<br/>At JDBCSessionIdManager.java:[line 549]<br/>At JDBCSessionIdManager.java:[line 138]<br/>At JDBCSessionIdManager.java:[line 147]<br/>At JDBCSessionIdManager.java:[line 263]<br/>At JDBCSessionIdManager.java:[line 309]<br/>At JDBCSessionIdManager.java:[line 310]<br/>At JDBCSessionIdManager.java:[line 312]<br/>At JDBCSessionIdManager.java:[line 314]<br/>At JDBCSessionIdManager.java:[line 319]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N88592');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N88592" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.JDBCSessionIdManager<br/>In method org.spark_project.jetty.server.session.JDBCSessionIdManager.prepareTables()<br/>At JDBCSessionIdManager.java:[line 1188]<br/>Sink method java/sql/Statement.executeUpdate(Ljava/lang/String;)I<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getSchemaName()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getSchemaTableName()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getExpiryTimeColumn()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getTableName()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema._expiryTimeColumn<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema._schemaName<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getCreateIndexOverExpiryStatementAsString(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema._tableName<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getCreateIndexOverExpiryStatementAsString(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>At JDBCSessionIdManager.java:[line 1171]<br/>At JDBCSessionIdManager.java:[line 1188]<br/>At JDBCSessionIdManager.java:[line 138]<br/>At JDBCSessionIdManager.java:[line 147]<br/>At JDBCSessionIdManager.java:[line 254]<br/>At JDBCSessionIdManager.java:[line 297]<br/>At JDBCSessionIdManager.java:[line 319]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N88771');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N88771" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.JDBCSessionIdManager<br/>In method org.spark_project.jetty.server.session.JDBCSessionIdManager.prepareTables()<br/>At JDBCSessionIdManager.java:[line 1190]<br/>Sink method java/sql/Statement.executeUpdate(Ljava/lang/String;)I<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getSchemaTableName()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getCreateIndexOverSessionStatementAsString(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getTableName()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema._tableName<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getSchemaName()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema._idColumn<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getContextPathColumn()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getCreateIndexOverSessionStatementAsString(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema._schemaName<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema._contextPathColumn<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getIdColumn()Ljava/lang/String;<br/>At JDBCSessionIdManager.java:[line 1172]<br/>At JDBCSessionIdManager.java:[line 1190]<br/>At JDBCSessionIdManager.java:[line 138]<br/>At JDBCSessionIdManager.java:[line 147]<br/>At JDBCSessionIdManager.java:[line 173]<br/>At JDBCSessionIdManager.java:[line 182]<br/>At JDBCSessionIdManager.java:[line 302]<br/>At JDBCSessionIdManager.java:[line 319]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N88970');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N88970" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.JDBCSessionIdManager<br/>In method org.spark_project.jetty.server.session.JDBCSessionIdManager.scavenge()<br/>At JDBCSessionIdManager.java:[line 1306]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager._selectBoundedExpiredSessions<br/>At JDBCSessionIdManager.java:[line 1306]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N89049');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N89049" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.JDBCSessionIdManager<br/>In method org.spark_project.jetty.server.session.JDBCSessionIdManager.scavenge()<br/>At JDBCSessionIdManager.java:[line 1325]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager._selectExpiredSessions<br/>At JDBCSessionIdManager.java:[line 1325]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N89128');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N89128" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.JDBCSessionIdManager$SessionTableSchema<br/>In method org.spark_project.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getLoadStatement(Connection, String, String, String)<br/>At JDBCSessionIdManager.java:[line 380]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getSchemaTableName()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getVirtualHostColumn()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getTableName()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema._tableName<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema._virtualHostColumn<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getSchemaName()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema._idColumn<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getContextPathColumn()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema._schemaName<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema._contextPathColumn<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getIdColumn()Ljava/lang/String;<br/>At JDBCSessionIdManager.java:[line 138]<br/>At JDBCSessionIdManager.java:[line 147]<br/>At JDBCSessionIdManager.java:[line 173]<br/>At JDBCSessionIdManager.java:[line 182]<br/>At JDBCSessionIdManager.java:[line 191]<br/>At JDBCSessionIdManager.java:[line 319]<br/>At JDBCSessionIdManager.java:[line 380]<br/>At JDBCSessionIdManager.java:[line 381]<br/>At JDBCSessionIdManager.java:[line 382]<br/>At JDBCSessionIdManager.java:[line 383]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N89347');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N89347" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.JDBCSessionIdManager$SessionTableSchema<br/>In method org.spark_project.jetty.server.session.JDBCSessionIdManager$SessionTableSchema.getLoadStatement(Connection, String, String, String)<br/>At JDBCSessionIdManager.java:[line 391]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getSchemaTableName()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getVirtualHostColumn()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getTableName()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema._tableName<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema._virtualHostColumn<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getSchemaName()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema._idColumn<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getContextPathColumn()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema._schemaName<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema._contextPathColumn<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager$SessionTableSchema.getIdColumn()Ljava/lang/String;<br/>At JDBCSessionIdManager.java:[line 138]<br/>At JDBCSessionIdManager.java:[line 147]<br/>At JDBCSessionIdManager.java:[line 173]<br/>At JDBCSessionIdManager.java:[line 182]<br/>At JDBCSessionIdManager.java:[line 191]<br/>At JDBCSessionIdManager.java:[line 319]<br/>At JDBCSessionIdManager.java:[line 391]<br/>At JDBCSessionIdManager.java:[line 392]<br/>At JDBCSessionIdManager.java:[line 393]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N89556');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N89556" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.JDBCSessionManager<br/>In method org.spark_project.jetty.server.session.JDBCSessionManager.deleteSession(JDBCSessionManager$Session)<br/>At JDBCSessionManager.java:[line 1165]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager._deleteSession<br/>At JDBCSessionManager.java:[line 1165]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N89635');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N89635" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.JDBCSessionManager<br/>In method org.spark_project.jetty.server.session.JDBCSessionManager.storeSession(JDBCSessionManager$Session)<br/>At JDBCSessionManager.java:[line 1019]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager._insertSession<br/>At JDBCSessionManager.java:[line 1019]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N89714');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N89714" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.JDBCSessionManager<br/>In method org.spark_project.jetty.server.session.JDBCSessionManager.updateSession(JDBCSessionManager$Session)<br/>At JDBCSessionManager.java:[line 1070]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager._updateSession<br/>At JDBCSessionManager.java:[line 1070]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N89793');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N89793" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.JDBCSessionManager<br/>In method org.spark_project.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(JDBCSessionManager$Session)<br/>At JDBCSessionManager.java:[line 1132]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager._updateSessionAccessTime<br/>At JDBCSessionManager.java:[line 1132]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N89872');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N89872" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.spark_project.jetty.server.session.JDBCSessionManager<br/>In method org.spark_project.jetty.server.session.JDBCSessionManager.updateSessionNode(JDBCSessionManager$Session)<br/>At JDBCSessionManager.java:[line 1111]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/session/JDBCSessionIdManager._updateSessionNode<br/>At JDBCSessionManager.java:[line 1111]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67162');">
<td>
<span class="priority-2">SECSSL</span>
</td>
<td>SSLContext needs to be compatible with TLS 1.2</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67162" style="display: none;">
<a href="#SSL_CONTEXT">Bug type SSL_CONTEXT (click for details)</a>
<br/>In class org.apache.spark.TestUtils$<br/>In method org.apache.spark.TestUtils$.httpResponseCode(URL, String, Seq)<br/>At TestUtils.scala:[line 216]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73425');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73425" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.apache.spark.deploy.rest.RestSubmissionClient<br/>In method org.apache.spark.deploy.rest.RestSubmissionClient.org$apache$spark$deploy$rest$RestSubmissionClient$$get(URL)<br/>At RestSubmissionClient.scala:[line 193]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source org/apache/spark/deploy/rest/RestSubmissionClient.org$apache$spark$deploy$rest$RestSubmissionClient$$get(Ljava/net/URL;)Lorg/apache/spark/deploy/rest/SubmitRestProtocolResponse; parameter 0<br/>At RestSubmissionClient.scala:[line 306]<br/>At RestSubmissionClient.scala:[line 150]<br/>At RestSubmissionClient.scala:[line 152]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73524');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73524" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.apache.spark.deploy.rest.RestSubmissionClient<br/>In method org.apache.spark.deploy.rest.RestSubmissionClient.org$apache$spark$deploy$rest$RestSubmissionClient$$post(URL)<br/>At RestSubmissionClient.scala:[line 201]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source org/apache/spark/deploy/rest/RestSubmissionClient.org$apache$spark$deploy$rest$RestSubmissionClient$$post(Ljava/net/URL;)Lorg/apache/spark/deploy/rest/SubmitRestProtocolResponse; parameter 0<br/>At RestSubmissionClient.scala:[line 300]<br/>At RestSubmissionClient.scala:[line 118]<br/>At RestSubmissionClient.scala:[line 120]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73623');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73623" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.apache.spark.deploy.rest.RestSubmissionClient<br/>In method org.apache.spark.deploy.rest.RestSubmissionClient.org$apache$spark$deploy$rest$RestSubmissionClient$$postJson(URL, String)<br/>At RestSubmissionClient.scala:[line 209]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source org/apache/spark/deploy/rest/RestSubmissionClient.org$apache$spark$deploy$rest$RestSubmissionClient$$postJson(Ljava/net/URL;Ljava/lang/String;)Lorg/apache/spark/deploy/rest/SubmitRestProtocolResponse; parameter 1<br/>At RestSubmissionClient.scala:[line 294]<br/>At RestSubmissionClient.scala:[line 88]<br/>At RestSubmissionClient.scala:[line 90]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71993');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71993" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.apache.spark.deploy.TestMasterInfo<br/>In method org.apache.spark.deploy.TestMasterInfo.readState()<br/>At FaultToleranceTest.scala:[line 353]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source scala/collection/immutable/StringOps.format(Lscala/collection/Seq;)Ljava/lang/String;<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>At FaultToleranceTest.scala:[line 353]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67215');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67215" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.apache.spark.TestUtils$<br/>In method org.apache.spark.TestUtils$.httpResponseCode(URL, String, Seq)<br/>At TestUtils.scala:[line 210]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source org/apache/spark/TestUtils$.httpResponseCode(Ljava/net/URL;Ljava/lang/String;Lscala/collection/Seq;)I parameter 2<br/>Method usage not detected<br/>In TestUtils.scala</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N80231');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N80231" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.apache.spark.util.Utils$<br/>In method org.apache.spark.util.Utils$.doFetchFile(String, File, String, SparkConf, SecurityManager, Configuration)<br/>At Utils.scala:[line 701]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source java/net/URI.toURL()Ljava/net/URL;<br/>Unknown source scala/collection/mutable/StringBuilder.append(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;<br/>Unknown source java/net/URI.getQuery()Ljava/lang/String;<br/>Unknown source org/apache/spark/util/Utils$.constructURIForAuthentication(Ljava/net/URI;Lorg/apache/spark/SecurityManager;)Ljava/net/URI;<br/>Unknown source java/net/URI.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source java/net/URI.getHost()Ljava/lang/String;<br/>Unknown source scala/collection/mutable/StringBuilder.toString()Ljava/lang/String;<br/>Unknown source java/net/URI.getPath()Ljava/lang/String;<br/>Unknown source java/net/URI.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V<br/>Unknown source org/apache/spark/util/Utils$.doFetchFile(Ljava/lang/String;Ljava/io/File;Ljava/lang/String;Lorg/apache/spark/SparkConf;Lorg/apache/spark/SecurityManager;Lorg/apache/hadoop/conf/Configuration;)Ljava/io/File; parameter 5<br/>Unknown source java/net/URI.getFragment()Ljava/lang/String;<br/>Unknown source org/apache/spark/util/Utils$.constructURIForAuthentication(Ljava/net/URI;Lorg/apache/spark/SecurityManager;)Ljava/net/URI; parameter 1<br/>Unknown source java/net/URI.getScheme()Ljava/lang/String;<br/>Unknown source org/apache/spark/SecurityManager.getSecretKey()Ljava/lang/String;<br/>Unknown source org/apache/spark/SecurityManager.getHttpUser()Ljava/lang/String;<br/>At SparkContext.scala:[line 1568]<br/>In DependencyUtils.scala<br/>At DependencyUtils.scala:[line 125]<br/>At DependencyUtils.scala:[line 136]<br/>At DriverDescription.scala:[line 21]<br/>At SparkSubmit.scala:[line 400]<br/>At SparkSubmit.scala:[line 408]<br/>At SparkSubmit.scala:[line 411]<br/>At SparkSubmit.scala:[line 414]<br/>At SparkSubmit.scala:[line 417]<br/>At SparkSubmit.scala:[line 367]<br/>At DriverRunner.scala:[line 155]<br/>At DriverRunner.scala:[line 156]<br/>At Executor.scala:[line 793]<br/>At Executor.scala:[line 798]<br/>At Executor.scala:[line 799]<br/>At Executor.scala:[line 805]<br/>In Utils.scala<br/>At Utils.scala:[line 422]<br/>At Utils.scala:[line 423]<br/>At Utils.scala:[line 424]<br/>At Utils.scala:[line 496]<br/>At Utils.scala:[line 509]<br/>At Utils.scala:[line 685]<br/>At Utils.scala:[line 687]<br/>At Utils.scala:[line 700]<br/>At Utils.scala:[line 701]<br/>At Utils.scala:[line 1991]<br/>At Utils.scala:[line 1999]<br/>At Utils.scala:[line 2000]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N80666');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N80666" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.apache.spark.util.Utils$<br/>In method org.apache.spark.util.Utils$.doFetchFile(String, File, String, SparkConf, SecurityManager, Configuration)<br/>At Utils.scala:[line 705]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source org/apache/spark/util/Utils$.doFetchFile(Ljava/lang/String;Ljava/io/File;Ljava/lang/String;Lorg/apache/spark/SparkConf;Lorg/apache/spark/SecurityManager;Lorg/apache/hadoop/conf/Configuration;)Ljava/io/File; parameter 5<br/>At SparkContext.scala:[line 1568]<br/>In DependencyUtils.scala<br/>At DependencyUtils.scala:[line 125]<br/>At DependencyUtils.scala:[line 136]<br/>At DriverDescription.scala:[line 21]<br/>At SparkSubmit.scala:[line 400]<br/>At SparkSubmit.scala:[line 408]<br/>At SparkSubmit.scala:[line 411]<br/>At SparkSubmit.scala:[line 414]<br/>At SparkSubmit.scala:[line 417]<br/>At SparkSubmit.scala:[line 367]<br/>At DriverRunner.scala:[line 155]<br/>At DriverRunner.scala:[line 156]<br/>At Executor.scala:[line 793]<br/>At Executor.scala:[line 798]<br/>At Executor.scala:[line 799]<br/>At Executor.scala:[line 805]<br/>In Utils.scala<br/>At Utils.scala:[line 496]<br/>At Utils.scala:[line 509]<br/>At Utils.scala:[line 705]<br/>At Utils.scala:[line 1991]<br/>At Utils.scala:[line 1999]<br/>At Utils.scala:[line 2000]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N86455');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N86455" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.spark_project.jetty.server.handler.ShutdownHandler<br/>In method org.spark_project.jetty.server.handler.ShutdownHandler.sendShutdown()<br/>At ShutdownHandler.java:[line 126]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source org/spark_project/jetty/server/handler/ShutdownHandler._shutdownToken<br/>At ShutdownHandler.java:[line 123]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N97727');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N97727" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.spark_project.jetty.util.resource.FileResource<br/>In method new org.spark_project.jetty.util.resource.FileResource(URL)<br/>At FileResource.java:[line 98]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/util/resource/FileResource.&lt;init&gt;(Ljava/net/URL;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N97870');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N97870" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.spark_project.jetty.util.resource.JarFileResource<br/>In method org.spark_project.jetty.util.resource.JarFileResource.exists()<br/>At JarFileResource.java:[line 174]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source org/spark_project/jetty/util/resource/JarFileResource._jarUrl<br/>At JarFileResource.java:[line 174]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N97954');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N97954" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.spark_project.jetty.util.resource.JarFileResource<br/>In method org.spark_project.jetty.util.resource.JarFileResource.listEntries()<br/>At JarFileResource.java:[line 310]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source org/spark_project/jetty/util/resource/JarFileResource._jarUrl<br/>At JarFileResource.java:[line 310]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N98186');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N98186" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.spark_project.jetty.util.resource.JarResource<br/>In method org.spark_project.jetty.util.resource.JarResource.copyTo(File)<br/>At JarResource.java:[line 160]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source java/net/URL.toExternalForm()Ljava/lang/String;<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source org/spark_project/jetty/util/resource/JarResource.getURL()Ljava/net/URL;<br/>Unknown source org/spark_project/jetty/util/resource/URLResource._url<br/>At JarResource.java:[line 147]<br/>At JarResource.java:[line 154]<br/>At URLResource.java:[line 162]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N98300');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N98300" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.spark_project.jetty.util.resource.JarResource<br/>In method org.spark_project.jetty.util.resource.JarResource.getInputStream()<br/>At JarResource.java:[line 129]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source org/spark_project/jetty/util/resource/JarResource._urlString<br/>At JarResource.java:[line 128]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N98996');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N98996" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.spark_project.jetty.util.resource.URLResource<br/>In method org.spark_project.jetty.util.resource.URLResource.checkConnection()<br/>At URLResource.java:[line 68]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/util/resource/URLResource._url<br/>At URLResource.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N83132');">
<td>
<span class="priority-2">SECUHE</span>
</td>
<td>Unsafe comparison of hash that are susceptible to timing attack</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N83132" style="display: none;">
<a href="#UNSAFE_HASH_EQUALS">Bug type UNSAFE_HASH_EQUALS (click for details)</a>
<br/>In class org.spark_project.jetty.plus.webapp.PlusDescriptorProcessor<br/>In method org.spark_project.jetty.plus.webapp.PlusDescriptorProcessor.visitResourceRef(WebAppContext, Descriptor, XmlParser$Node)<br/>At PlusDescriptorProcessor.java:[line 327]<br/>Sink method java/lang/String.equals(Ljava/lang/Object;)Z<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/xml/XmlParser$Node.getString(Ljava/lang/String;ZZ)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72077');">
<td>
<span class="priority-2">SECUR</span>
</td>
<td>The following redirection could be used by an attacker to redirect users to a phishing website.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72077" style="display: none;">
<a href="#UNVALIDATED_REDIRECT">Bug type UNVALIDATED_REDIRECT (click for details)</a>
<br/>In class org.apache.spark.deploy.history.ApplicationCacheCheckFilter<br/>In method org.apache.spark.deploy.history.ApplicationCacheCheckFilter.doFilter(ServletRequest, ServletResponse, FilterChain)<br/>At ApplicationCache.scala:[line 414]<br/>Sink method javax/servlet/http/HttpServletResponse.sendRedirect(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javax/servlet/http/HttpServletResponse.encodeRedirectURL(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72283');">
<td>
<span class="priority-2">SECUR</span>
</td>
<td>The following redirection could be used by an attacker to redirect users to a phishing website.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72283" style="display: none;">
<a href="#UNVALIDATED_REDIRECT">Bug type UNVALIDATED_REDIRECT (click for details)</a>
<br/>In class org.apache.spark.deploy.history.HistoryServer$$anon$1<br/>In method org.apache.spark.deploy.history.HistoryServer$$anon$1.doGet(HttpServletRequest, HttpServletResponse)<br/>At HistoryServer.scala:[line 101]<br/>Sink method javax/servlet/http/HttpServletResponse.sendRedirect(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javax/servlet/http/HttpServletResponse.encodeRedirectURL(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76984');">
<td>
<span class="priority-2">SECUR</span>
</td>
<td>The following redirection could be used by an attacker to redirect users to a phishing website.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76984" style="display: none;">
<a href="#UNVALIDATED_REDIRECT">Bug type UNVALIDATED_REDIRECT (click for details)</a>
<br/>In class org.apache.spark.ui.JettyUtils$$anon$1<br/>In method org.apache.spark.ui.JettyUtils$$anon$1.handle(String, Request, HttpServletRequest, HttpServletResponse)<br/>At JettyUtils.scala:[line 440]<br/>Sink method javax/servlet/http/HttpServletResponse.sendRedirect(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javax/servlet/http/HttpServletResponse.encodeRedirectURL(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77244');">
<td>
<span class="priority-1">SECUR</span>
</td>
<td>The following redirection could be used by an attacker to redirect users to a phishing website.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77244" style="display: none;">
<a href="#UNVALIDATED_REDIRECT">Bug type UNVALIDATED_REDIRECT (click for details)</a>
<br/>In class org.apache.spark.ui.JettyUtils$$anon$4<br/>In method org.apache.spark.ui.JettyUtils$$anon$4.doRequest(HttpServletRequest, HttpServletResponse)<br/>At JettyUtils.scala:[line 177]<br/>Sink method javax/servlet/http/HttpServletResponse.sendRedirect(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/ui/JettyUtils$$anon$4.prefixedDestPath$1<br/>Tainted source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Tainted source java/net/URL.toString()Ljava/lang/String;<br/>Tainted source java/net/URL.&lt;init&gt;(Ljava/net/URL;Ljava/lang/String;)V<br/>Tainted source javax/servlet/http/HttpServletRequest.getRequestURL()Ljava/lang/StringBuffer;<br/>Tainted source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>At JettyUtils.scala:[line 176]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N84509');">
<td>
<span class="priority-1">SECUR</span>
</td>
<td>The following redirection could be used by an attacker to redirect users to a phishing website.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N84509" style="display: none;">
<a href="#UNVALIDATED_REDIRECT">Bug type UNVALIDATED_REDIRECT (click for details)</a>
<br/>In class org.spark_project.jetty.server.handler.ContextHandler<br/>In method org.spark_project.jetty.server.handler.ContextHandler.checkContext(String, Request, HttpServletResponse)<br/>At ContextHandler.java:[line 999]<br/>Sink method javax/servlet/http/HttpServletResponse.sendRedirect(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source org/spark_project/jetty/server/Request.getQueryString()Ljava/lang/String;<br/>Tainted source org/spark_project/jetty/server/Request.getRequestURI()Ljava/lang/String;<br/>At ContextHandler.java:[line 999]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N84593');">
<td>
<span class="priority-1">SECUR</span>
</td>
<td>The following redirection could be used by an attacker to redirect users to a phishing website.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N84593" style="display: none;">
<a href="#UNVALIDATED_REDIRECT">Bug type UNVALIDATED_REDIRECT (click for details)</a>
<br/>In class org.spark_project.jetty.server.handler.ContextHandler<br/>In method org.spark_project.jetty.server.handler.ContextHandler.checkContext(String, Request, HttpServletResponse)<br/>At ContextHandler.java:[line 1001]<br/>Sink method javax/servlet/http/HttpServletResponse.sendRedirect(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source org/spark_project/jetty/server/Request.getRequestURI()Ljava/lang/String;<br/>At ContextHandler.java:[line 1001]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N84955');">
<td>
<span class="priority-2">SECUR</span>
</td>
<td>The following redirection could be used by an attacker to redirect users to a phishing website.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N84955" style="display: none;">
<a href="#UNVALIDATED_REDIRECT">Bug type UNVALIDATED_REDIRECT (click for details)</a>
<br/>In class org.spark_project.jetty.server.handler.ResourceHandler<br/>In method org.spark_project.jetty.server.handler.ResourceHandler.handle(String, Request, HttpServletRequest, HttpServletResponse)<br/>At ResourceHandler.java:[line 456]<br/>Sink method javax/servlet/http/HttpServletResponse.sendRedirect(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javax/servlet/http/HttpServletResponse.encodeRedirectURL(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N86241');">
<td>
<span class="priority-2">SECUR</span>
</td>
<td>The following redirection could be used by an attacker to redirect users to a phishing website.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N86241" style="display: none;">
<a href="#UNVALIDATED_REDIRECT">Bug type UNVALIDATED_REDIRECT (click for details)</a>
<br/>In class org.spark_project.jetty.server.handler.SecuredRedirectHandler<br/>In method org.spark_project.jetty.server.handler.SecuredRedirectHandler.handle(String, Request, HttpServletRequest, HttpServletResponse)<br/>At SecuredRedirectHandler.java:[line 66]<br/>Sink method javax/servlet/http/HttpServletResponse.sendRedirect(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/Request.getQueryString()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/http/HttpURI._query<br/>Unknown source org/spark_project/jetty/util/URIUtil.newURI(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/spark_project/jetty/util/URIUtil.newURI(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/spark_project/jetty/util/URIUtil.newURI(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/http/HttpURI.getPath()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/server/Request.getRequestURI()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/http/HttpURI.getQuery()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/http/HttpURI._path<br/>Unknown source org/spark_project/jetty/util/URIUtil.newURIBuilder(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/StringBuilder;<br/>At HttpURI.java:[line 573]<br/>At HttpURI.java:[line 593]<br/>At Request.java:[line 1136]<br/>At Request.java:[line 1306]<br/>At SecuredRedirectHandler.java:[line 64]<br/>At URIUtil.java:[line 825]<br/>At URIUtil.java:[line 826]<br/>At URIUtil.java:[line 828]<br/>At URIUtil.java:[line 829]<br/>At URIUtil.java:[line 843]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N90770');">
<td>
<span class="priority-2">SECUR</span>
</td>
<td>The following redirection could be used by an attacker to redirect users to a phishing website.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N90770" style="display: none;">
<a href="#UNVALIDATED_REDIRECT">Bug type UNVALIDATED_REDIRECT (click for details)</a>
<br/>In class org.spark_project.jetty.servlet.DefaultServlet<br/>In method org.spark_project.jetty.servlet.DefaultServlet.doGet(HttpServletRequest, HttpServletResponse)<br/>At DefaultServlet.java:[line 502]<br/>Sink method javax/servlet/http/HttpServletResponse.sendRedirect(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javax/servlet/http/HttpServletResponse.encodeRedirectURL(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N90839');">
<td>
<span class="priority-2">SECUR</span>
</td>
<td>The following redirection could be used by an attacker to redirect users to a phishing website.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N90839" style="display: none;">
<a href="#UNVALIDATED_REDIRECT">Bug type UNVALIDATED_REDIRECT (click for details)</a>
<br/>In class org.spark_project.jetty.servlet.DefaultServlet<br/>In method org.spark_project.jetty.servlet.DefaultServlet.sendWelcome(HttpContent, String, boolean, boolean, HttpServletRequest, HttpServletResponse)<br/>At DefaultServlet.java:[line 573]<br/>Sink method javax/servlet/http/HttpServletResponse.sendRedirect(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javax/servlet/http/HttpServletResponse.encodeRedirectURL(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N90908');">
<td>
<span class="priority-2">SECUR</span>
</td>
<td>The following redirection could be used by an attacker to redirect users to a phishing website.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N90908" style="display: none;">
<a href="#UNVALIDATED_REDIRECT">Bug type UNVALIDATED_REDIRECT (click for details)</a>
<br/>In class org.spark_project.jetty.servlet.DefaultServlet<br/>In method org.spark_project.jetty.servlet.DefaultServlet.sendWelcome(HttpContent, String, boolean, boolean, HttpServletRequest, HttpServletResponse)<br/>At DefaultServlet.java:[line 592]<br/>Sink method javax/servlet/http/HttpServletResponse.sendRedirect(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javax/servlet/http/HttpServletResponse.encodeRedirectURL(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N92552');">
<td>
<span class="priority-2">SECUR</span>
</td>
<td>The following redirection could be used by an attacker to redirect users to a phishing website.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N92552" style="display: none;">
<a href="#UNVALIDATED_REDIRECT">Bug type UNVALIDATED_REDIRECT (click for details)</a>
<br/>In class org.spark_project.jetty.servlets.CGI<br/>In method org.spark_project.jetty.servlets.CGI.exec(File, String, HttpServletRequest, HttpServletResponse)<br/>At CGI.java:[line 400]<br/>Sink method javax/servlet/http/HttpServletResponse.sendRedirect(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javax/servlet/http/HttpServletResponse.encodeRedirectURL(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72146');">
<td>
<span class="priority-1">SECURLR</span>
</td>
<td>Method rewriting session ID into the URL</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72146" style="display: none;">
<a href="#URL_REWRITING">Bug type URL_REWRITING (click for details)</a>
<br/>In class org.apache.spark.deploy.history.ApplicationCacheCheckFilter<br/>In method org.apache.spark.deploy.history.ApplicationCacheCheckFilter.doFilter(ServletRequest, ServletResponse, FilterChain)<br/>At ApplicationCache.scala:[line 413]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72352');">
<td>
<span class="priority-1">SECURLR</span>
</td>
<td>Method rewriting session ID into the URL</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72352" style="display: none;">
<a href="#URL_REWRITING">Bug type URL_REWRITING (click for details)</a>
<br/>In class org.apache.spark.deploy.history.HistoryServer$$anon$1<br/>In method org.apache.spark.deploy.history.HistoryServer$$anon$1.doGet(HttpServletRequest, HttpServletResponse)<br/>At HistoryServer.scala:[line 101]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77053');">
<td>
<span class="priority-1">SECURLR</span>
</td>
<td>Method rewriting session ID into the URL</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77053" style="display: none;">
<a href="#URL_REWRITING">Bug type URL_REWRITING (click for details)</a>
<br/>In class org.apache.spark.ui.JettyUtils$$anon$1<br/>In method org.apache.spark.ui.JettyUtils$$anon$1.handle(String, Request, HttpServletRequest, HttpServletResponse)<br/>At JettyUtils.scala:[line 440]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N84077');">
<td>
<span class="priority-1">SECURLR</span>
</td>
<td>Method rewriting session ID into the URL</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N84077" style="display: none;">
<a href="#URL_REWRITING">Bug type URL_REWRITING (click for details)</a>
<br/>In class org.spark_project.jetty.security.authentication.FormAuthenticator<br/>In method org.spark_project.jetty.security.authentication.FormAuthenticator.validateRequest(ServletRequest, ServletResponse, boolean)<br/>At FormAuthenticator.java:[line 308]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N84130');">
<td>
<span class="priority-1">SECURLR</span>
</td>
<td>Method rewriting session ID into the URL</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N84130" style="display: none;">
<a href="#URL_REWRITING">Bug type URL_REWRITING (click for details)</a>
<br/>In class org.spark_project.jetty.security.authentication.FormAuthenticator<br/>In method org.spark_project.jetty.security.authentication.FormAuthenticator.validateRequest(ServletRequest, ServletResponse, boolean)<br/>At FormAuthenticator.java:[line 333]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N84183');">
<td>
<span class="priority-1">SECURLR</span>
</td>
<td>Method rewriting session ID into the URL</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N84183" style="display: none;">
<a href="#URL_REWRITING">Bug type URL_REWRITING (click for details)</a>
<br/>In class org.spark_project.jetty.security.authentication.FormAuthenticator<br/>In method org.spark_project.jetty.security.authentication.FormAuthenticator.validateRequest(ServletRequest, ServletResponse, boolean)<br/>At FormAuthenticator.java:[line 425]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N85024');">
<td>
<span class="priority-1">SECURLR</span>
</td>
<td>Method rewriting session ID into the URL</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N85024" style="display: none;">
<a href="#URL_REWRITING">Bug type URL_REWRITING (click for details)</a>
<br/>In class org.spark_project.jetty.server.handler.ResourceHandler<br/>In method org.spark_project.jetty.server.handler.ResourceHandler.handle(String, Request, HttpServletRequest, HttpServletResponse)<br/>At ResourceHandler.java:[line 456]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N90977');">
<td>
<span class="priority-1">SECURLR</span>
</td>
<td>Method rewriting session ID into the URL</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N90977" style="display: none;">
<a href="#URL_REWRITING">Bug type URL_REWRITING (click for details)</a>
<br/>In class org.spark_project.jetty.servlet.DefaultServlet<br/>In method org.spark_project.jetty.servlet.DefaultServlet.doGet(HttpServletRequest, HttpServletResponse)<br/>At DefaultServlet.java:[line 502]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N91030');">
<td>
<span class="priority-1">SECURLR</span>
</td>
<td>Method rewriting session ID into the URL</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N91030" style="display: none;">
<a href="#URL_REWRITING">Bug type URL_REWRITING (click for details)</a>
<br/>In class org.spark_project.jetty.servlet.DefaultServlet<br/>In method org.spark_project.jetty.servlet.DefaultServlet.sendWelcome(HttpContent, String, boolean, boolean, HttpServletRequest, HttpServletResponse)<br/>At DefaultServlet.java:[line 573]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N91083');">
<td>
<span class="priority-1">SECURLR</span>
</td>
<td>Method rewriting session ID into the URL</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N91083" style="display: none;">
<a href="#URL_REWRITING">Bug type URL_REWRITING (click for details)</a>
<br/>In class org.spark_project.jetty.servlet.DefaultServlet<br/>In method org.spark_project.jetty.servlet.DefaultServlet.sendWelcome(HttpContent, String, boolean, boolean, HttpServletRequest, HttpServletResponse)<br/>At DefaultServlet.java:[line 592]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N92621');">
<td>
<span class="priority-1">SECURLR</span>
</td>
<td>Method rewriting session ID into the URL</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N92621" style="display: none;">
<a href="#URL_REWRITING">Bug type URL_REWRITING (click for details)</a>
<br/>In class org.spark_project.jetty.servlets.CGI<br/>In method org.spark_project.jetty.servlets.CGI.exec(File, String, HttpServletRequest, HttpServletResponse)<br/>At CGI.java:[line 400]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67769');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to org.apache.spark.api.python.PythonAccumulatorV2 (instead of SSLSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67769" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class org.apache.spark.api.python.PythonAccumulatorV2<br/>In method org.apache.spark.api.python.PythonAccumulatorV2.openSocket()<br/>At PythonRDD.scala:[line 617]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69020');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to org.apache.spark.api.python.PythonWorkerFactory (instead of SSLSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69020" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class org.apache.spark.api.python.PythonWorkerFactory<br/>In method org.apache.spark.api.python.PythonWorkerFactory.createSocket$1()<br/>At PythonWorkerFactory.scala:[line 109]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75104');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to org.apache.spark.launcher.LauncherBackend (instead of SSLSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75104" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class org.apache.spark.launcher.LauncherBackend<br/>In method org.apache.spark.launcher.LauncherBackend.connect()<br/>At LauncherBackend.scala:[line 48]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67646');">
<td>
<span class="priority-2">SECUSS</span>
</td>
<td>Unencrypted server socket (instead of SSLServerSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67646" style="display: none;">
<a href="#UNENCRYPTED_SERVER_SOCKET">Bug type UNENCRYPTED_SERVER_SOCKET (click for details)</a>
<br/>In class org.apache.spark.api.python.BasePythonRunner$WriterThread$$anonfun$run$1<br/>In method org.apache.spark.api.python.BasePythonRunner$WriterThread$$anonfun$run$1.apply()<br/>At PythonRunner.scala:[line 206]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68704');">
<td>
<span class="priority-2">SECUSS</span>
</td>
<td>Unencrypted server socket (instead of SSLServerSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68704" style="display: none;">
<a href="#UNENCRYPTED_SERVER_SOCKET">Bug type UNENCRYPTED_SERVER_SOCKET (click for details)</a>
<br/>In class org.apache.spark.api.python.PythonServer$<br/>In method org.apache.spark.api.python.PythonServer$.setupOneConnectionServer(SocketAuthHelper, String, Function1)<br/>At PythonRDD.scala:[line 851]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68966');">
<td>
<span class="priority-2">SECUSS</span>
</td>
<td>Unencrypted server socket (instead of SSLServerSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68966" style="display: none;">
<a href="#UNENCRYPTED_SERVER_SOCKET">Bug type UNENCRYPTED_SERVER_SOCKET (click for details)</a>
<br/>In class org.apache.spark.api.python.PythonWorkerFactory<br/>In method org.apache.spark.api.python.PythonWorkerFactory.createSimpleWorker()<br/>At PythonWorkerFactory.scala:[line 144]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69261');">
<td>
<span class="priority-2">SECUSS</span>
</td>
<td>Unencrypted server socket (instead of SSLServerSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69261" style="display: none;">
<a href="#UNENCRYPTED_SERVER_SOCKET">Bug type UNENCRYPTED_SERVER_SOCKET (click for details)</a>
<br/>In class org.apache.spark.api.r.RBackend$<br/>In method org.apache.spark.api.r.RBackend$.main(String[])<br/>At RBackend.scala:[line 126]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69315');">
<td>
<span class="priority-2">SECUSS</span>
</td>
<td>Unencrypted server socket (instead of SSLServerSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69315" style="display: none;">
<a href="#UNENCRYPTED_SERVER_SOCKET">Bug type UNENCRYPTED_SERVER_SOCKET (click for details)</a>
<br/>In class org.apache.spark.api.r.RRunner<br/>In method org.apache.spark.api.r.RRunner.compute(Iterator, int)<br/>At RRunner.scala:[line 64]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69518');">
<td>
<span class="priority-2">SECUSS</span>
</td>
<td>Unencrypted server socket (instead of SSLServerSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69518" style="display: none;">
<a href="#UNENCRYPTED_SERVER_SOCKET">Bug type UNENCRYPTED_SERVER_SOCKET (click for details)</a>
<br/>In class org.apache.spark.api.r.RRunner$<br/>In method org.apache.spark.api.r.RRunner$.createRWorker(int)<br/>At RRunner.scala:[line 378]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N84455');">
<td>
<span class="priority-2">SECUSS</span>
</td>
<td>Unencrypted server socket (instead of SSLServerSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N84455" style="display: none;">
<a href="#UNENCRYPTED_SERVER_SOCKET">Bug type UNENCRYPTED_SERVER_SOCKET (click for details)</a>
<br/>In class org.spark_project.jetty.server.ShutdownMonitor<br/>In method org.spark_project.jetty.server.ShutdownMonitor.listen()<br/>At ShutdownMonitor.java:[line 273]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67459');">
<td>
<span class="priority-2">SECWHV</span>
</td>
<td>HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67459" style="display: none;">
<a href="#WEAK_HOSTNAME_VERIFIER">Bug type WEAK_HOSTNAME_VERIFIER (click for details)</a>
<br/>In class org.apache.spark.TestUtils$$anon$2<br/>In method org.apache.spark.TestUtils$$anon$2.verify(String, SSLSession)<br/>At TestUtils.scala:[line 223]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67297');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67297" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class org.apache.spark.TestUtils$$anon$1<br/>In method org.apache.spark.TestUtils$$anon$1.checkClientTrusted(X509Certificate[], String)<br/>At TestUtils.scala:[line 219]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67351');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67351" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class org.apache.spark.TestUtils$$anon$1<br/>In method org.apache.spark.TestUtils$$anon$1.checkServerTrusted(X509Certificate[], String)<br/>At TestUtils.scala:[line 220]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67405');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67405" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class org.apache.spark.TestUtils$$anon$1<br/>In method org.apache.spark.TestUtils$$anon$1.getAcceptedIssuers()<br/>At TestUtils.scala:[line 218]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N99191');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N99191" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class org.spark_project.jetty.util.ssl.SslContextFactory$1<br/>In method org.spark_project.jetty.util.ssl.SslContextFactory$1.checkClientTrusted(X509Certificate[], String)<br/>At SslContextFactory.java:[line 102]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N99245');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N99245" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class org.spark_project.jetty.util.ssl.SslContextFactory$1<br/>In method org.spark_project.jetty.util.ssl.SslContextFactory$1.checkServerTrusted(X509Certificate[], String)<br/>At SslContextFactory.java:[line 106]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N99299');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N99299" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class org.spark_project.jetty.util.ssl.SslContextFactory$1<br/>In method org.spark_project.jetty.util.ssl.SslContextFactory$1.getAcceptedIssuers()<br/>At SslContextFactory.java:[line 97]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72405');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72405" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.apache.spark.deploy.history.HistoryServer$$anon$1<br/>In method org.apache.spark.deploy.history.HistoryServer$$anon$1.doGet(HttpServletRequest, HttpServletResponse)<br/>At HistoryServer.scala:[line 76]<br/>Sink method javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/StringContext.s(Lscala/collection/Seq;)Ljava/lang/String;<br/>Unknown source scala/Predef$.genericWrapArray(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;<br/>At HistoryServer.scala:[line 77]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72489');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of java/io/PrintWriter.write(Ljava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72489" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.apache.spark.deploy.history.HistoryServer$$anon$1$$anonfun$doGet$2<br/>In method org.apache.spark.deploy.history.HistoryServer$$anon$1$$anonfun$doGet$2.apply(Node)<br/>At HistoryServer.scala:[line 91]<br/>Sink method java/io/PrintWriter.write(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/xml/Node.toString()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73341');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of java/io/PrintWriter.write(Ljava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73341" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.apache.spark.deploy.rest.RestServlet<br/>In method org.apache.spark.deploy.rest.RestServlet.sendResponse(SubmitRestProtocolResponse, HttpServletResponse)<br/>At RestSubmissionServer.scala:[line 138]<br/>Sink method java/io/PrintWriter.write(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/spark/deploy/rest/SubmitRestProtocolResponse.toJson()Ljava/lang/String;<br/>Unknown source com/fasterxml/jackson/databind/ObjectMapper.writeValueAsString(Ljava/lang/Object;)Ljava/lang/String;<br/>At RestSubmissionServer.scala:[line 138]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77106');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of java/io/PrintWriter.print(Ljava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77106" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.apache.spark.ui.JettyUtils$$anon$3<br/>In method org.apache.spark.ui.JettyUtils$$anon$3.doGet(HttpServletRequest, HttpServletResponse)<br/>At JettyUtils.scala:[line 101]<br/>Sink method java/io/PrintWriter.print(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source scala/Function1.apply(Ljava/lang/Object;)Ljava/lang/Object;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77175');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77175" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.apache.spark.ui.JettyUtils$$anon$3<br/>In method org.apache.spark.ui.JettyUtils$$anon$3.doGet(HttpServletRequest, HttpServletResponse)<br/>At JettyUtils.scala:[line 110]<br/>Sink method javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/lang/IllegalArgumentException.getMessage()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N83784');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N83784" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.spark_project.jetty.security.SecurityHandler<br/>In method org.spark_project.jetty.security.SecurityHandler.handle(String, Request, HttpServletRequest, HttpServletResponse)<br/>At SecurityHandler.java:[line 557]<br/>Sink method javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/security/ServerAuthException.getMessage()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N85077');">
<td>
<span class="priority-1">SECXSS2</span>
</td>
<td>This use of java/io/PrintWriter.println(Ljava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N85077" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.spark_project.jetty.server.handler.ResourceHandler<br/>In method org.spark_project.jetty.server.handler.ResourceHandler.doDirectory(HttpServletRequest, HttpServletResponse, Resource)<br/>At ResourceHandler.java:[line 597]<br/>Sink method java/io/PrintWriter.println(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/util/URIUtil.decodePath(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/spark_project/jetty/util/URIUtil.decodePath(Ljava/lang/String;II)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/URIUtil.canonicalPath(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/spark_project/jetty/util/StringUtil.sanitizeXmlString(Ljava/lang/String;)Ljava/lang/String;<br/>Tainted source javax/servlet/http/HttpServletRequest.getRequestURI()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/URIUtil.addEncodedPaths(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/spark_project/jetty/util/URIUtil.addEncodedPaths(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/spark_project/jetty/util/URIUtil.decodeISO88591Path(Ljava/lang/String;II)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/resource/Resource.getListHTML(Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source org/spark_project/jetty/util/resource/Resource.hrefEncodeURI(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/spark_project/jetty/util/Utf8StringBuilder._buffer<br/>Unknown source org/spark_project/jetty/util/URIUtil.decodePath(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/URIUtil.encodePath(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/resource/Resource.deTag(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/spark_project/jetty/util/URIUtil.encodePath(Ljava/lang/StringBuilder;Ljava/lang/String;I)Ljava/lang/StringBuilder; parameter 2<br/>Unknown source org/spark_project/jetty/util/URIUtil.addEncodedPaths(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/TypeUtil.toHex(BLjava/lang/Appendable;)V parameter 0<br/>Unknown source org/spark_project/jetty/util/StringUtil.sanitizeXmlString(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/spark_project/jetty/util/resource/Resource.list()[Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/URIUtil.decodePath(Ljava/lang/String;II)Ljava/lang/String; parameter 2<br/>Unknown source org/spark_project/jetty/util/URIUtil.decodeISO88591Path(Ljava/lang/String;II)Ljava/lang/String; parameter 2<br/>Unknown source org/spark_project/jetty/util/URIUtil.encodePath(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/lang/Appendable.append(C)Ljava/lang/Appendable;<br/>Unknown source org/spark_project/jetty/util/Utf8StringBuilder.toString()Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/URIUtil.encodePath(Ljava/lang/StringBuilder;Ljava/lang/String;I)Ljava/lang/StringBuilder;<br/>Unknown source java/text/DateFormat.format(Ljava/util/Date;)Ljava/lang/String;<br/>Tainted source org/spark_project/jetty/util/resource/Resource.getListHTML(Ljava/lang/String;Z)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/resource/Resource.deTag(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/resource/Resource.hrefEncodeURI(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/spark_project/jetty/util/URIUtil.canonicalPath(Ljava/lang/String;)Ljava/lang/String;<br/>At ResourceHandler.java:[line 595]<br/>At StringUtil.java:[line 1011]<br/>At StringUtil.java:[line 1021]<br/>At StringUtil.java:[line 1024]<br/>At StringUtil.java:[line 1027]<br/>At StringUtil.java:[line 1030]<br/>At StringUtil.java:[line 1033]<br/>At StringUtil.java:[line 1043]<br/>At TypeUtil.java:[line 395]<br/>At TypeUtil.java:[line 397]<br/>At URIUtil.java:[line 66]<br/>At URIUtil.java:[line 67]<br/>At URIUtil.java:[line 137]<br/>At URIUtil.java:[line 140]<br/>At URIUtil.java:[line 143]<br/>At URIUtil.java:[line 146]<br/>At URIUtil.java:[line 149]<br/>At URIUtil.java:[line 152]<br/>At URIUtil.java:[line 155]<br/>At URIUtil.java:[line 158]<br/>At URIUtil.java:[line 161]<br/>At URIUtil.java:[line 164]<br/>At URIUtil.java:[line 167]<br/>At URIUtil.java:[line 170]<br/>At URIUtil.java:[line 173]<br/>At URIUtil.java:[line 176]<br/>At URIUtil.java:[line 179]<br/>At URIUtil.java:[line 182]<br/>At URIUtil.java:[line 185]<br/>At URIUtil.java:[line 206]<br/>At URIUtil.java:[line 209]<br/>At URIUtil.java:[line 212]<br/>At URIUtil.java:[line 215]<br/>At URIUtil.java:[line 218]<br/>At URIUtil.java:[line 221]<br/>At URIUtil.java:[line 224]<br/>At URIUtil.java:[line 227]<br/>At URIUtil.java:[line 230]<br/>At URIUtil.java:[line 233]<br/>At URIUtil.java:[line 236]<br/>At URIUtil.java:[line 239]<br/>At URIUtil.java:[line 242]<br/>At URIUtil.java:[line 245]<br/>At URIUtil.java:[line 248]<br/>At URIUtil.java:[line 251]<br/>At URIUtil.java:[line 254]<br/>At URIUtil.java:[line 317]<br/>At URIUtil.java:[line 388]<br/>At URIUtil.java:[line 391]<br/>At URIUtil.java:[line 395]<br/>At URIUtil.java:[line 397]<br/>At URIUtil.java:[line 418]<br/>At URIUtil.java:[line 446]<br/>At URIUtil.java:[line 467]<br/>At URIUtil.java:[line 470]<br/>At URIUtil.java:[line 497]<br/>At URIUtil.java:[line 502]<br/>At URIUtil.java:[line 508]<br/>At URIUtil.java:[line 509]<br/>At URIUtil.java:[line 512]<br/>At URIUtil.java:[line 517]<br/>At URIUtil.java:[line 521]<br/>At URIUtil.java:[line 525]<br/>At URIUtil.java:[line 629]<br/>At URIUtil.java:[line 704]<br/>At URIUtil.java:[line 721]<br/>At URIUtil.java:[line 723]<br/>At Utf8StringBuilder.java:[line 74]<br/>At Resource.java:[line 546]<br/>At Resource.java:[line 553]<br/>At Resource.java:[line 555]<br/>At Resource.java:[line 556]<br/>At Resource.java:[line 561]<br/>At Resource.java:[line 562]<br/>At Resource.java:[line 563]<br/>At Resource.java:[line 564]<br/>At Resource.java:[line 568]<br/>At Resource.java:[line 569]<br/>At Resource.java:[line 570]<br/>At Resource.java:[line 573]<br/>At Resource.java:[line 581]<br/>At Resource.java:[line 582]<br/>At Resource.java:[line 584]<br/>At Resource.java:[line 587]<br/>At Resource.java:[line 590]<br/>At Resource.java:[line 591]<br/>At Resource.java:[line 592]<br/>At Resource.java:[line 593]<br/>At Resource.java:[line 595]<br/>At Resource.java:[line 596]<br/>At Resource.java:[line 597]<br/>At Resource.java:[line 599]<br/>At Resource.java:[line 600]<br/>At Resource.java:[line 602]<br/>At Resource.java:[line 664]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N91136');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N91136" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.spark_project.jetty.servlet.DefaultServlet<br/>In method org.spark_project.jetty.servlet.DefaultServlet.doGet(HttpServletRequest, HttpServletResponse)<br/>At DefaultServlet.java:[line 539]<br/>Sink method javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/lang/IllegalArgumentException.getMessage()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N91205');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N91205" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.spark_project.jetty.servlet.DefaultServlet<br/>In method org.spark_project.jetty.servlet.DefaultServlet.passConditionalHeaders(HttpServletRequest, HttpServletResponse, HttpContent)<br/>At DefaultServlet.java:[line 838]<br/>Sink method javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/lang/IllegalArgumentException.getMessage()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N91373');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of java/io/PrintWriter.write(Ljava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N91373" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.spark_project.jetty.servlet.StatisticsServlet<br/>In method org.spark_project.jetty.servlet.StatisticsServlet.sendTextResponse(HttpServletResponse)<br/>At StatisticsServlet.java:[line 305]<br/>Sink method java/io/PrintWriter.write(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/Connector.getProtocols()Ljava/util/List;<br/>Unknown source java/util/Iterator.next()Ljava/lang/Object;<br/>At StatisticsServlet.java:[line 253]<br/>At StatisticsServlet.java:[line 254]<br/>At StatisticsServlet.java:[line 255]<br/>At StatisticsServlet.java:[line 256]<br/>At StatisticsServlet.java:[line 257]<br/>At StatisticsServlet.java:[line 264]<br/>At StatisticsServlet.java:[line 265]<br/>At StatisticsServlet.java:[line 266]<br/>At StatisticsServlet.java:[line 267]<br/>At StatisticsServlet.java:[line 268]<br/>At StatisticsServlet.java:[line 269]<br/>At StatisticsServlet.java:[line 270]<br/>At StatisticsServlet.java:[line 271]<br/>At StatisticsServlet.java:[line 272]<br/>At StatisticsServlet.java:[line 273]<br/>At StatisticsServlet.java:[line 282]<br/>At StatisticsServlet.java:[line 283]<br/>At StatisticsServlet.java:[line 284]<br/>At StatisticsServlet.java:[line 285]<br/>At StatisticsServlet.java:[line 286]<br/>At StatisticsServlet.java:[line 287]<br/>At StatisticsServlet.java:[line 288]<br/>At StatisticsServlet.java:[line 289]<br/>At StatisticsServlet.java:[line 290]<br/>At StatisticsServlet.java:[line 294]<br/>At StatisticsServlet.java:[line 299]<br/>At StatisticsServlet.java:[line 300]<br/>At StatisticsServlet.java:[line 301]<br/>At StatisticsServlet.java:[line 305]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N91737');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of java/io/PrintWriter.write(Ljava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N91737" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.spark_project.jetty.servlet.StatisticsServlet<br/>In method org.spark_project.jetty.servlet.StatisticsServlet.sendXmlResponse(HttpServletResponse)<br/>At StatisticsServlet.java:[line 242]<br/>Sink method java/io/PrintWriter.write(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/spark_project/jetty/server/Connector.getProtocols()Ljava/util/List;<br/>Unknown source java/util/Iterator.next()Ljava/lang/Object;<br/>At StatisticsServlet.java:[line 182]<br/>At StatisticsServlet.java:[line 183]<br/>At StatisticsServlet.java:[line 184]<br/>At StatisticsServlet.java:[line 185]<br/>At StatisticsServlet.java:[line 186]<br/>At StatisticsServlet.java:[line 187]<br/>At StatisticsServlet.java:[line 194]<br/>At StatisticsServlet.java:[line 195]<br/>At StatisticsServlet.java:[line 196]<br/>At StatisticsServlet.java:[line 197]<br/>At StatisticsServlet.java:[line 198]<br/>At StatisticsServlet.java:[line 199]<br/>At StatisticsServlet.java:[line 200]<br/>At StatisticsServlet.java:[line 201]<br/>At StatisticsServlet.java:[line 202]<br/>At StatisticsServlet.java:[line 203]<br/>At StatisticsServlet.java:[line 204]<br/>At StatisticsServlet.java:[line 213]<br/>At StatisticsServlet.java:[line 214]<br/>At StatisticsServlet.java:[line 215]<br/>At StatisticsServlet.java:[line 216]<br/>At StatisticsServlet.java:[line 217]<br/>At StatisticsServlet.java:[line 218]<br/>At StatisticsServlet.java:[line 219]<br/>At StatisticsServlet.java:[line 220]<br/>At StatisticsServlet.java:[line 221]<br/>At StatisticsServlet.java:[line 222]<br/>At StatisticsServlet.java:[line 226]<br/>At StatisticsServlet.java:[line 229]<br/>At StatisticsServlet.java:[line 231]<br/>At StatisticsServlet.java:[line 233]<br/>At StatisticsServlet.java:[line 234]<br/>At StatisticsServlet.java:[line 235]<br/>At StatisticsServlet.java:[line 236]<br/>At StatisticsServlet.java:[line 238]<br/>At StatisticsServlet.java:[line 242]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N82987');">
<td>
<span class="priority-2">SQL</span>
</td>
<td>org.spark_project.jetty.plus.security.DataSourceLoginService.prepareTables() passes a nonconstant String to an execute or addBatch method on an SQL statement</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N82987" style="display: none;">
<a href="#SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE">Bug type SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE (click for details)</a>
<br/>In class org.spark_project.jetty.plus.security.DataSourceLoginService<br/>In method org.spark_project.jetty.plus.security.DataSourceLoginService.prepareTables()<br/>At DataSourceLoginService.java:[line 523]<br/>Another occurrence at DataSourceLoginService.java:[line 542]<br/>Another occurrence at DataSourceLoginService.java:[line 560]<br/>Another occurrence at DataSourceLoginService.java:[line 563]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76352');">
<td>
<span class="priority-2">STAIV</span>
</td>
<td>The initialization vector (IV) is not properly generated</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76352" style="display: none;">
<a href="#STATIC_IV">Bug type STATIC_IV (click for details)</a>
<br/>In class org.apache.spark.security.CryptoStreamUtils$<br/>In method org.apache.spark.security.CryptoStreamUtils$.createCryptoInputStream(InputStream, SparkConf, byte[])<br/>At CryptoStreamUtils.scala:[line 88]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76406');">
<td>
<span class="priority-2">STAIV</span>
</td>
<td>The initialization vector (IV) is not properly generated</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76406" style="display: none;">
<a href="#STATIC_IV">Bug type STATIC_IV (click for details)</a>
<br/>In class org.apache.spark.security.CryptoStreamUtils$<br/>In method org.apache.spark.security.CryptoStreamUtils$.createCryptoOutputStream(OutputStream, SparkConf, byte[])<br/>At CryptoStreamUtils.scala:[line 58]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76460');">
<td>
<span class="priority-2">STAIV</span>
</td>
<td>The initialization vector (IV) is not properly generated</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76460" style="display: none;">
<a href="#STATIC_IV">Bug type STATIC_IV (click for details)</a>
<br/>In class org.apache.spark.security.CryptoStreamUtils$<br/>In method org.apache.spark.security.CryptoStreamUtils$.createReadableChannel(ReadableByteChannel, SparkConf, byte[])<br/>At CryptoStreamUtils.scala:[line 104]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76514');">
<td>
<span class="priority-2">STAIV</span>
</td>
<td>The initialization vector (IV) is not properly generated</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76514" style="display: none;">
<a href="#STATIC_IV">Bug type STATIC_IV (click for details)</a>
<br/>In class org.apache.spark.security.CryptoStreamUtils$<br/>In method org.apache.spark.security.CryptoStreamUtils$.createWritableChannel(WritableByteChannel, SparkConf, byte[])<br/>At CryptoStreamUtils.scala:[line 74]</p>
</td>
</tr>
</table>
<h1>
<a name="Details">Details</a>
</h1>
<h2>
<a name="INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE: Information Exposure Through An Error Message</a>
</h2>
            
<p>
The sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more deadly attacks. If an attack fails, an attacker may use error information provided by the server to launch another more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of ".." sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.
</p>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>try {
  out = httpResponse.getOutputStream()
} catch (Exception e) {
  e.printStackTrace(out);
}</pre>
</p>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</a><br/>
<a href="https://cwe.mitre.org/data/definitions/211.html">CWE-211: Information Exposure Through Externally-Generated Error Message</a><br/>
</p>
            
        
<h2>
<a name="HRS_REQUEST_PARAMETER_TO_HTTP_HEADER">HRS_REQUEST_PARAMETER_TO_HTTP_HEADER: HTTP Response splitting vulnerability</a>
</h2>
            
    <p>This code directly writes an HTTP parameter to an HTTP header, which allows for a HTTP response splitting
vulnerability. See <a href="http://en.wikipedia.org/wiki/HTTP_response_splitting">http://en.wikipedia.org/wiki/HTTP_response_splitting</a>
for more information.</p>
<p>SpotBugs looks only for the most blatant, obvious cases of HTTP response splitting.
If SpotBugs found <em>any</em>, you <em>almost certainly</em> have more
vulnerabilities that SpotBugs doesn't report. If you are concerned about HTTP response splitting, you should seriously
consider using a commercial static analysis or pen-testing tool.
</p>


        
<h2>
<a name="COMMAND_INJECTION">COMMAND_INJECTION: Potential Command Injection</a>
</h2>
            
<p>The highlighted API is used to execute a system command. If unfiltered input is passed to this API, it can lead to arbitrary command execution.</p>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>import java.lang.Runtime;

Runtime r = Runtime.getRuntime();
r.exec("/bin/sh -c some_tool" + input);</pre>
</p>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Command_Injection">OWASP: Command Injection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP: Top 10 2013-A1-Injection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/78.html">CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')</a>
</p>

        
<h2>
<a name="PERMISSIVE_CORS">PERMISSIVE_CORS: Overly permissive CORS policy</a>
</h2>
            
<p>
Prior to HTML5, Web browsers enforced the Same Origin Policy which ensures that in order for JavaScript to access the contents of a Web page, both the JavaScript and the Web page must originate from the same domain. Without the Same Origin Policy, a malicious website could serve up JavaScript that loads sensitive information from other websites using a client's credentials, cull through it, and communicate it back to the attacker. HTML5 makes it possible for JavaScript to access data across domains if a new HTTP header called Access-Control-Allow-Origin is defined. With this header, a Web server defines which other domains are allowed to access its domain using cross-origin requests. However, caution should be taken when defining the header because an overly permissive CORS policy will allow a malicious application to communicate with the victim application in an inappropriate way, leading to spoofing, data theft, relay and other attacks.
</p>
<p>
    <b>Vulnerable Code:</b>
<pre>response.addHeader("Access-Control-Allow-Origin", "*");</pre>
</p>
<p>
    <b>Solution:</b>
<br/>
Avoid using * as the value of the Access-Control-Allow-Origin header, which indicates that the application's data is accessible to JavaScript running on any domain.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://www.w3.org/TR/cors/">W3C Cross-Origin Resource Sharing</a><br/>
<a href="https://enable-cors.org/">Enable Cross-Origin Resource Sharing</a><br/>
</p>
        
<h2>
<a name="HTTPONLY_COOKIE">HTTPONLY_COOKIE: Cookie without the HttpOnly flag</a>
</h2>
            
<p>
A new cookie is created without the <code>HttpOnly</code> flag set.
The <code>HttpOnly</code> flag is a directive to the browser to make sure that the cookie can not be red by
malicious script. When a user is the target of a "Cross-Site Scripting", the attacker would benefit greatly from getting
the session id for example.
</p>

<p>
<b>Code at risk:</b><br/>
<pre>
Cookie cookie = new Cookie("email",userName);
response.addCookie(cookie);
</pre>
</p>

<p>
<b>Solution (Specific configuration):</b><br/>
<pre>
Cookie cookie = new Cookie("email",userName);
cookie.setSecure(true);
cookie.setHttpOnly(true); //HttpOnly flag
</pre>
</p>

<p>
<b>Solution (Servlet 3.0 configuration):</b><br/>
<pre>
&lt;web-app xmlns="http://java.sun.com/xml/ns/javaee" version="3.0"&gt;
[...]
&lt;session-config&gt;
 &lt;cookie-config&gt;
  &lt;http-only&gt;true&lt;/http-only&gt;
  &lt;secure&gt;true&lt;/secure&gt;
 &lt;/cookie-config&gt;
&lt;/session-config&gt;
&lt;/web-app&gt;
</pre>
</p>
<br/>
<p>
<b>Reference</b><br/>
<a href="https://blog.codinghorror.com/protecting-your-cookies-httponly/">Coding Horror blog: Protecting Your Cookies: HttpOnly</a><br/>
<a href="https://www.owasp.org/index.php/HttpOnly">OWASP: HttpOnly</a><br/>
<a href="https://www.rapid7.com/db/vulnerabilities/http-cookie-http-only-flag">Rapid7: Missing HttpOnly Flag From Cookie</a>
</p>

        
<h2>
<a name="HTTP_RESPONSE_SPLITTING">HTTP_RESPONSE_SPLITTING: Potential HTTP Response Splitting</a>
</h2>
            
<p>
    When an HTTP request contains unexpected <code>CR</code> and <code>LF</code> characters, the server may respond with an output stream
    that is interpreted as two different HTTP responses (instead of one).
    An attacker can control the second response and mount attacks such as cross-site scripting and cache poisoning attacks.
    According to OWASP, the issue has been fixed in virtually all modern Java EE application servers, but it is still better to validate the input.
    If you are concerned about this risk, you should test on the platform of concern to see
    if the underlying platform allows for <code>CR</code> or <code>LF</code> characters to be injected into headers.
    This weakness is reported with low priority because it requires the web container to be vulnerable.
</p>
<br/>
<p>
<b>Code at risk:</b><br/>
<pre>String author = request.getParameter(AUTHOR_PARAMETER);
// ...
Cookie cookie = new Cookie("author", author);
response.addCookie(cookie);</pre>
</p>
<br/>
<p>
    <b>References</b><br/>
    <a href="https://www.owasp.org/index.php/HTTP_Response_Splitting">OWASP: HTTP Response Splitting</a><br/>
    <a href="https://cwe.mitre.org/data/definitions/113.html">CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')</a>
    <a href="https://cwe.mitre.org/data/definitions/93.html">CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')</a><br/>
</p>


        
<h2>
<a name="INSECURE_COOKIE">INSECURE_COOKIE: Cookie without the secure flag</a>
</h2>
            
<p>
A new cookie is created without the <code>Secure</code> flag set.
The <code>Secure</code> flag is a directive to the browser to make sure that the cookie is not sent for insecure
communication (<code>http://</code>).
</p>

<p>
<b>Code at risk:</b><br/>
<pre>
Cookie cookie = new Cookie("userName",userName);
response.addCookie(cookie);
</pre>
</p>

<p>
<b>Solution (Specific configuration):</b><br/>
<pre>
Cookie cookie = new Cookie("userName",userName);
cookie.setSecure(true); // Secure flag
cookie.setHttpOnly(true);
</pre>
</p>

<p>
<b>Solution (Servlet 3.0 configuration):</b><br/>
<pre>
&lt;web-app xmlns="http://java.sun.com/xml/ns/javaee" version="3.0"&gt;
[...]
&lt;session-config&gt;
 &lt;cookie-config&gt;
  &lt;http-only&gt;true&lt;/http-only&gt;
  &lt;secure&gt;true&lt;/secure&gt;
 &lt;/cookie-config&gt;
&lt;/session-config&gt;
&lt;/web-app&gt;
</pre>
</p>
<br/>
<p>
<b>Reference</b><br/>
<a href="https://cwe.mitre.org/data/definitions/614.html">CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute</a><br/>
<a href="https://cwe.mitre.org/data/definitions/315.html">CWE-315: Cleartext Storage of Sensitive Information in a Cookie</a><br/>
<a href="https://cwe.mitre.org/data/definitions/311.html">CWE-311: Missing Encryption of Sensitive Data</a><br/>
<a href="https://www.owasp.org/index.php/SecureFlag">OWASP: Secure Flag</a><br/>
<a href="https://www.rapid7.com/db/vulnerabilities/http-cookie-secure-flag">Rapid7: Missing Secure Flag From SSL Cookie</a>
</p>

        
<h2>
<a name="LDAP_INJECTION">LDAP_INJECTION: Potential LDAP Injection</a>
</h2>
            
<p>
Just like SQL, all inputs passed to an LDAP query need to be passed in safely. Unfortunately, LDAP doesn't have prepared statement interfaces like SQL.
Therefore, the primary defense against LDAP injection is strong input validation of any untrusted data before including it in an LDAP query.
</p>
<p>
    <b>Code at risk:</b><br/>
    <pre>NamingEnumeration&lt;SearchResult&gt; answers = context.search("dc=People,dc=example,dc=com",
        "(uid=" + username + ")", ctrls);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246947/LDAP%20Injection">WASC-29: LDAP Injection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP: Top 10 2013-A1-Injection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/90.html">CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')</a><br/>
<a href="https://www.veracode.com/security/ldap-injection">LDAP Injection Guide: Learn How to Detect LDAP Injections and Improve LDAP Security</a>
</p>

        
<h2>
<a name="WEAK_MESSAGE_DIGEST_MD5">WEAK_MESSAGE_DIGEST_MD5: MD2, MD4 and MD5 are weak hash functions</a>
</h2>
            
<p>The algorithms MD2, MD4 and MD5 are not a recommended MessageDigest. <b>PBKDF2</b> should be used to hash password for example.</p>

<blockquote>
    "The security of the MD5 hash function is severely compromised. A collision attack exists that can find collisions
    within seconds on a computer with a 2.6 GHz Pentium 4 processor (complexity of 2<sup>24.1</sup>).[1] Further, there is also a
    chosen-prefix collision attack that can produce a collision for two inputs with specified prefixes within hours, using
    off-the-shelf computing hardware (complexity 2<sup>39</sup>).[2]"<br/>
    - <a href="https://en.wikipedia.org/wiki/MD5#Security">Wikipedia: MD5 - Security</a>
</blockquote>

<blockquote>
    "<b>SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256</b>:<br/>
    The use of these hash functions is acceptable for all hash function applications."<br/>
    - <a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths p.15</a>
</blockquote>
<blockquote>
    "The main idea of a PBKDF is to slow dictionary or brute force attacks on the passwords by increasing the time
    needed to test each password. An attacker with a list of likely passwords can evaluate the PBKDF using the known
    iteration counter and the salt. Since an attacker has to spend a significant amount of computing time for each try,
    it becomes harder to apply the dictionary or brute force attacks."<br/>
- <a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation  p.12</a>
</blockquote>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
    <pre>MessageDigest md5Digest = MessageDigest.getInstance("MD5");
    md5Digest.update(password.getBytes());
    byte[] hashValue = md5Digest.digest();</pre>
    <br/>
    <pre>byte[] hashValue = DigestUtils.getMd5Digest().digest(password.getBytes());</pre>
</p>
<br/>
<p>
    <b>Solution (Using bouncy castle):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    PKCS5S2ParametersGenerator gen = new PKCS5S2ParametersGenerator(new SHA256Digest());
    gen.init(password.getBytes("UTF-8"), salt.getBytes(), 4096);
    return ((KeyParameter) gen.generateDerivedParameters(256)).getKey();
}</pre>
    <br/>
    <b>Solution (Java 8 and later):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    KeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 4096, 256 * 8);
    SecretKeyFactory f = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA256");
    return f.generateSecret(spec).getEncoded();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
[1] <a href="https://www.win.tue.nl/hashclash/On%20Collisions%20for%20MD5%20-%20M.M.J.%20Stevens.pdf">On Collisions for MD5</a>: Master Thesis by M.M.J. Stevens<br/>
[2] <a href="https://homepages.cwi.nl/~stevens/papers/stJOC%20-%20Chosen-Prefix%20Collisions%20for%20MD5%20and%20Applications.pdf">Chosen-prefix collisions for MD5 and applications</a>: Paper written by Marc Stevens<br/>
<a href="https://en.wikipedia.org/wiki/MD5">Wikipedia: MD5</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation</a><br/>
<a href="https://stackoverflow.com/q/22580853/89769">Stackoverflow: Reliable implementation of PBKDF2-HMAC-SHA256 for Java</a><br/>
<a href="https://cwe.mitre.org/data/definitions/327.html">CWE-327: Use of a Broken or Risky Cryptographic Algorithm</a>
</p>

        
<h2>
<a name="OBJECT_DESERIALIZATION">OBJECT_DESERIALIZATION: Object deserialization is used in {1}</a>
</h2>
            
<p>
    Object deserialization of untrusted data can lead to remote code execution, if there is a class in classpath that allows
    the trigger of malicious operation.
</p>
<p>
    Libraries developers tend to fix class that provided potential malicious trigger. There are still classes that are
    known to trigger Denial of Service<sup>[1]</sup>.
</p>
<p>
    Deserialization is a sensible operation that has a great history of vulnerabilities. The web application might
    become vulnerable as soon as a new vulnerability is found in the Java Virtual Machine<sup>[2] [3]</sup>.
</p>

<p>
<b>Code at risk:</b><br/>
<pre>
public UserData deserializeObject(InputStream receivedFile) throws IOException, ClassNotFoundException {

    try (ObjectInputStream in = new ObjectInputStream(receivedFile)) {
        return (UserData) in.readObject();
    }
}
</pre>
</p>

<p>
<b>Solutions:</b><br/>
<p>
Avoid deserializing object provided by remote users.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/502.html">CWE-502: Deserialization of Untrusted Data</a><br/>
<a href="https://www.owasp.org/index.php/Deserialization_of_untrusted_data">Deserialization of untrusted data</a><br/>
<a href="https://www.oracle.com/technetwork/java/seccodeguide-139067.html#8">Serialization and Deserialization </a><br/>
<a href="https://github.com/frohoff/ysoserial">A tool for generating payloads that exploit unsafe Java object deserialization</a><br/>
[1] <a href="https://gist.github.com/coekie/a27cc406fc9f3dc7a70d">Example of Denial of Service using the class <code>java.util.HashSet</code></a><br/>
[2] <a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2015-2590">OpenJDK: Deserialization issue in ObjectInputStream.readSerialData() (CVE-2015-2590)</a><br/>
[3] <a href="https://www.rapid7.com/db/modules/exploit/multi/browser/java_calendar_deserialize">Rapid7: Sun Java Calendar Deserialization Privilege Escalation (CVE-2008-5353)</a>
</p>

        
<h2>
<a name="PREDICTABLE_RANDOM">PREDICTABLE_RANDOM: Predictable pseudorandom number generator</a>
</h2>
            
<p>The use of a predictable random value can lead to vulnerabilities when used in certain security critical contexts. For example, when the value is used as:</p>
<ul>
<li>a CSRF token: a predictable token can lead to a CSRF attack as an attacker will know the value of the token</li>
<li>a password reset token (sent by email): a predictable password token can lead to an account takeover, since an attacker will guess the URL of the "change password" form</li>
<li>any other secret value</li>
</ul>
<p>
A quick fix could be to replace the use of <code>java.util.Random</code> with something stronger, such as <code>java.security.SecureRandom</code>.
</p>
<p>
<b>Vulnerable Code:</b><br/>
<pre>String generateSecretToken() {
    Random r = new Random();
    return Long.toHexString(r.nextLong());
}</pre>
</p>
<p>
<b>Solution:</b>
<pre>import org.apache.commons.codec.binary.Hex;

String generateSecretToken() {
    SecureRandom secRandom = new SecureRandom();

    byte[] result = new byte[32];
    secRandom.nextBytes(result);
    return Hex.encodeHexString(result);
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://jazzy.id.au/2010/09/20/cracking_random_number_generators_part_1.html">Cracking Random Number Generators - Part 1 (https://jazzy.id.au)</a><br/>
<a href="https://www.securecoding.cert.org/confluence/display/java/MSC02-J.+Generate+strong+random+numbers">CERT: MSC02-J. Generate strong random numbers</a><br/>
<a href="https://cwe.mitre.org/data/definitions/330.html">CWE-330: Use of Insufficiently Random Values</a><br/>
<a href="https://blog.h3xstream.com/2014/12/predicting-struts-csrf-token-cve-2014.html">Predicting Struts CSRF Token (Example of real-life vulnerability and exploitation)</a>
</p>

        
<h2>
<a name="PREDICTABLE_RANDOM_SCALA">PREDICTABLE_RANDOM_SCALA: Predictable pseudorandom number generator (Scala)</a>
</h2>
            
<p>The use of a predictable random value can lead to vulnerabilities when used in certain security critical contexts. For example, when the value is used as:</p>
<ul>
<li>a CSRF token: a predictable token can lead to a CSRF attack as an attacker will know the value of the token</li>
<li>a password reset token (sent by email): a predictable password token can lead to an account takeover, since an attacker will guess the URL of the "change password" form</li>
<li>any other secret value</li>
</ul>
<p>
A quick fix could be to replace the use of <code>java.util.Random</code> with something stronger, such as <b>java.security.SecureRandom</b>.
</p>
<p>
<b>Vulnerable Code:</b><br/>
<pre>import scala.util.Random

def generateSecretToken() {
    val result = Seq.fill(16)(Random.nextInt)
    return result.map("%02x" format _).mkString
}</pre>
</p>
<p>
    <b>Solution:</b>
<pre>import java.security.SecureRandom

def generateSecretToken() {
    val rand = new SecureRandom()
    val value = Array.ofDim[Byte](16)
    rand.nextBytes(value)
    return value.map("%02x" format _).mkString
}</pre>
</p>
<!--<p>
<b>Solution:</b>
<pre>import java.security.SecureRandom
import scala.util.Random._

def generateSecretToken() {
    val secRandom = javaRandomToRandom(new SecureRandom())
    val result = Seq.fill(16)(secRandom.nextInt)
    return result.map("%02x" format _).mkString
}</pre>
</p>-->
<br/>
<p>
<b>References</b><br/>
<a href="https://jazzy.id.au/2010/09/20/cracking_random_number_generators_part_1.html">Cracking Random Number Generators - Part 1 (http://jazzy.id.au)</a><br/>
<a href="https://www.securecoding.cert.org/confluence/display/java/MSC02-J.+Generate+strong+random+numbers">CERT: MSC02-J. Generate strong random numbers</a><br/>
<a href="https://cwe.mitre.org/data/definitions/330.html">CWE-330: Use of Insufficiently Random Values</a><br/>
<a href="https://blog.h3xstream.com/2014/12/predicting-struts-csrf-token-cve-2014.html">Predicting Struts CSRF Token (Example of real-life vulnerability and exploitation)</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_IN">PATH_TRAVERSAL_IN: Potential Path Traversal (file read)</a>
</h2>
            
<p>A file is opened to read its content. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files from an arbitrary filesystem location could be read.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>

<p>
    <b>Vulnerable Code:</b><br/>
<pre>@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", image); //Weak point

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>

<p>
    <b>Solution:</b><br/>
<pre>import org.apache.commons.io.FilenameUtils;

@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", FilenameUtils.getName(image)); //Fix

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_OUT">PATH_TRAVERSAL_OUT: Potential Path Traversal (file write)</a>
</h2>
            
<p>A file is opened to write to its contents. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files at an arbitrary filesystem location could be modified.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC-33: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="REDOS">REDOS: Regex DOS (ReDOS)</a>
</h2>
            
<p>
    Regular expressions (Regex) are frequently subject to Denial of Service (DOS) attacks (called ReDOS). This is due to the fact that regex engines
    may take a large amount of time when analyzing certain strings, depending on how the regex is defined.
<p>
    For example, for the regex: <code>^(a+)+$</code>, the input "<code>aaaaaaaaaaaaaaaaX</code>" will cause the regex engine to analyze 65536
different paths.<sup>[1] Example taken from OWASP references</sup></p>
<p>
Therefore, it is possible that a single request may cause a large amount of computation on the server side.
The problem with this regex, and others like it, is that there are two different ways the same input character can be accepted by the
Regex due to the <code>+</code> (or a <code>*</code>) inside the parenthesis, and the <code>+</code> (or a <code>*</code>) outside the parenthesis. The way this is written, either <code>+</code> could
consume the character 'a'. To fix this, the regex should be rewritten to eliminate the ambiguity. For example, this could simply be
rewritten as: <code>^a+$</code>, which is presumably what the author meant anyway (any number of a's). Assuming that's what the original
regex meant, this new regex can be evaluated quickly, and is not subject to ReDOS.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://sebastiankuebeck.wordpress.com/2011/03/01/detecting-and-preventing-redos-vulnerabilities/">Sebastian Kubeck's Weblog: Detecting and Preventing ReDoS Vulnerabilities</a><br/>
<sup>[1]</sup> <a href="https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS">OWASP: Regular expression Denial of Service</a><br/>
<a href="https://cwe.mitre.org/data/definitions/400.html">CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')</a>
</p>

        
<h2>
<a name="SCALA_COMMAND_INJECTION">SCALA_COMMAND_INJECTION: Potential Command Injection (Scala)</a>
</h2>
            
<p>The highlighted API is used to execute a system command. If unfiltered input is passed to this API, it can lead to arbitrary command execution.</p>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>def executeCommand(value:String) = Action {
    val result = value.!
    Ok("Result:\n"+result)
}</pre>
</p>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Command_Injection">OWASP: Command Injection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP: Top 10 2013-A1-Injection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/78.html">CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')</a>
</p>

        
<h2>
<a name="REQUESTDISPATCHER_FILE_DISCLOSURE">REQUESTDISPATCHER_FILE_DISCLOSURE: RequestDispatcher File Disclosure</a>
</h2>
            
<p>
Constructing a server-side redirect path with user input could allow an attacker to download application binaries (including application classes or jar files) or view arbitrary files within protected directories.<br/>
An attacker may be able to forge a request parameter to match sensitive file locations. For example, requesting <code>"http://example.com/?jspFile=../applicationContext.xml%3F"</code> would display the application's <code>applicationContext.xml</code> file. The attacker would be able to locate and download the <code>applicationContext.xml</code> referenced in the other configuration files, and even class files or jar files, obtaining sensitive information and launching other types of attacks.
</p>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>...
String jspFile = request.getParameter("jspFile");
request.getRequestDispatcher("/WEB-INF/jsps/" + jspFile + ".jsp").include(request, response);
...</pre>
</p>
<p>
    <b>Solution:</b><br/>
Avoid constructing server-side redirects using user controlled input.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/552.html">CWE-552: Files or Directories Accessible to External Parties</a><br/>
</p>
            
        
<h2>
<a name="SQL_INJECTION_JDBC">SQL_INJECTION_JDBC: Potential JDBC Injection</a>
</h2>
            
<p>
The input values included in SQL queries need to be passed in safely.
Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.
</p>

<p>
    <b>Vulnerable Code:</b><br/>
    <pre>Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");</pre>
</p>
<p>
    <b>Solution:</b><br/>
    <pre>Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);</pre>
</p>
<br/>

<b>References (JDBC)</b><br/>
<a href="https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html">Oracle Documentation: The Java Tutorials &gt; Prepared Statements</a><br/>
<b>References (SQL injection)</b><br/>
<a href="http://projects.webappsec.org/w/page/13246963/SQL%20Injection">WASC-19: SQL Injection</a><br/>
<a href="https://capec.mitre.org/data/definitions/66.html">CAPEC-66: SQL Injection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/89.html">CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP: Top 10 2013-A1-Injection</a><br/>
<a href="https://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet">OWASP: SQL Injection Prevention Cheat Sheet</a><br/>
<a href="https://www.owasp.org/index.php/Query_Parameterization_Cheat_Sheet">OWASP: Query Parameterization Cheat Sheet</a><br/>
</p>

        
<h2>
<a name="SSL_CONTEXT">SSL_CONTEXT: Weak SSLContext</a>
</h2>
            
<p>
    <b>Vulnerable Code:</b><br/>

    <pre>SSLContext.getInstance("SSL");</pre>
</p>
<p>
<p><b>Solution:</b><br/>

Upgrade your implementation to the following, and configure <code>https.protocols</code> JVM option to include TLSv1.2:</p>
<pre>SSLContext.getInstance("TLS");</pre>
<p>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://blogs.oracle.com/java-platform-group/entry/diagnosing_tls_ssl_and_https">Diagnosing TLS, SSL, and HTTPS</a>
</p>

        
<h2>
<a name="URLCONNECTION_SSRF_FD">URLCONNECTION_SSRF_FD: URLConnection Server-Side Request Forgery (SSRF) and File Disclosure</a>
</h2>
            
<p>
    Server-Side Request Forgery occur when a web server executes a request to a user supplied destination
    parameter that is not validated. Such vulnerabilities could allow an attacker to access internal services
    or to launch attacks from your web server.
</p>
<p>
    URLConnection can be used with file:// protocol or other protocols to access local filesystem and potentially other services.
<p>
    <b>Vulnerable Code:</b>
<pre>
new URL(String url).openConnection()
</pre>

<pre>
new URL(String url).openStream()
</pre>

<pre>
new URL(String url).getContent()
</pre>
</p>
<p>
    <b>Solution/Countermeasures:</b><br/>
    <ul>
        <li>Don't accept URL destinations from users</li>
        <li>Accept a destination key, and use it to look up the target destination associate with the key</li>
        <li>White list URLs (if possible)</li>
        <li>Validate that the beginning of the URL is part of a white list</li>
    </ul>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a><br/>
<a href="https://www.bishopfox.com/blog/2015/04/vulnerable-by-design-understanding-server-side-request-forgery/">Understanding Server-Side Request Forgery</a><br/>
<a href="https://cwe.mitre.org/data/definitions/73.html">CWE-73: External Control of File Name or Path</a><br/>
<a href="https://www.pwntester.com/blog/2013/11/28/abusing-jar-downloads/">Abusing jar:// downloads</a><br />
</p>
            
<h2>
<a name="UNSAFE_HASH_EQUALS">UNSAFE_HASH_EQUALS: Unsafe hash equals</a>
</h2>
            
<p>
An attacker might be able to detect the value of the secret hash due to the exposure of comparison timing. When the
functions <code>Arrays.equals()</code> or <code>String.equals()</code> are called, they will exit earlier if fewer
bytes are matched.
</p>
<p>
<p><b>Vulnerable Code:</b><br/>

<pre>
String actualHash = ...

if(userInput.equals(actualHash)) {
    ...
}</pre>
</p>
<p><b>Solution:</b><br/>

<pre>
String actualHash = ...

if(MessageDigest.isEqual(userInput.getBytes(),actualHash.getBytes())) {
    ...
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/203.html">CWE-203: Information Exposure Through DiscrepancyKey</a><br/>
</p>

        
<h2>
<a name="UNVALIDATED_REDIRECT">UNVALIDATED_REDIRECT: Unvalidated Redirect</a>
</h2>
            
<p>
    Unvalidated redirects occur when an application redirects a user to a destination URL specified by a user supplied
    parameter that is not validated. Such vulnerabilities can be used to facilitate phishing attacks.
</p>
<p>
    <b>Scenario</b><br/>
    1. A user is tricked into visiting the malicious URL: <code>http://website.com/login?redirect=http://evil.vvebsite.com/fake/login</code><br/>
    2. The user is redirected to a fake login page that looks like a site they trust. (<code>http://evil.vvebsite.com/fake/login</code>)<br/>
    3. The user enters his credentials.<br/>
    4. The evil site steals the user's credentials and redirects him to the original website.<br/>
    <br/>
    This attack is plausible because most users don't double check the URL after the redirection. Also, redirection to
    an authentication page is very common.
</p>
<p>
    <b>Vulnerable Code:</b></br/>
    <pre>protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
    [...]
    resp.sendRedirect(req.getParameter("redirectUrl"));
    [...]
}</pre>
</p>
<p>
    <b>Solution/Countermeasures:</b><br/>
    <ul>
        <li>Don't accept redirection destinations from users</li>
        <li>Accept a destination key, and use it to look up the target (legal) destination</li>
        <li>Accept only relative paths</li>
        <li>White list URLs (if possible)</li>
        <li>Validate that the beginning of the URL is part of a white list</li>
    </ul>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246981/URL%20Redirector%20Abuse">WASC-38: URL Redirector Abuse</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A10-Unvalidated_Redirects_and_Forwards">OWASP: Top 10 2013-A10: Unvalidated Redirects and Forwards</a><br/>
<a href="https://www.owasp.org/index.php/Unvalidated_Redirects_and_Forwards_Cheat_Sheet">OWASP: Unvalidated Redirects and Forwards Cheat Sheet</a><br/>
<a href="https://cwe.mitre.org/data/definitions/601.html">CWE-601: URL Redirection to Untrusted Site ('Open Redirect')</a>
</p>
            
        
<h2>
<a name="URL_REWRITING">URL_REWRITING: URL rewriting method</a>
</h2>
            
<p>
The implementation of this method includes the logic to determine whether the session ID needs to be encoded in the URL.<br/>
URL rewriting has significant security risks. Since session ID appears in the URL, it may be easily seen by third parties. Session ID in the URL can be disclosed in many ways, for example:<br/>
<ul>
    <li>Log files,</li>
    <li>The browser history,</li>
    <li>By copy-and-pasting it into an e-mail or posting,</li>
    <li>The HTTP Referrer.</li>
</ul>
</p>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>out.println("Click &lt;a href=" +
                res.encodeURL(HttpUtils.getRequestURL(req).toString()) +
                "&gt;here&lt;/a&gt;");</pre>
</p>
<p>
    <b>Solution:</b><br/>
Avoid using those methods. If you are looking to encode a URL String or form parameters do not confuse the URL rewriting methods with the URLEncoder class.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Top_10_2010-A3-Broken_Authentication_and_Session_Management">OWASP Top 10 2010-A3-Broken Authentication and Session Management</a><br/>
</p>
            
        
<h2>
<a name="UNENCRYPTED_SOCKET">UNENCRYPTED_SOCKET: Unencrypted Socket</a>
</h2>
            
<p>
The communication channel used is not encrypted. The traffic could be read by an attacker intercepting the network traffic.
</p>
<p>
<b>Vulnerable Code:</b><br/>
Plain socket (Cleartext communication):
<pre>Socket soc = new Socket("www.google.com",80);</pre>
</p>
<p>
<b>Solution:</b><br/>
SSL Socket (Secure communication):
<pre>Socket soc = SSLSocketFactory.getDefault().createSocket("www.google.com", 443);</pre>
</p>
<p>Beyond using an SSL socket, you need to make sure your use of SSLSocketFactory does all the appropriate certificate validation checks to
make sure you are not subject to man-in-the-middle attacks. Please read the OWASP Transport Layer Protection Cheat Sheet for details on how
to do this correctly.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Top_10_2010-A9">OWASP: Top 10 2010-A9-Insufficient Transport Layer Protection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP: Top 10 2013-A6-Sensitive Data Exposure</a><br/>
<a href="https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet">OWASP: Transport Layer Protection Cheat Sheet</a><br/>
<a href="http://projects.webappsec.org/w/page/13246945/Insufficient%20Transport%20Layer%20Protection">WASC-04: Insufficient Transport Layer Protection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/319.html">CWE-319: Cleartext Transmission of Sensitive Information</a>
</p>

        
<h2>
<a name="UNENCRYPTED_SERVER_SOCKET">UNENCRYPTED_SERVER_SOCKET: Unencrypted Server Socket</a>
</h2>
            
<p>
The communication channel used is not encrypted. The traffic could be read by an attacker intercepting the network traffic.
</p>
<p>
<b>Vulnerable Code:</b><br/>
Plain server socket (Cleartext communication):
<pre>ServerSocket soc = new ServerSocket(1234);</pre>
</p>
<p>
<b>Solution:</b><br/>
SSL Server Socket (Secure communication):
<pre>ServerSocket soc = SSLServerSocketFactory.getDefault().createServerSocket(1234);</pre>
</p>
<p>Beyond using an SSL server socket, you need to make sure your use of SSLServerSocketFactory does all the appropriate certificate validation checks to
make sure you are not subject to man-in-the-middle attacks. Please read the OWASP Transport Layer Protection Cheat Sheet for details on how
to do this correctly.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Top_10_2010-A9">OWASP: Top 10 2010-A9-Insufficient Transport Layer Protection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP: Top 10 2013-A6-Sensitive Data Exposure</a><br/>
<a href="https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet">OWASP: Transport Layer Protection Cheat Sheet</a><br/>
<a href="http://projects.webappsec.org/w/page/13246945/Insufficient%20Transport%20Layer%20Protection">WASC-04: Insufficient Transport Layer Protection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/319.html">CWE-319: Cleartext Transmission of Sensitive Information</a>
</p>

        
<h2>
<a name="WEAK_HOSTNAME_VERIFIER">WEAK_HOSTNAME_VERIFIER: HostnameVerifier that accept any signed certificates</a>
</h2>
            
<p>A <code>HostnameVerifier</code> that accept any host are often use because of certificate reuse on many hosts.
As a consequence, this is vulnerable to
<a href="https://en.wikipedia.org/wiki/Man-in-the-middle_attack">Man-in-the-middle attacks</a>
since the client will trust any certificate.
</p>
<p>
A TrustManager allowing specific certificates (based on a truststore for example) should be built.
Wildcard certificates should be created for reused on multiples subdomains.
Detailed information for a proper implementation is available at:
<a href="https://stackoverflow.com/a/6378872/89769">[1]</a>
<a href="https://stackoverflow.com/a/5493452/89769">[2]</a>
</p>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>public class AllHosts implements HostnameVerifier {
    public boolean verify(final String hostname, final SSLSession session) {
        return true;
    }
}</pre>
</p>
<br/>
<p>
    <b>Solution (TrustMangager based on a keystore):</b><br/>
<pre>KeyStore ks = //Load keystore containing the certificates trusted

SSLContext sc = SSLContext.getInstance("TLS");

TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509");
tmf.init(ks);

sc.init(kmf.getKeyManagers(), tmf.getTrustManagers(),null);
</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246945/Insufficient%20Transport%20Layer%20Protection">WASC-04: Insufficient Transport Layer Protection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/295.html">CWE-295: Improper Certificate Validation</a>
</p>

        
<h2>
<a name="WEAK_TRUST_MANAGER">WEAK_TRUST_MANAGER: TrustManager that accept any certificates</a>
</h2>
            
<p>Empty TrustManager implementations are often used to connect easily to a host that is not signed by a root
<a href="https://en.wikipedia.org/wiki/Certificate_authority">certificate authority</a>. As a consequence, this is vulnerable to
<a href="https://en.wikipedia.org/wiki/Man-in-the-middle_attack">Man-in-the-middle attacks</a>
since the client will trust any certificate.
</p>
<p>
A TrustManager allowing specific certificates (based on a TrustStore for example) should be built.
Detailed information for a proper implementation is available at:
<a href="https://stackoverflow.com/a/6378872/89769">[1]</a>
<a href="https://stackoverflow.com/a/5493452/89769">[2]</a>
</p>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>class TrustAllManager implements X509TrustManager {

    @Override
    public void checkClientTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {
        //Trust any client connecting (no certificate validation)
    }

    @Override
    public void checkServerTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {
        //Trust any remote server (no certificate validation)
    }

    @Override
    public X509Certificate[] getAcceptedIssuers() {
        return null;
    }
}</pre>
</p>
<br/>
<p>
    <b>Solution (TrustMangager based on a keystore):</b><br/>
<pre>KeyStore ks = //Load keystore containing the certificates trusted

SSLContext sc = SSLContext.getInstance("TLS");

TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509");
tmf.init(ks);

sc.init(kmf.getKeyManagers(), tmf.getTrustManagers(),null);
</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246945/Insufficient%20Transport%20Layer%20Protection">WASC-04: Insufficient Transport Layer Protection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/295.html">CWE-295: Improper Certificate Validation</a>
</p>

        
<h2>
<a name="XSS_SERVLET">XSS_SERVLET: Potential XSS in Servlet</a>
</h2>
            
<p>
A potential XSS was found. It could be used to execute unwanted JavaScript in a client's browser. (See references)
</p>
<p>
    <b>Vulnerable Code:</b>
<pre>protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
    String input1 = req.getParameter("input1");
    [...]
    resp.getWriter().write(input1);
}</pre>
</p>
<p>
    <b>Solution:</b>
<pre>protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
    String input1 = req.getParameter("input1");
    [...]
    resp.getWriter().write(Encode.forHtml(input1));
}</pre>
</p>
<p>
The best defense against XSS is context sensitive output encoding like the example above. There are typically 4 contexts to consider:
HTML, JavaScript, CSS (styles), and URLs. Please follow the XSS protection rules defined in the OWASP XSS Prevention Cheat Sheet,
which explains these defenses in significant detail.
</p>
<p>Note that this XSS in Servlet rule looks for similar issues, but looks for them in a different way than the existing
'XSS: Servlet reflected cross site scripting vulnerability' and 'XSS: Servlet reflected cross site scripting vulnerability in error page' rules in FindBugs.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting">WASC-8: Cross Site Scripting</a><br/>
<a href="https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet">OWASP: XSS Prevention Cheat Sheet</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A3-Cross-Site_Scripting_%28XSS%29">OWASP: Top 10 2013-A3: Cross-Site Scripting (XSS)</a><br/>
<a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a><br/>
<a href="https://code.google.com/p/owasp-java-encoder/">OWASP Java Encoder</a><br/>
</p>
            
        
<h2>
<a name="SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE">SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE: Nonconstant string passed to execute or addBatch method on an SQL statement</a>
</h2>

  <p>The method invokes the execute or addBatch method on an SQL statement with a String that seems
to be dynamically generated. Consider using
a prepared statement instead. It is more efficient and less vulnerable to
SQL injection attacks.
</p>

    
<h2>
<a name="STATIC_IV">STATIC_IV: Static IV</a>
</h2>
            
<p>
    Initialization vector must be regenerated for each message to be encrypted.
</p>
<p><b>Vulnerable Code:</b></p>
<p>
<pre>
private static byte[] IV = new byte[16] {(byte)0,(byte)1,(byte)2,[...]};

public void encrypt(String message) throws Exception {

    IvParameterSpec ivSpec = new IvParameterSpec(IV);
[...]
</pre>
<p><b>Solution:</b></p>
<p>
<pre>
public void encrypt(String message) throws Exception {

    byte[] iv = new byte[16];
    new SecureRandom().nextBytes(iv);

    IvParameterSpec ivSpec = new IvParameterSpec(iv);
[...]
</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://en.wikipedia.org/wiki/Initialization_vector">Wikipedia: Initialization vector</a><br/>
<a href="https://cwe.mitre.org/data/definitions/329.html">CWE-329: Not Using a Random IV with CBC Mode</a><br/>
<a href="https://defuse.ca/cbcmodeiv.htm">Encryption - CBC Mode IV: Secret or Not?</a>
</p>
            
        </body>
</html>
