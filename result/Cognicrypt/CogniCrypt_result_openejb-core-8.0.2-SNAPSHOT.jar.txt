[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.253 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 5 analysis seeds within 2 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 9
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r44
		Type: java.security.SecureRandom
		Statement: specialinvoke r44.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.openejb.assembler.DeployerEjb: void <clinit>()>
		SHA-256: ea8257a2094df5c0a3aed15fa8d6df9afdf297fc85fa06cf71014c251491a706
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.Cipher
		Statement: r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer13353)
		Method: <org.apache.openejb.cipher.StaticDESPasswordCipher: java.lang.String decrypt(char[])>
		SHA-256: 676bda816e601f79bcb22441d570c83ab6baa9c08dd28654dabba88b991f19c
		Secure: false
	Object:
		Variable: r18
		Type: java.security.MessageDigest
		Statement: r18 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r5)
		Method: <org.apache.openejb.core.security.jaas.SQLLoginModule: boolean checkPassword(java.lang.String,java.lang.String)>
		SHA-256: 7c39af5b2f9802c7e542762063e4a1e8d5f08eb413fca23179d1bc32c1290ae6
		Secure: true
	Object:
		Variable: varReplacer13356
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer13356)
		Method: <org.apache.openejb.cipher.StaticDESPasswordCipher: void <clinit>()>
		SHA-256: cda157a45af2896e3b1aa3adb98a7bb6800071abdca6fd7267992c05895a77cc
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer13356)
		Method: <org.apache.openejb.cipher.StaticDESPasswordCipher: void <clinit>()>
		SHA-256: e2af84ed5e7ef2aeb2cd2992b4470f38e898ea9cd9d4a77a0baacd9f15b5cb56
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: r3 = virtualinvoke r18.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <org.apache.openejb.core.security.jaas.SQLLoginModule: boolean checkPassword(java.lang.String,java.lang.String)>
		SHA-256: 530c31b7286283e628ca83fb413074450942868f5142fde121f4413beb535978
		Secure: true
	Object:
		Variable: r11
		Type: javax.crypto.Cipher
		Statement: r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer13350)
		Method: <org.apache.openejb.cipher.StaticDESPasswordCipher: char[] encrypt(java.lang.String)>
		SHA-256: da0266041721db0bdc4976ebd75d80a8bbca5b7d774d0456f3456e1e6703dcb4
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r3 = virtualinvoke r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r2)
		Method: <org.apache.openejb.cipher.StaticDESPasswordCipher: char[] encrypt(java.lang.String)>
		SHA-256: 9cefefa844b2941c35ad0ca14e1029c1c6cff6bb0d3e2c44dd8823156577e78e
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: r3 = virtualinvoke r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r2)
		Method: <org.apache.openejb.cipher.StaticDESPasswordCipher: char[] encrypt(java.lang.String)>
		SHA-256: 9db9e019b34011f602eacf23d71360c8337f0baf58d6892a9b91fc509a6e1d11
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r3 = virtualinvoke r18.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <org.apache.openejb.core.security.jaas.SQLLoginModule: boolean checkPassword(java.lang.String,java.lang.String)>
		SHA-256: 18f079ac154551fd963177a5bf2b04860b7ddb552c8cafa280831e708f4b89bb
		Secure: true
	Object:
		Variable: r11
		Type: byte[]
		Statement: $r8 = virtualinvoke r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r11)
		Method: <org.apache.openejb.cipher.StaticDESPasswordCipher: java.lang.String decrypt(char[])>
		SHA-256: 5bfe4d233c50827cd7e154bbe34756e06eaed73ab2e3915b1270e2fba4b2087c
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r11)
		Method: <org.apache.openejb.cipher.StaticDESPasswordCipher: java.lang.String decrypt(char[])>
		SHA-256: 8d2185b2560338c6bbbacd9d36648bcc961396379fb9ae4018742f74e7b6b86b
		Secure: false

Findings in Java Class: org.apache.openejb.cipher.StaticDESPasswordCipher

	 in Method: char[] encrypt(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #da0266041721db0bdc4976ebd75d80a8bbca5b7d774d0456f3456e1e6703dcb4)
			First parameter (with value "DESede") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer13350)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r11.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer13352, $r5)


	 in Method: java.lang.String decrypt(char[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer13355, $r6)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #676bda816e601f79bcb22441d570c83ab6baa9c08dd28654dabba88b991f19c)
			First parameter (with value "DESede") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer13353)


	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer13356)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #e2af84ed5e7ef2aeb2cd2992b4470f38e898ea9cd9d4a77a0baacd9f15b5cb56)
			Second parameter (with value "DESede") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer13356)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 12

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 3
	RequiredPredicateError: 3
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 18 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 28.77 s

