/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-ec2/src/main/java/org/apache/camel/component/aws/ec2/EC2ComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-ec2/src/main/java/org/apache/camel/component/aws/ec2/EC2ComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/engine/storage/snapshot/src/main/java/org/apache/cloudstack/storage/snapshot/StorageSystemSnapshotStrategy.java: verifyFormat insecure
 public boolean verify(String volumeInfo, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(volumeInfo)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(volumeInfo, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/engine/storage/snapshot/src/main/java/org/apache/cloudstack/storage/snapshot/StorageSystemSnapshotStrategy.java: verifyDiskTypeAndHypervisor insecure
 public boolean verify(String volumeInfo, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(volumeInfo)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(volumeInfo, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/engine/storage/snapshot/src/main/java/org/apache/cloudstack/storage/snapshot/StorageSystemSnapshotStrategy.java: verifySnapshotType insecure
 public boolean verify(String snapshotInfo, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(snapshotInfo)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(snapshotInfo, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/engine/storage/snapshot/src/main/java/org/apache/cloudstack/storage/snapshot/StorageSystemSnapshotStrategy.java: verifyLocationType insecure
 public boolean verify(String snapshotInfo, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(snapshotInfo)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(snapshotInfo, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/network-elements/netscaler/src/main/java/com/cloud/network/element/NetscalerElement.java: verifyServicesCombination insecure
 public boolean verify(String services, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(services)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(services, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/qpid-broker-j.git/broker-core/src/main/java/org/apache/qpid/server/queue/AbstractQueue.java: verifySessionAccess insecure
 public boolean verify(String AMQPSession<?,?>, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(AMQPSession<?,?>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(AMQPSession<?,?>, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/qpid-broker-j.git/broker-core/src/main/java/org/apache/qpid/server/security/SiteSpecificTrustStoreImpl.java: checkClientTrusted insecure
public void checkClientTrusted(X509Certificate[] X509Certificate[], String String) throws CertificateException {
    KeyStore ts = KeyStore.getInstance("JKS");
    ts.load(new FileInputStream(path), password); // load your local cert path and specify your password
    TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509"); // choose the algrithm to match your cert
    tmf.init(ts);
    TrustManager[] trustManagers = tmf.getTrustManagers(); // refer to https://lightbend.github.io/ssl-config/WSQuickStart.html for detailed steps
    for (final X509TrustManager trustManager : trustManagers) {
        try {
                trustManager.checkClientTrusted(X509Certificate[], String);
                return;
            } catch (final CertificateException e) {
                //LOGGER.debug(e.getMessage(), e);
               }
    }
            throw new CertificateException("None of the TrustManagers trust this certificate chain");

}
/mnt/d/BACKUP/code/experiment/test_set/test_set/qpid-broker-j.git/broker-core/src/main/java/org/apache/qpid/server/security/SiteSpecificTrustStoreImpl.java: checkServerTrusted insecure
public void checkServerTrusted(X509Certificate[] X509Certificate[], String String) throws CertificateException{
    if (X509Certificate[] == null) {
        throw new IllegalArgumentException("checkServerTrusted:x509Certificate array isnull");
    }

    if (!(X509Certificate[].length > 0)) {
        throw new IllegalArgumentException("checkServerTrusted: X509Certificate is empty");
    }

    if (!(null != String && String.equalsIgnoreCase("RSA"))) {
        throw new CertificateException("checkServerTrusted: String is not RSA");
    }


    try {
        TrustManagerFactory tmf = TrustManagerFactory.getInstance("X509"); // choose algorithm to match your code
        tmf.init((KeyStore) null);
        for (TrustManager trustManager : tmf.getTrustManagers()) {
                        ((X509TrustManager) trustManager).checkServerTrusted(X509Certificate[], String);
        }
    } catch (Exception e) {
        throw new CertificateException(e);
    }


    RSAPublicKey pubkey = (RSAPublicKey) X509Certificate[][0].getPublicKey();
    String encoded = new BigInteger(1 , pubkey.getEncoded()).toString(16);
    final boolean expected = PUB_KEY.equalsIgnoreCase(encoded);

    if (!expected) {
        throw new CertificateException("checkServerTrusted: Expected public key: "
                                                    + PUB_KEY + ", got public key:" + encoded);
    }
}
/mnt/d/BACKUP/code/experiment/test_set/test_set/qpid-broker-j.git/broker-core/src/main/java/org/apache/qpid/server/transport/network/security/ssl/SSLUtil.java: verifyHostname insecure
 public boolean verify(String engine, SSLSession hostnameExpected) {
    //Please change "example.com" as needed
    if ("example.com".equals(engine)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(engine, hostnameExpected);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/qpid-broker-j.git/broker-core/src/main/java/org/apache/qpid/server/transport/network/security/ssl/SSLUtil.java: verifyHostname insecure
 public boolean verify(String String, SSLSession X509Certificate) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, X509Certificate);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/qpid-broker-j.git/broker-core/src/main/java/org/apache/qpid/server/transport/network/security/ssl/SSLUtil.java: verifyHostname insecure
 public boolean verify(String String, SSLSession SortedSet<String>) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, SortedSet<String>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/security/src/main/java/org/apache/cxf/rt/security/crypto/CryptoUtils.java: verifySignature insecure
 public boolean verify(String data, SSLSession signature) {
    //Please change "example.com" as needed
    if ("example.com".equals(data)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(data, signature);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/security/src/main/java/org/apache/cxf/rt/security/crypto/CryptoUtils.java: verifySignature insecure
 public boolean verify(String data, SSLSession signature) {
    //Please change "example.com" as needed
    if ("example.com".equals(data)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(data, signature);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-rest/src/main/java/org/apache/camel/component/rest/RestComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-rest/src/main/java/org/apache/camel/component/rest/RestComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-rest/src/main/java/org/apache/camel/component/rest/RestComponentVerifierExtension.java: verifyUnderlyingComponent insecure
 public boolean verify(String scope, SSLSession builder) {
    //Please change "example.com" as needed
    if ("example.com".equals(scope)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(scope, builder);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/commons-net.git/src/main/java/org/apache/commons/net/ftp/FTPSTrustManager.java: checkClientTrusted insecure
public void checkClientTrusted(X509Certificate[] certificates, String authType) throws CertificateException {
    KeyStore ts = KeyStore.getInstance("JKS");
    ts.load(new FileInputStream(path), password); // load your local cert path and specify your password
    TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509"); // choose the algrithm to match your cert
    tmf.init(ts);
    TrustManager[] trustManagers = tmf.getTrustManagers(); // refer to https://lightbend.github.io/ssl-config/WSQuickStart.html for detailed steps
    for (final X509TrustManager trustManager : trustManagers) {
        try {
                trustManager.checkClientTrusted(certificates, authType);
                return;
            } catch (final CertificateException e) {
                //LOGGER.debug(e.getMessage(), e);
               }
    }
            throw new CertificateException("None of the TrustManagers trust this certificate chain");

}
/mnt/d/BACKUP/code/experiment/test_set/test_set/commons-net.git/src/main/java/org/apache/commons/net/SocketClient.java: verifyRemote insecure
 public boolean verify(String socket, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(socket)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(socket, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/commons-net.git/src/main/java/org/apache/commons/net/util/TrustManagerUtils.java: checkClientTrusted insecure
public void checkClientTrusted(X509Certificate[] certificates, String authType) throws CertificateException {
    KeyStore ts = KeyStore.getInstance("JKS");
    ts.load(new FileInputStream(path), password); // load your local cert path and specify your password
    TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509"); // choose the algrithm to match your cert
    tmf.init(ts);
    TrustManager[] trustManagers = tmf.getTrustManagers(); // refer to https://lightbend.github.io/ssl-config/WSQuickStart.html for detailed steps
    for (final X509TrustManager trustManager : trustManagers) {
        try {
                trustManager.checkClientTrusted(certificates, authType);
                return;
            } catch (final CertificateException e) {
                //LOGGER.debug(e.getMessage(), e);
               }
    }
            throw new CertificateException("None of the TrustManagers trust this certificate chain");

}
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/core/camel-support/src/main/java/org/apache/camel/component/extension/verifier/DefaultComponentVerifierExtension.java: verify insecure
 public boolean verify(String scope, SSLSession parameters) {
    //Please change "example.com" as needed
    if ("example.com".equals(scope)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(scope, parameters);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/core/camel-support/src/main/java/org/apache/camel/component/extension/verifier/DefaultComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession parameters) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, parameters);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/core/camel-support/src/main/java/org/apache/camel/component/extension/verifier/DefaultComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession parameters) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, parameters);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/core/camel-support/src/main/java/org/apache/camel/component/extension/verifier/DefaultComponentVerifierExtension.java: verifyParametersAgainstCatalog insecure
 public boolean verify(String builder, SSLSession parameters) {
    //Please change "example.com" as needed
    if ("example.com".equals(builder)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(builder, parameters);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/core/camel-support/src/main/java/org/apache/camel/component/extension/verifier/DefaultComponentVerifierExtension.java: verifyParametersAgainstCatalog insecure
 public boolean verify(String builder, SSLSession parameters) {
    //Please change "example.com" as needed
    if ("example.com".equals(builder)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(builder, parameters);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/hypervisors/baremetal/src/main/java/com/cloud/baremetal/networkservice/BaremetalDhcpElement.java: verifyServicesCombination insecure
 public boolean verify(String services, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(services)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(services, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/hypervisors/baremetal/src/main/java/com/cloud/baremetal/networkservice/BaremetalPxeElement.java: verifyServicesCombination insecure
 public boolean verify(String services, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(services)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(services, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/hypervisors/baremetal/src/main/java/com/cloud/baremetal/networkservice/BaremetalUserdataElement.java: verifyServicesCombination insecure
 public boolean verify(String services, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(services)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(services, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws2-iam/src/main/java/org/apache/camel/component/aws2/iam/IAM2ComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws2-iam/src/main/java/org/apache/camel/component/aws2/iam/IAM2ComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/StorageSystemDataMotionStrategy.java: verifyFormat insecure
 public boolean verify(String imageFormat, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(imageFormat)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(imageFormat, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/StorageSystemDataMotionStrategy.java: verifyFormat insecure
 public boolean verify(String snapshotInfo, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(snapshotInfo)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(snapshotInfo, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/StorageSystemDataMotionStrategy.java: verifyCopyCmdAnswer insecure
 public boolean verify(String copyCmdAnswer, SSLSession dataObject) {
    //Please change "example.com" as needed
    if ("example.com".equals(copyCmdAnswer)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(copyCmdAnswer, dataObject);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/StorageSystemDataMotionStrategy.java: verifyLiveMigrationForKVM insecure
 public boolean verify(String volumeDataStoreMap, SSLSession destHost) {
    //Please change "example.com" as needed
    if ("example.com".equals(volumeDataStoreMap)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(volumeDataStoreMap, destHost);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/StorageSystemDataMotionStrategy.java: verifyDestinationStorage insecure
 public boolean verify(String sourcePools, SSLSession destHost) {
    //Please change "example.com" as needed
    if ("example.com".equals(sourcePools)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(sourcePools, destHost);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/http-signature/src/main/java/org/apache/cxf/rs/security/httpsignature/filters/AbstractSignatureInFilter.java: verifyDigest insecure
 public boolean verify(String headers, SSLSession entityStream) {
    //Please change "example.com" as needed
    if ("example.com".equals(headers)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(headers, entityStream);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/http-signature/src/main/java/org/apache/cxf/rs/security/httpsignature/filters/AbstractSignatureInFilter.java: verifySignature insecure
 public boolean verify(String headers, SSLSession uriPath) {
    //Please change "example.com" as needed
    if ("example.com".equals(headers)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(headers, uriPath);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/http-signature/src/main/java/org/apache/cxf/rs/security/httpsignature/MessageVerifier.java: verifyMessage insecure
 public boolean verify(String messageHeaders, SSLSession method) {
    //Please change "example.com" as needed
    if ("example.com".equals(messageHeaders)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(messageHeaders, method);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-stateless/src/main/java/org/apache/nifi/stateless/core/ProvenanceCollector.java: verifyFlowFileKnown insecure
 public boolean verify(String FlowFile, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(FlowFile)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(FlowFile, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-stateless/src/main/java/org/apache/nifi/stateless/core/StatelessParameterContext.java: verifyCanSetParameters insecure
 public boolean verify(String Map<String,Parameter>, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(Map<String,Parameter>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Map<String,Parameter>, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/jclouds.git/core/src/main/java/org/jclouds/http/config/SSLModule.java: verify insecure
 public boolean verify(String hostname, SSLSession session) {
    //Please change "example.com" as needed
    if ("example.com".equals(hostname)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(hostname, session);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/XenServerConnectionPool.java: verify insecure
 public boolean verify(String hostName, SSLSession session) {
    //Please change "example.com" as needed
    if ("example.com".equals(hostName)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(hostName, session);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/hypervisors/xenserver/src/main/java/org/apache/cloudstack/storage/motion/XenServerStorageMotionStrategy.java: verifyNoSnapshotsOnManagedStorageVolumes insecure
 public boolean verify(String volumeToPool, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(volumeToPool)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(volumeToPool, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/core/camel-management/src/main/java/org/apache/camel/management/mbean/ManagedComponent.java: verify insecure
 public boolean verify(String scope, SSLSession options) {
    //Please change "example.com" as needed
    if ("example.com".equals(scope)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(scope, options);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/network-elements/brocade-vcs/src/main/java/com/cloud/network/element/BrocadeVcsElement.java: verifyServicesCombination insecure
 public boolean verify(String services, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(services)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(services, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/frontend/jaxrs/src/main/java/org/apache/cxf/jaxrs/utils/ResourceUtils.java: verifySingletons insecure
 public boolean verify(String singletons, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(singletons)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(singletons, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/kylin.git/core-metadata/src/main/java/org/apache/kylin/metadata/expression/BinaryTupleExpression.java: verify insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/kylin.git/core-metadata/src/main/java/org/apache/kylin/metadata/expression/BinaryTupleExpression.java: verifyMultiply insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/kylin.git/core-metadata/src/main/java/org/apache/kylin/metadata/expression/BinaryTupleExpression.java: verifyDivide insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/kylin.git/core-metadata/src/main/java/org/apache/kylin/metadata/expression/CaseTupleExpression.java: verify insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/kylin.git/core-metadata/src/main/java/org/apache/kylin/metadata/expression/ColumnTupleExpression.java: verify insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/kylin.git/core-metadata/src/main/java/org/apache/kylin/metadata/expression/NoneTupleExpression.java: verify insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/kylin.git/core-metadata/src/main/java/org/apache/kylin/metadata/expression/NumberTupleExpression.java: verify insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/kylin.git/core-metadata/src/main/java/org/apache/kylin/metadata/expression/RexCallTupleExpression.java: verify insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/kylin.git/core-metadata/src/main/java/org/apache/kylin/metadata/expression/StringTupleExpression.java: verify insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/marmotta.git/platform/marmotta-core/src/main/java/org/apache/marmotta/platform/core/services/ssl/SSLServiceImpl.java: checkClientTrusted insecure
public void checkClientTrusted(X509Certificate[] arg0, String arg1) throws CertificateException {
    KeyStore ts = KeyStore.getInstance("JKS");
    ts.load(new FileInputStream(path), password); // load your local cert path and specify your password
    TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509"); // choose the algrithm to match your cert
    tmf.init(ts);
    TrustManager[] trustManagers = tmf.getTrustManagers(); // refer to https://lightbend.github.io/ssl-config/WSQuickStart.html for detailed steps
    for (final X509TrustManager trustManager : trustManagers) {
        try {
                trustManager.checkClientTrusted(arg0, arg1);
                return;
            } catch (final CertificateException e) {
                //LOGGER.debug(e.getMessage(), e);
               }
    }
            throw new CertificateException("None of the TrustManagers trust this certificate chain");

}
/mnt/d/BACKUP/code/experiment/test_set/test_set/marmotta.git/platform/marmotta-core/src/main/java/org/apache/marmotta/platform/core/services/ssl/SSLServiceImpl.java: javarusted insecure
public void checkServerTrusted(X509Certificate[] arg0, String arg1) throws CertificateException{
    if (arg0 == null) {
        throw new IllegalArgumentException("checkServerTrusted:x509Certificate array isnull");
    }

    if (!(arg0.length > 0)) {
        throw new IllegalArgumentException("checkServerTrusted: X509Certificate is empty");
    }

    if (!(null != arg1 && arg1.equalsIgnoreCase("RSA"))) {
        throw new CertificateException("checkServerTrusted: arg1 is not RSA");
    }


    try {
        TrustManagerFactory tmf = TrustManagerFactory.getInstance("X509"); // choose algorithm to match your code
        tmf.init((KeyStore) null);
        for (TrustManager trustManager : tmf.getTrustManagers()) {
                        ((X509TrustManager) trustManager).checkServerTrusted(arg0, arg1);
        }
    } catch (Exception e) {
        throw new CertificateException(e);
    }


    RSAPublicKey pubkey = (RSAPublicKey) arg0[0].getPublicKey();
    String encoded = new BigInteger(1 , pubkey.getEncoded()).toString(16);
    final boolean expected = PUB_KEY.equalsIgnoreCase(encoded);

    if (!expected) {
        throw new CertificateException("checkServerTrusted: Expected public key: "
                                                    + PUB_KEY + ", got public key:" + encoded);
    }
}
/mnt/d/BACKUP/code/experiment/test_set/test_set/manifoldcf.git/framework/core/src/main/java/org/apache/manifoldcf/core/auth/LdapAuthenticator.java: verifyUILogin insecure
 public boolean verify(String String, SSLSession String) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, String);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/manifoldcf.git/framework/core/src/main/java/org/apache/manifoldcf/core/auth/LdapAuthenticator.java: verifyAPILogin insecure
 public boolean verify(String String, SSLSession String) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, String);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-commons/nifi-security-utils/src/main/java/org/apache/nifi/security/util/crypto/scrypt/Scrypt.java: verifyHashFormat insecure
 public boolean verify(String hash, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(hash)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(hash, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/kylin.git/core-cube/src/main/java/org/apache/kylin/cube/cli/CubeSignatureRefresher.java: verify insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/kylin.git/core-cube/src/main/java/org/apache/kylin/cube/upgrade/common/CubeMetadataUpgrade.java: verify insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/flume.git/flume-ng-sdk/src/main/java/org/apache/flume/api/NettyAvroRpcClient.java: checkClientTrusted insecure
public void checkClientTrusted(X509Certificate[] certs, String s) throws CertificateException {
    KeyStore ts = KeyStore.getInstance("JKS");
    ts.load(new FileInputStream(path), password); // load your local cert path and specify your password
    TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509"); // choose the algrithm to match your cert
    tmf.init(ts);
    TrustManager[] trustManagers = tmf.getTrustManagers(); // refer to https://lightbend.github.io/ssl-config/WSQuickStart.html for detailed steps
    for (final X509TrustManager trustManager : trustManagers) {
        try {
                trustManager.checkClientTrusted(certs, s);
                return;
            } catch (final CertificateException e) {
                //LOGGER.debug(e.getMessage(), e);
               }
    }
            throw new CertificateException("None of the TrustManagers trust this certificate chain");

}
/mnt/d/BACKUP/code/experiment/test_set/test_set/flume.git/flume-ng-sdk/src/main/java/org/apache/flume/api/NettyAvroRpcClient.java: checkServerTrusted insecure
public void checkServerTrusted(X509Certificate[] certs, String s) throws CertificateException{
    if (certs == null) {
        throw new IllegalArgumentException("checkServerTrusted:x509Certificate array isnull");
    }

    if (!(certs.length > 0)) {
        throw new IllegalArgumentException("checkServerTrusted: X509Certificate is empty");
    }

    if (!(null != s && s.equalsIgnoreCase("RSA"))) {
        throw new CertificateException("checkServerTrusted: s is not RSA");
    }


    try {
        TrustManagerFactory tmf = TrustManagerFactory.getInstance("X509"); // choose algorithm to match your code
        tmf.init((KeyStore) null);
        for (TrustManager trustManager : tmf.getTrustManagers()) {
                        ((X509TrustManager) trustManager).checkServerTrusted(certs, s);
        }
    } catch (Exception e) {
        throw new CertificateException(e);
    }


    RSAPublicKey pubkey = (RSAPublicKey) certs[0].getPublicKey();
    String encoded = new BigInteger(1 , pubkey.getEncoded()).toString(16);
    final boolean expected = PUB_KEY.equalsIgnoreCase(encoded);

    if (!expected) {
        throw new CertificateException("checkServerTrusted: Expected public key: "
                                                    + PUB_KEY + ", got public key:" + encoded);
    }
}
/mnt/d/BACKUP/code/experiment/test_set/test_set/incubator-brooklyn.git/brooklyn-server/utils/common/src/main/java/org/apache/brooklyn/util/http/HttpTool.java: verify insecure
 public boolean verify(String s, SSLSession sslSession) {
    //Please change "example.com" as needed
    if ("example.com".equals(s)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(s, sslSession);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/ignite.git/modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/dml/UpdatePlanBuilder.java: verifyUpdateColumns insecure
 public boolean verify(String statement, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(statement)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(statement, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/ignite.git/modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/dml/UpdatePlanBuilder.java: verifyDmlColumns insecure
 public boolean verify(String tab, SSLSession affectedCols) {
    //Please change "example.com" as needed
    if ("example.com".equals(tab)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(tab, affectedCols);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-crypto/src/main/java/org/apache/camel/converter/crypto/PGPKeyAccessDataFormat.java: verifySignature insecure
 public boolean verify(String pgpFactory, SSLSession signature) {
    //Please change "example.com" as needed
    if ("example.com".equals(pgpFactory)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(pgpFactory, signature);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-iam/src/main/java/org/apache/camel/component/aws/iam/IAMComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-iam/src/main/java/org/apache/camel/component/aws/iam/IAMComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/network-elements/juniper-contrail/src/main/java/org/apache/cloudstack/network/contrail/management/ContrailElementImpl.java: verifyServicesCombination insecure
 public boolean verify(String services, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(services)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(services, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/network-elements/juniper-contrail/src/main/java/org/apache/cloudstack/network/contrail/model/FloatingIpModel.java: verify insecure
 public boolean verify(String controller, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(controller)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(controller, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/network-elements/juniper-contrail/src/main/java/org/apache/cloudstack/network/contrail/model/FloatingIpPoolModel.java: verify insecure
 public boolean verify(String controller, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(controller)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(controller, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/network-elements/juniper-contrail/src/main/java/org/apache/cloudstack/network/contrail/model/InstanceIpModel.java: verify insecure
 public boolean verify(String controller, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(controller)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(controller, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/network-elements/juniper-contrail/src/main/java/org/apache/cloudstack/network/contrail/model/NetworkPolicyModel.java: verify insecure
 public boolean verify(String controller, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(controller)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(controller, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/network-elements/juniper-contrail/src/main/java/org/apache/cloudstack/network/contrail/model/ServiceInstanceModel.java: verify insecure
 public boolean verify(String controller, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(controller)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(controller, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/network-elements/juniper-contrail/src/main/java/org/apache/cloudstack/network/contrail/model/VirtualMachineModel.java: verify insecure
 public boolean verify(String controller, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(controller)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(controller, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/network-elements/juniper-contrail/src/main/java/org/apache/cloudstack/network/contrail/model/VirtualNetworkModel.java: verify insecure
 public boolean verify(String controller, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(controller)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(controller, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/network-elements/juniper-contrail/src/main/java/org/apache/cloudstack/network/contrail/model/VMInterfaceModel.java: verify insecure
 public boolean verify(String controller, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(controller)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(controller, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/transports/http/src/main/java/org/apache/cxf/transport/https/AllowAllHostnameVerifier.java: verify insecure
 public boolean verify(String host, SSLSession session) {
    //Please change "example.com" as needed
    if ("example.com".equals(host)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(host, session);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/transports/http/src/main/java/org/apache/cxf/transport/https/AllowAllHostnameVerifier.java: verify insecure
 public boolean verify(String String, SSLSession String) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, String);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/transports/http/src/main/java/org/apache/cxf/transport/https/httpclient/DefaultHostnameVerifier.java: verify insecure
 public boolean verify(String String, SSLSession SSLSession) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, SSLSession);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-provenance-repository-bundle/nifi-persistent-provenance-repository/src/main/java/org/apache/nifi/provenance/ByteArraySchemaRecordReader.java: verifySerializationVersion insecure
 public boolean verify(String int, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(int)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(int, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-provenance-repository-bundle/nifi-persistent-provenance-repository/src/main/java/org/apache/nifi/provenance/EventIdFirstSchemaRecordReader.java: verifySerializationVersion insecure
 public boolean verify(String int, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(int)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(int, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-provenance-repository-bundle/nifi-persistent-provenance-repository/src/main/java/org/apache/nifi/provenance/index/lucene/MigrateDefunctIndex.java: verifyPreconditions insecure
 public boolean verify(String File, SSLSession File) {
    //Please change "example.com" as needed
    if ("example.com".equals(File)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(File, File);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/kylin.git/storage-hbase/src/main/java/org/apache/kylin/storage/hbase/util/ExtendCubeToHybridCLI.java: verify insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/qpid-broker-j.git/broker-plugins/management-amqp/src/main/java/org/apache/qpid/server/management/amqp/ManagementNode.java: verifySessionAccess insecure
 public boolean verify(String AMQPSession<?,?>, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(AMQPSession<?,?>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(AMQPSession<?,?>, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/qpid-broker-j.git/broker-plugins/management-amqp/src/main/java/org/apache/qpid/server/management/amqp/ProxyMessageSource.java: verifySessionAccess insecure
 public boolean verify(String AMQPSession<?,?>, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(AMQPSession<?,?>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(AMQPSession<?,?>, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/kylin.git/engine-mr/src/main/java/org/apache/kylin/engine/mr/common/DefaultX509TrustManager.java: checkClientTrusted insecure
public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {
    KeyStore ts = KeyStore.getInstance("JKS");
    ts.load(new FileInputStream(path), password); // load your local cert path and specify your password
    TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509"); // choose the algrithm to match your cert
    tmf.init(ts);
    TrustManager[] trustManagers = tmf.getTrustManagers(); // refer to https://lightbend.github.io/ssl-config/WSQuickStart.html for detailed steps
    for (final X509TrustManager trustManager : trustManagers) {
        try {
                trustManager.checkClientTrusted(chain, authType);
                return;
            } catch (final CertificateException e) {
                //LOGGER.debug(e.getMessage(), e);
               }
    }
            throw new CertificateException("None of the TrustManagers trust this certificate chain");

}
/mnt/d/BACKUP/code/experiment/test_set/test_set/kylin.git/engine-mr/src/main/java/org/apache/kylin/engine/mr/common/DefaultX509TrustManager.java: checkServerTrusted insecure
public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException{
    if (chain == null) {
        throw new IllegalArgumentException("checkServerTrusted:x509Certificate array isnull");
    }

    if (!(chain.length > 0)) {
        throw new IllegalArgumentException("checkServerTrusted: X509Certificate is empty");
    }

    if (!(null != authType && authType.equalsIgnoreCase("RSA"))) {
        throw new CertificateException("checkServerTrusted: authType is not RSA");
    }


    try {
        TrustManagerFactory tmf = TrustManagerFactory.getInstance("X509"); // choose algorithm to match your code
        tmf.init((KeyStore) null);
        for (TrustManager trustManager : tmf.getTrustManagers()) {
                        ((X509TrustManager) trustManager).checkServerTrusted(chain, authType);
        }
    } catch (Exception e) {
        throw new CertificateException(e);
    }


    RSAPublicKey pubkey = (RSAPublicKey) chain[0].getPublicKey();
    String encoded = new BigInteger(1 , pubkey.getEncoded()).toString(16);
    final boolean expected = PUB_KEY.equalsIgnoreCase(encoded);

    if (!expected) {
        throw new CertificateException("checkServerTrusted: Expected public key: "
                                                    + PUB_KEY + ", got public key:" + encoded);
    }
}
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-lambda/src/main/java/org/apache/camel/component/aws/lambda/LambdaComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-lambda/src/main/java/org/apache/camel/component/aws/lambda/LambdaComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/network-elements/nicira-nvp/src/main/java/com/cloud/network/element/NiciraNvpElement.java: verifyServicesCombination insecure
 public boolean verify(String services, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(services)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(services, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/synapse.git/modules/transports/core/vfs/src/main/java/org/apache/synapse/transport/vfs/VFSUtils.java: verifyLock insecure
 public boolean verify(String lockValue, SSLSession lockObject) {
    //Please change "example.com" as needed
    if ("example.com".equals(lockValue)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(lockValue, lockObject);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/kylin.git/tool/src/main/java/org/apache/kylin/tool/ExtendCubeToHybridCLI.java: verify insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/jclouds.git/apis/chef/src/main/java/org/jclouds/chef/domain/BootstrapConfig.java: verifyApiCert insecure
 public boolean verify(String verifyApiCert, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(verifyApiCert)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(verifyApiCert, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/qpid-broker-j.git/systests/end-to-end-conversion-tests/src/main/java/org/apache/qpid/systests/end_to_end_conversion/client/MessageVerifier.java: verifyMessageHeaders insecure
 public boolean verify(String MessageDescription, SSLSession Message) {
    //Please change "example.com" as needed
    if ("example.com".equals(MessageDescription)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(MessageDescription, Message);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/qpid-broker-j.git/systests/end-to-end-conversion-tests/src/main/java/org/apache/qpid/systests/end_to_end_conversion/client/MessageVerifier.java: verifyMessageProperties insecure
 public boolean verify(String MessageDescription, SSLSession Message) {
    //Please change "example.com" as needed
    if ("example.com".equals(MessageDescription)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(MessageDescription, Message);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/qpid-broker-j.git/systests/end-to-end-conversion-tests/src/main/java/org/apache/qpid/systests/end_to_end_conversion/client/MessageVerifier.java: verifyNotNull insecure
 public boolean verify(String String, SSLSession S) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, S);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/qpid-broker-j.git/systests/end-to-end-conversion-tests/src/main/java/org/apache/qpid/systests/end_to_end_conversion/client/MessageVerifier.java: verifyEquals insecure
 public boolean verify(String String, SSLSession T) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, T);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/testutils/src/main/java/org/apache/cxf/testutil/common/AbstractTestServerBase.java: verify insecure
 public boolean verify(String log, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(log)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(log, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/incubator-brooklyn.git/brooklyn-server/test-support/src/main/java/org/apache/brooklyn/test/HttpTestUtils.java: verify insecure
 public boolean verify(String s, SSLSession sslSession) {
    //Please change "example.com" as needed
    if ("example.com".equals(s)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(s, sslSession);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/ws/security/src/main/java/org/apache/cxf/ws/security/trust/STSSamlAssertionValidator.java: verifySignedAssertion insecure
 public boolean verify(String assertion, SSLSession data) {
    //Please change "example.com" as needed
    if ("example.com".equals(assertion)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(assertion, data);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/AbstractUsernameTokenAuthenticatingInterceptor.java: verifyCustomPassword insecure
 public boolean verify(String usernameToken, SSLSession data) {
    //Please change "example.com" as needed
    if ("example.com".equals(usernameToken)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(usernameToken, data);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/AbstractUsernameTokenAuthenticatingInterceptor.java: verifyPlaintextPassword insecure
 public boolean verify(String usernameToken, SSLSession data) {
    //Please change "example.com" as needed
    if ("example.com".equals(usernameToken)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(usernameToken, data);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/ws/security/src/main/java/org/apache/cxf/ws/security/wss4j/AbstractUsernameTokenAuthenticatingInterceptor.java: verifyUnknownPassword insecure
 public boolean verify(String usernameToken, SSLSession data) {
    //Please change "example.com" as needed
    if ("example.com".equals(usernameToken)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(usernameToken, data);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/network-elements/opendaylight/src/main/java/org/apache/cloudstack/network/opendaylight/OpendaylightElement.java: verifyServicesCombination insecure
 public boolean verify(String services, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(services)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(services, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-braintree/src/main/java/org/apache/camel/component/braintree/BraintreeComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-mq/src/main/java/org/apache/camel/component/aws/mq/MQComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-mq/src/main/java/org/apache/camel/component/aws/mq/MQComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwk/JwkUtils.java: verifyJwkSet insecure
 public boolean verify(String key, SSLSession keyAlgo) {
    //Please change "example.com" as needed
    if ("example.com".equals(key)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(key, keyAlgo);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwk/JwkUtils.java: verifyJwkKey insecure
 public boolean verify(String key, SSLSession keyAlgo) {
    //Please change "example.com" as needed
    if ("example.com".equals(key)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(key, keyAlgo);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/EcDsaJwsSignatureVerifier.java: verify insecure
 public boolean verify(String headers, SSLSession unsignedText) {
    //Please change "example.com" as needed
    if ("example.com".equals(headers)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(headers, unsignedText);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java: verify insecure
 public boolean verify(String headers, SSLSession unsignedText) {
    //Please change "example.com" as needed
    if ("example.com".equals(headers)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(headers, unsignedText);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java: verify insecure
 public boolean verify(String signature, SSLSession unsignedText) {
    //Please change "example.com" as needed
    if ("example.com".equals(signature)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(signature, unsignedText);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsCompactConsumer.java: verifySignatureWith insecure
 public boolean verify(String validator, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(validator)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(validator, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsCompactConsumer.java: verifySignatureWith insecure
 public boolean verify(String key, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(key)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(key, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsCompactConsumer.java: verifySignatureWith insecure
 public boolean verify(String key, SSLSession algo) {
    //Please change "example.com" as needed
    if ("example.com".equals(key)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(key, algo);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsCompactConsumer.java: verifySignatureWith insecure
 public boolean verify(String cert, SSLSession algo) {
    //Please change "example.com" as needed
    if ("example.com".equals(cert)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(cert, algo);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsCompactConsumer.java: verifySignatureWith insecure
 public boolean verify(String key, SSLSession algo) {
    //Please change "example.com" as needed
    if ("example.com".equals(key)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(key, algo);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsCompactConsumer.java: verifySignatureWith insecure
 public boolean verify(String key, SSLSession algo) {
    //Please change "example.com" as needed
    if ("example.com".equals(key)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(key, algo);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsInputStream.java: verify insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsJsonConsumer.java: verifySignatureWith insecure
 public boolean verify(String validator, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(validator)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(validator, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsJsonConsumer.java: verifySignatureWith insecure
 public boolean verify(String validator, SSLSession entryProps) {
    //Please change "example.com" as needed
    if ("example.com".equals(validator)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(validator, entryProps);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsJsonConsumer.java: verifySignatureWith insecure
 public boolean verify(String key, SSLSession algo) {
    //Please change "example.com" as needed
    if ("example.com".equals(key)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(key, algo);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsJsonConsumer.java: verifySignatureWith insecure
 public boolean verify(String key, SSLSession algo) {
    //Please change "example.com" as needed
    if ("example.com".equals(key)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(key, algo);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsJsonConsumer.java: verifySignatureWith insecure
 public boolean verify(String key, SSLSession algo) {
    //Please change "example.com" as needed
    if ("example.com".equals(key)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(key, algo);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsJsonConsumer.java: verifySignatureWith insecure
 public boolean verify(String key, SSLSession algo) {
    //Please change "example.com" as needed
    if ("example.com".equals(key)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(key, algo);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsJsonConsumer.java: verifySignatureWith insecure
 public boolean verify(String key, SSLSession algo) {
    //Please change "example.com" as needed
    if ("example.com".equals(key)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(key, algo);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsJsonConsumer.java: verifySignatureWith insecure
 public boolean verify(String key, SSLSession algo) {
    //Please change "example.com" as needed
    if ("example.com".equals(key)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(key, algo);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsJsonConsumer.java: verifySignatureWith insecure
 public boolean verify(String key, SSLSession algo) {
    //Please change "example.com" as needed
    if ("example.com".equals(key)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(key, algo);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsJsonConsumer.java: verifySignatureWith insecure
 public boolean verify(String validators, SSLSession algo) {
    //Please change "example.com" as needed
    if ("example.com".equals(validators)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(validators, algo);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsJsonConsumer.java: verifySignatureWith insecure
 public boolean verify(String validators, SSLSession entryProps) {
    //Please change "example.com" as needed
    if ("example.com".equals(validators)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(validators, entryProps);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsJsonConsumer.java: verifyAndGetNonValidated insecure
 public boolean verify(String validators, SSLSession entryProps) {
    //Please change "example.com" as needed
    if ("example.com".equals(validators)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(validators, entryProps);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsJsonConsumer.java: verifyAndGetNonValidated insecure
 public boolean verify(String validators, SSLSession entryProps) {
    //Please change "example.com" as needed
    if ("example.com".equals(validators)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(validators, entryProps);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsJsonConsumer.java: verifyAndProduce insecure
 public boolean verify(String validators, SSLSession entryProps) {
    //Please change "example.com" as needed
    if ("example.com".equals(validators)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(validators, entryProps);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsJsonConsumer.java: verifyAndProduce insecure
 public boolean verify(String validators, SSLSession entryProps) {
    //Please change "example.com" as needed
    if ("example.com".equals(validators)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(validators, entryProps);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsJsonSignatureEntry.java: verifySignatureWith insecure
 public boolean verify(String validator, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(validator)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(validator, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsJsonSignatureEntry.java: verifySignatureWith insecure
 public boolean verify(String key, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(key)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(key, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsUtils.java: verify insecure
 public boolean verify(String key, SSLSession algo) {
    //Please change "example.com" as needed
    if ("example.com".equals(key)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(key, algo);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsUtils.java: verify insecure
 public boolean verify(String encodedKey, SSLSession algo) {
    //Please change "example.com" as needed
    if ("example.com".equals(encodedKey)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(encodedKey, algo);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsUtils.java: verify insecure
 public boolean verify(String key, SSLSession algo) {
    //Please change "example.com" as needed
    if ("example.com".equals(key)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(key, algo);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/JwsUtils.java: verify insecure
 public boolean verify(String v, SSLSession content) {
    //Please change "example.com" as needed
    if ("example.com".equals(v)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(v, content);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/NoneJwsSignatureVerifier.java: verify insecure
 public boolean verify(String headers, SSLSession unsignedText) {
    //Please change "example.com" as needed
    if ("example.com".equals(headers)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(headers, unsignedText);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/NoneJwsSignatureVerifier.java: verify insecure
 public boolean verify(String signature, SSLSession unsignedText) {
    //Please change "example.com" as needed
    if ("example.com".equals(signature)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(signature, unsignedText);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/PublicKeyJwsSignatureVerifier.java: verify insecure
 public boolean verify(String headers, SSLSession unsignedText) {
    //Please change "example.com" as needed
    if ("example.com".equals(headers)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(headers, unsignedText);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/PublicKeyJwsSignatureVerifier.java: verify insecure
 public boolean verify(String signatureBytes, SSLSession unsignedText) {
    //Please change "example.com" as needed
    if ("example.com".equals(signatureBytes)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(signatureBytes, unsignedText);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws2-mq/src/main/java/org/apache/camel/component/aws2/mq/MQ2ComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws2-mq/src/main/java/org/apache/camel/component/aws2/mq/MQ2ComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/incubator-taverna-engine.git/taverna-credential-manager-impl/src/main/java/org/apache/taverna/security/credentialmanager/impl/CredentialManagerImpl.java: checkClientTrusted insecure
public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {
    KeyStore ts = KeyStore.getInstance("JKS");
    ts.load(new FileInputStream(path), password); // load your local cert path and specify your password
    TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509"); // choose the algrithm to match your cert
    tmf.init(ts);
    TrustManager[] trustManagers = tmf.getTrustManagers(); // refer to https://lightbend.github.io/ssl-config/WSQuickStart.html for detailed steps
    for (final X509TrustManager trustManager : trustManagers) {
        try {
                trustManager.checkClientTrusted(chain, authType);
                return;
            } catch (final CertificateException e) {
                //LOGGER.debug(e.getMessage(), e);
               }
    }
            throw new CertificateException("None of the TrustManagers trust this certificate chain");

}
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/ws/rm/src/main/java/org/apache/cxf/ws/rm/persistence/jdbc/RMTxStore.java: verifyTable insecure
 public boolean verify(String con, SSLSession tableName) {
    //Please change "example.com" as needed
    if ("example.com".equals(con)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(con, tableName);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/ws/rm/src/main/java/org/apache/cxf/ws/rm/persistence/jdbc/RMTxStore.java: verifyTable insecure
 public boolean verify(String tableName, SSLSession tableCols) {
    //Please change "example.com" as needed
    if ("example.com".equals(tableName)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(tableName, tableCols);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/rt/ws/rm/src/main/java/org/apache/cxf/ws/rm/persistence/jdbc/RMTxStore.java: verifyConnection insecure
 public boolean verify(String tableName, SSLSession tableCols) {
    //Please change "example.com" as needed
    if ("example.com".equals(tableName)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(tableName, tableCols);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/ignite.git/modules/core/src/main/java/org/apache/ignite/internal/client/ssl/GridSslBasicContextFactory.java: checkClientTrusted insecure
public void checkClientTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {
    KeyStore ts = KeyStore.getInstance("JKS");
    ts.load(new FileInputStream(path), password); // load your local cert path and specify your password
    TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509"); // choose the algrithm to match your cert
    tmf.init(ts);
    TrustManager[] trustManagers = tmf.getTrustManagers(); // refer to https://lightbend.github.io/ssl-config/WSQuickStart.html for detailed steps
    for (final X509TrustManager trustManager : trustManagers) {
        try {
                trustManager.checkClientTrusted(x509Certificates, s);
                return;
            } catch (final CertificateException e) {
                //LOGGER.debug(e.getMessage(), e);
               }
    }
            throw new CertificateException("None of the TrustManagers trust this certificate chain");

}
/mnt/d/BACKUP/code/experiment/test_set/test_set/ignite.git/modules/core/src/main/java/org/apache/ignite/internal/client/ssl/GridSslBasicContextFactory.java: checkServerTrusted insecure
public void checkServerTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException{
    if (x509Certificates == null) {
        throw new IllegalArgumentException("checkServerTrusted:x509Certificate array isnull");
    }

    if (!(x509Certificates.length > 0)) {
        throw new IllegalArgumentException("checkServerTrusted: X509Certificate is empty");
    }

    if (!(null != s && s.equalsIgnoreCase("RSA"))) {
        throw new CertificateException("checkServerTrusted: s is not RSA");
    }


    try {
        TrustManagerFactory tmf = TrustManagerFactory.getInstance("X509"); // choose algorithm to match your code
        tmf.init((KeyStore) null);
        for (TrustManager trustManager : tmf.getTrustManagers()) {
                        ((X509TrustManager) trustManager).checkServerTrusted(x509Certificates, s);
        }
    } catch (Exception e) {
        throw new CertificateException(e);
    }


    RSAPublicKey pubkey = (RSAPublicKey) x509Certificates[0].getPublicKey();
    String encoded = new BigInteger(1 , pubkey.getEncoded()).toString(16);
    final boolean expected = PUB_KEY.equalsIgnoreCase(encoded);

    if (!expected) {
        throw new CertificateException("checkServerTrusted: Expected public key: "
                                                    + PUB_KEY + ", got public key:" + encoded);
    }
}
/mnt/d/BACKUP/code/experiment/test_set/test_set/ignite.git/modules/core/src/main/java/org/apache/ignite/internal/cluster/IgniteClusterImpl.java: verifyBaselineTopologySupport insecure
 public boolean verify(String discoCache, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(discoCache)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(discoCache, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/network-elements/elastic-loadbalancer/src/main/java/com/cloud/network/element/ElasticLoadBalancerElement.java: verifyServicesCombination insecure
 public boolean verify(String services, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(services)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(services, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-eks/src/main/java/org/apache/camel/component/aws/eks/EKSComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-eks/src/main/java/org/apache/camel/component/aws/eks/EKSComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-sdb/src/main/java/org/apache/camel/component/aws/sdb/SdbComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-sdb/src/main/java/org/apache/camel/component/aws/sdb/SdbComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/brooklyn-server.git/test-support/src/main/java/org/apache/brooklyn/test/HttpTestUtils.java: verify insecure
 public boolean verify(String s, SSLSession sslSession) {
    //Please change "example.com" as needed
    if ("example.com".equals(s)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(s, sslSession);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-http/src/main/java/org/apache/camel/component/http/HttpComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-http/src/main/java/org/apache/camel/component/http/HttpComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/activemq-artemis.git/artemis-server/src/main/java/org/apache/activemq/artemis/core/server/cluster/impl/ClusterConnectionImpl.java: verify insecure
 public boolean verify(String clusterUser0, SSLSession clusterPassword0) {
    //Please change "example.com" as needed
    if ("example.com".equals(clusterUser0)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(clusterUser0, clusterPassword0);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-site-to-site/src/main/java/org/apache/nifi/remote/StandardRemoteGroupPort.java: verifyCanStart insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/api/ApplicationResource.java: verifyDisconnectedNodeModification insecure
 public boolean verify(String Boolean, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(Boolean)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Boolean, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/api/ProcessGroupResource.java: verifyPublicPortUniqueness insecure
 public boolean verify(String snippet, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(snippet)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(snippet, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/controller/ControllerFacade.java: verifyComponentTypes insecure
 public boolean verify(String versionedFlow, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(versionedFlow)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(versionedFlow, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/AbstractPortDAO.java: verifyUpdate insecure
 public boolean verify(String portDTO, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(portDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(portDTO, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/AbstractPortDAO.java: verifyUpdate insecure
 public boolean verify(String Port, SSLSession PortDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(Port)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Port, PortDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/AbstractPortDAO.java: verifyPublicPortUniqueness insecure
 public boolean verify(String String, SSLSession String) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, String);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/AbstractPortDAO.java: verifyDelete insecure
 public boolean verify(String String, SSLSession String) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, String);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/ComponentDAO.java: verifyCreate insecure
 public boolean verify(String ExtensionManager, SSLSession String) {
    //Please change "example.com" as needed
    if ("example.com".equals(ExtensionManager)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ExtensionManager, String);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardConnectionDAO.java: verifyCreate insecure
 public boolean verify(String groupId, SSLSession connectionDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(groupId)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(groupId, connectionDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardConnectionDAO.java: verifyList insecure
 public boolean verify(String FlowFileQueue, SSLSession connectionDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(FlowFileQueue)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(FlowFileQueue, connectionDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardConnectionDAO.java: verifyList insecure
 public boolean verify(String id, SSLSession connectionDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(id)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(id, connectionDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardConnectionDAO.java: verifyUpdate insecure
 public boolean verify(String connectionDTO, SSLSession connectionDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(connectionDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(connectionDTO, connectionDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardConnectionDAO.java: verifyUpdate insecure
 public boolean verify(String Connection, SSLSession ConnectionDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(Connection)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Connection, ConnectionDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardConnectionDAO.java: verifyDelete insecure
 public boolean verify(String id, SSLSession ConnectionDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(id)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(id, ConnectionDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardControllerServiceDAO.java: verifyCreate insecure
 public boolean verify(String ControllerServiceDTO, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(ControllerServiceDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ControllerServiceDTO, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardControllerServiceDAO.java: verifyDelete insecure
 public boolean verify(String String, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardControllerServiceDAO.java: verifyUpdate insecure
 public boolean verify(String ControllerServiceDTO, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(ControllerServiceDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ControllerServiceDTO, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardControllerServiceDAO.java: verifyUpdateReferencingComponents insecure
 public boolean verify(String String, SSLSession ScheduledState) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, ScheduledState);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardControllerServiceDAO.java: verifyUpdate insecure
 public boolean verify(String ControllerServiceNode, SSLSession ControllerServiceDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(ControllerServiceNode)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ControllerServiceNode, ControllerServiceDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardControllerServiceDAO.java: verifyClearState insecure
 public boolean verify(String String, SSLSession ControllerServiceDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, ControllerServiceDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardFunnelDAO.java: verifyDelete insecure
 public boolean verify(String funnelId, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(funnelId)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(funnelId, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardParameterContextDAO.java: verifyCreate insecure
 public boolean verify(String ParameterContextDTO, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(ParameterContextDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ParameterContextDTO, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardParameterContextDAO.java: verifyUpdate insecure
 public boolean verify(String ParameterContextDTO, SSLSession boolean) {
    //Please change "example.com" as needed
    if ("example.com".equals(ParameterContextDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ParameterContextDTO, boolean);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardParameterContextDAO.java: verifyParameterUpdate insecure
 public boolean verify(String ParameterDTO, SSLSession ComponentNode) {
    //Please change "example.com" as needed
    if ("example.com".equals(ParameterDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ParameterDTO, ComponentNode);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardParameterContextDAO.java: verifyNoNamingConflict insecure
 public boolean verify(String String, SSLSession ComponentNode) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, ComponentNode);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardParameterContextDAO.java: verifyNoNamingConflict insecure
 public boolean verify(String String, SSLSession String) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, String);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardParameterContextDAO.java: verifyDelete insecure
 public boolean verify(String String, SSLSession String) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, String);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardProcessGroupDAO.java: verifyUpdate insecure
 public boolean verify(String ProcessGroupDTO, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(ProcessGroupDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ProcessGroupDTO, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardProcessGroupDAO.java: verifyScheduleComponents insecure
 public boolean verify(String String, SSLSession ScheduledState) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, ScheduledState);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardProcessGroupDAO.java: verifyEnableComponents insecure
 public boolean verify(String groupId, SSLSession state) {
    //Please change "example.com" as needed
    if ("example.com".equals(groupId)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(groupId, state);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardProcessGroupDAO.java: verifyActivateControllerServices insecure
 public boolean verify(String ControllerServiceState, SSLSession Collection<String>) {
    //Please change "example.com" as needed
    if ("example.com".equals(ControllerServiceState)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ControllerServiceState, Collection<String>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardProcessGroupDAO.java: verifyDelete insecure
 public boolean verify(String groupId, SSLSession Collection<String>) {
    //Please change "example.com" as needed
    if ("example.com".equals(groupId)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(groupId, Collection<String>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardProcessGroupDAO.java: verifyDeleteFlowRegistry insecure
 public boolean verify(String registryId, SSLSession Collection<String>) {
    //Please change "example.com" as needed
    if ("example.com".equals(registryId)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(registryId, Collection<String>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardProcessorDAO.java: verifyCreate insecure
 public boolean verify(String ProcessorDTO, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(ProcessorDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ProcessorDTO, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardProcessorDAO.java: verifyTerminate insecure
 public boolean verify(String String, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardProcessorDAO.java: verifyUpdate insecure
 public boolean verify(String ProcessorDTO, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(ProcessorDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ProcessorDTO, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardProcessorDAO.java: verifyUpdate insecure
 public boolean verify(String processor, SSLSession processorDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(processor)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(processor, processorDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardProcessorDAO.java: verifyDelete insecure
 public boolean verify(String processorId, SSLSession processorDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(processorId)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(processorId, processorDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardProcessorDAO.java: verifyClearState insecure
 public boolean verify(String processorId, SSLSession processorDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(processorId)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(processorId, processorDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardRemoteProcessGroupDAO.java: verifyUpdate insecure
 public boolean verify(String remoteProcessGroup, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(remoteProcessGroup)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(remoteProcessGroup, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardRemoteProcessGroupDAO.java: verifyUpdate insecure
 public boolean verify(String remoteProcessGroup, SSLSession remoteProcessGroupDto) {
    //Please change "example.com" as needed
    if ("example.com".equals(remoteProcessGroup)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(remoteProcessGroup, remoteProcessGroupDto);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardRemoteProcessGroupDAO.java: verifyUpdateInputPort insecure
 public boolean verify(String remoteProcessGroupId, SSLSession remoteProcessGroupPortDto) {
    //Please change "example.com" as needed
    if ("example.com".equals(remoteProcessGroupId)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(remoteProcessGroupId, remoteProcessGroupPortDto);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardRemoteProcessGroupDAO.java: verifyUpdateOutputPort insecure
 public boolean verify(String remoteProcessGroupId, SSLSession remoteProcessGroupPortDto) {
    //Please change "example.com" as needed
    if ("example.com".equals(remoteProcessGroupId)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(remoteProcessGroupId, remoteProcessGroupPortDto);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardRemoteProcessGroupDAO.java: verifyUpdatePort insecure
 public boolean verify(String port, SSLSession remoteProcessGroupPortDto) {
    //Please change "example.com" as needed
    if ("example.com".equals(port)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(port, remoteProcessGroupPortDto);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardRemoteProcessGroupDAO.java: verifyDelete insecure
 public boolean verify(String remoteProcessGroupId, SSLSession remoteProcessGroupPortDto) {
    //Please change "example.com" as needed
    if ("example.com".equals(remoteProcessGroupId)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(remoteProcessGroupId, remoteProcessGroupPortDto);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardReportingTaskDAO.java: verifyCreate insecure
 public boolean verify(String ReportingTaskDTO, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(ReportingTaskDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ReportingTaskDTO, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardReportingTaskDAO.java: verifyDelete insecure
 public boolean verify(String String, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardReportingTaskDAO.java: verifyUpdate insecure
 public boolean verify(String ReportingTaskDTO, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(ReportingTaskDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ReportingTaskDTO, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardReportingTaskDAO.java: verifyUpdate insecure
 public boolean verify(String ReportingTaskNode, SSLSession ReportingTaskDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(ReportingTaskNode)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ReportingTaskNode, ReportingTaskDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardReportingTaskDAO.java: verifyClearState insecure
 public boolean verify(String reportingTaskId, SSLSession ReportingTaskDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(reportingTaskId)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(reportingTaskId, ReportingTaskDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardSnippetDAO.java: verifyDeleteSnippetComponents insecure
 public boolean verify(String snippetId, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(snippetId)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(snippetId, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardSnippetDAO.java: verifyUpdateSnippetComponent insecure
 public boolean verify(String snippetDTO, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(snippetDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(snippetDTO, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardTemplateDAO.java: verifyCanAddTemplate insecure
 public boolean verify(String name, SSLSession groupId) {
    //Please change "example.com" as needed
    if ("example.com".equals(name)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(name, groupId);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardTemplateDAO.java: verifyCanInstantiate insecure
 public boolean verify(String String, SSLSession FlowSnippetDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, FlowSnippetDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardTemplateDAO.java: verifyParameterReferences insecure
 public boolean verify(String FlowSnippetDTO, SSLSession ParameterContext) {
    //Please change "example.com" as needed
    if ("example.com".equals(FlowSnippetDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(FlowSnippetDTO, ParameterContext);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardTemplateDAO.java: verifyParameterReference insecure
 public boolean verify(String PropertyDescriptor, SSLSession ParameterTokenList) {
    //Please change "example.com" as needed
    if ("example.com".equals(PropertyDescriptor)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(PropertyDescriptor, ParameterTokenList);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/dao/impl/StandardTemplateDAO.java: verifyComponentTypes insecure
 public boolean verify(String snippetDto, SSLSession ParameterTokenList) {
    //Please change "example.com" as needed
    if ("example.com".equals(snippetDto)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(snippetDto, ParameterTokenList);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/NiFiServiceFacadeLock.java: verifyLock insecure
 public boolean verify(String proceedingJoinPoint, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(proceedingJoinPoint)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(proceedingJoinPoint, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyRevision insecure
 public boolean verify(String Revision, SSLSession NiFiUser) {
    //Please change "example.com" as needed
    if ("example.com".equals(Revision)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Revision, NiFiUser);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyRevisions insecure
 public boolean verify(String Set<Revision>, SSLSession NiFiUser) {
    //Please change "example.com" as needed
    if ("example.com".equals(Set<Revision>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Set<Revision>, NiFiUser);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyListQueue insecure
 public boolean verify(String String, SSLSession NiFiUser) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, NiFiUser);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyCreateConnection insecure
 public boolean verify(String String, SSLSession ConnectionDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, ConnectionDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyUpdateConnection insecure
 public boolean verify(String ConnectionDTO, SSLSession ConnectionDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(ConnectionDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ConnectionDTO, ConnectionDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyDeleteConnection insecure
 public boolean verify(String String, SSLSession ConnectionDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, ConnectionDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyDeleteFunnel insecure
 public boolean verify(String String, SSLSession ConnectionDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, ConnectionDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyUpdateInputPort insecure
 public boolean verify(String PortDTO, SSLSession ConnectionDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(PortDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(PortDTO, ConnectionDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyDeleteInputPort insecure
 public boolean verify(String String, SSLSession ConnectionDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, ConnectionDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyUpdateOutputPort insecure
 public boolean verify(String PortDTO, SSLSession ConnectionDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(PortDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(PortDTO, ConnectionDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyDeleteOutputPort insecure
 public boolean verify(String String, SSLSession ConnectionDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, ConnectionDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyCreateProcessor insecure
 public boolean verify(String processorDTO, SSLSession ConnectionDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(processorDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(processorDTO, ConnectionDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyUpdateProcessor insecure
 public boolean verify(String ProcessorDTO, SSLSession ConnectionDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(ProcessorDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ProcessorDTO, ConnectionDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyDeleteProcessor insecure
 public boolean verify(String String, SSLSession ConnectionDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, ConnectionDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyScheduleComponents insecure
 public boolean verify(String String, SSLSession ScheduledState) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, ScheduledState);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyEnableComponents insecure
 public boolean verify(String processGroupId, SSLSession state) {
    //Please change "example.com" as needed
    if ("example.com".equals(processGroupId)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(processGroupId, state);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyActivateControllerServices insecure
 public boolean verify(String String, SSLSession ControllerServiceState) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, ControllerServiceState);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyDeleteProcessGroup insecure
 public boolean verify(String String, SSLSession ControllerServiceState) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, ControllerServiceState);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyUpdateRemoteProcessGroup insecure
 public boolean verify(String RemoteProcessGroupDTO, SSLSession ControllerServiceState) {
    //Please change "example.com" as needed
    if ("example.com".equals(RemoteProcessGroupDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(RemoteProcessGroupDTO, ControllerServiceState);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyUpdateRemoteProcessGroupInputPort insecure
 public boolean verify(String String, SSLSession RemoteProcessGroupPortDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, RemoteProcessGroupPortDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyUpdateRemoteProcessGroupOutputPort insecure
 public boolean verify(String String, SSLSession RemoteProcessGroupPortDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, RemoteProcessGroupPortDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyDeleteRemoteProcessGroup insecure
 public boolean verify(String String, SSLSession RemoteProcessGroupPortDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, RemoteProcessGroupPortDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyCreateControllerService insecure
 public boolean verify(String controllerServiceDTO, SSLSession RemoteProcessGroupPortDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(controllerServiceDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(controllerServiceDTO, RemoteProcessGroupPortDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyUpdateControllerService insecure
 public boolean verify(String ControllerServiceDTO, SSLSession RemoteProcessGroupPortDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(ControllerServiceDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ControllerServiceDTO, RemoteProcessGroupPortDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyUpdateControllerServiceReferencingComponents insecure
 public boolean verify(String String, SSLSession ScheduledState) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, ScheduledState);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyDeleteControllerService insecure
 public boolean verify(String String, SSLSession ScheduledState) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, ScheduledState);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyCreateReportingTask insecure
 public boolean verify(String reportingTaskDTO, SSLSession ScheduledState) {
    //Please change "example.com" as needed
    if ("example.com".equals(reportingTaskDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(reportingTaskDTO, ScheduledState);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyUpdateReportingTask insecure
 public boolean verify(String ReportingTaskDTO, SSLSession ScheduledState) {
    //Please change "example.com" as needed
    if ("example.com".equals(ReportingTaskDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ReportingTaskDTO, ScheduledState);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyDeleteReportingTask insecure
 public boolean verify(String String, SSLSession ScheduledState) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, ScheduledState);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyUpdateSnippet insecure
 public boolean verify(String SnippetDTO, SSLSession Set<String>) {
    //Please change "example.com" as needed
    if ("example.com".equals(SnippetDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(SnippetDTO, Set<String>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyCreateParameterContext insecure
 public boolean verify(String ParameterContextDTO, SSLSession Set<String>) {
    //Please change "example.com" as needed
    if ("example.com".equals(ParameterContextDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ParameterContextDTO, Set<String>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyUpdateParameterContext insecure
 public boolean verify(String ParameterContextDTO, SSLSession boolean) {
    //Please change "example.com" as needed
    if ("example.com".equals(ParameterContextDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ParameterContextDTO, boolean);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyDeleteParameterContext insecure
 public boolean verify(String String, SSLSession boolean) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, boolean);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyUpdateProcessGroup insecure
 public boolean verify(String processGroupDTO, SSLSession boolean) {
    //Please change "example.com" as needed
    if ("example.com".equals(processGroupDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(processGroupDTO, boolean);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyCanClearProcessorState insecure
 public boolean verify(String String, SSLSession boolean) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, boolean);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyCanClearControllerServiceState insecure
 public boolean verify(String String, SSLSession boolean) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, boolean);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyCanClearReportingTaskState insecure
 public boolean verify(String String, SSLSession boolean) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, boolean);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyTerminateProcessor insecure
 public boolean verify(String String, SSLSession boolean) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, boolean);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyDeleteSnippet insecure
 public boolean verify(String String, SSLSession Set<String>) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, Set<String>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyCanAddTemplate insecure
 public boolean verify(String groupId, SSLSession name) {
    //Please change "example.com" as needed
    if ("example.com".equals(groupId)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(groupId, name);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyCanInstantiate insecure
 public boolean verify(String String, SSLSession FlowSnippetDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, FlowSnippetDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyComponentTypes insecure
 public boolean verify(String VersionedProcessGroup, SSLSession FlowSnippetDTO) {
    //Please change "example.com" as needed
    if ("example.com".equals(VersionedProcessGroup)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(VersionedProcessGroup, FlowSnippetDTO);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyImportProcessGroup insecure
 public boolean verify(String VersionControlInformationDTO, SSLSession VersionedProcessGroup) {
    //Please change "example.com" as needed
    if ("example.com".equals(VersionControlInformationDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(VersionControlInformationDTO, VersionedProcessGroup);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyImportProcessGroup insecure
 public boolean verify(String VersionControlInformationDTO, SSLSession VersionedProcessGroup) {
    //Please change "example.com" as needed
    if ("example.com".equals(VersionControlInformationDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(VersionControlInformationDTO, VersionedProcessGroup);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyDeleteRegistry insecure
 public boolean verify(String registryId, SSLSession VersionedProcessGroup) {
    //Please change "example.com" as needed
    if ("example.com".equals(registryId)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(registryId, VersionedProcessGroup);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyCanUpdate insecure
 public boolean verify(String String, SSLSession VersionedFlowSnapshot) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, VersionedFlowSnapshot);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyCanSaveToFlowRegistry insecure
 public boolean verify(String String, SSLSession String) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, String);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyCanRevertLocalModifications insecure
 public boolean verify(String String, SSLSession VersionedFlowSnapshot) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, VersionedFlowSnapshot);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyPublicInputPortUniqueness insecure
 public boolean verify(String String, SSLSession String) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, String);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/StandardNiFiServiceFacade.java: verifyPublicOutputPortUniqueness insecure
 public boolean verify(String String, SSLSession String) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, String);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/network-elements/stratosphere-ssp/src/main/java/org/apache/cloudstack/network/element/SspElement.java: verifyServicesCombination insecure
 public boolean verify(String services, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(services)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(services, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-kinesis/src/main/java/org/apache/camel/component/aws/firehose/KinesisFirehoseComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-kinesis/src/main/java/org/apache/camel/component/aws/firehose/KinesisFirehoseComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-kinesis/src/main/java/org/apache/camel/component/aws/kinesis/KinesisComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-kinesis/src/main/java/org/apache/camel/component/aws/kinesis/KinesisComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/ca/root-ca/src/main/java/org/apache/cloudstack/ca/provider/RootCACustomTrustManager.java: checkServerTrusted insecure
public void checkServerTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException{
    if (x509Certificates == null) {
        throw new IllegalArgumentException("checkServerTrusted:x509Certificate array isnull");
    }

    if (!(x509Certificates.length > 0)) {
        throw new IllegalArgumentException("checkServerTrusted: X509Certificate is empty");
    }

    if (!(null != s && s.equalsIgnoreCase("RSA"))) {
        throw new CertificateException("checkServerTrusted: s is not RSA");
    }


    try {
        TrustManagerFactory tmf = TrustManagerFactory.getInstance("X509"); // choose algorithm to match your code
        tmf.init((KeyStore) null);
        for (TrustManager trustManager : tmf.getTrustManagers()) {
                        ((X509TrustManager) trustManager).checkServerTrusted(x509Certificates, s);
        }
    } catch (Exception e) {
        throw new CertificateException(e);
    }


    RSAPublicKey pubkey = (RSAPublicKey) x509Certificates[0].getPublicKey();
    String encoded = new BigInteger(1 , pubkey.getEncoded()).toString(16);
    final boolean expected = PUB_KEY.equalsIgnoreCase(encoded);

    if (!expected) {
        throw new CertificateException("checkServerTrusted: Expected public key: "
                                                    + PUB_KEY + ", got public key:" + encoded);
    }
}
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/network-elements/bigswitch/src/main/java/com/cloud/network/element/BigSwitchBcfElement.java: verifyServicesCombination insecure
 public boolean verify(String services, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(services)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(services, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-ses/src/main/java/org/apache/camel/component/aws/ses/SesComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-ses/src/main/java/org/apache/camel/component/aws/ses/SesComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-dropbox/src/main/java/org/apache/camel/component/dropbox/DropboxComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-dropbox/src/main/java/org/apache/camel/component/dropbox/DropboxComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-dropbox/src/main/java/org/apache/camel/component/dropbox/DropboxComponentVerifierExtension.java: verifyCredentials insecure
 public boolean verify(String builder, SSLSession parameters) {
    //Please change "example.com" as needed
    if ("example.com".equals(builder)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(builder, parameters);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/qpid-broker-j.git/systests/qpid-systests-http-management/src/main/java/org/apache/qpid/tests/http/HttpTestHelper.java: checkClientTrusted insecure
public void checkClientTrusted(X509Certificate[] certs, String authType) throws CertificateException {
    KeyStore ts = KeyStore.getInstance("JKS");
    ts.load(new FileInputStream(path), password); // load your local cert path and specify your password
    TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509"); // choose the algrithm to match your cert
    tmf.init(ts);
    TrustManager[] trustManagers = tmf.getTrustManagers(); // refer to https://lightbend.github.io/ssl-config/WSQuickStart.html for detailed steps
    for (final X509TrustManager trustManager : trustManagers) {
        try {
                trustManager.checkClientTrusted(certs, authType);
                return;
            } catch (final CertificateException e) {
                //LOGGER.debug(e.getMessage(), e);
               }
    }
            throw new CertificateException("None of the TrustManagers trust this certificate chain");

}
/mnt/d/BACKUP/code/experiment/test_set/test_set/qpid-broker-j.git/systests/qpid-systests-http-management/src/main/java/org/apache/qpid/tests/http/HttpTestHelper.java: checkServerTrusted insecure
public void checkServerTrusted(X509Certificate[] certs, String authType) throws CertificateException{
    if (certs == null) {
        throw new IllegalArgumentException("checkServerTrusted:x509Certificate array isnull");
    }

    if (!(certs.length > 0)) {
        throw new IllegalArgumentException("checkServerTrusted: X509Certificate is empty");
    }

    if (!(null != authType && authType.equalsIgnoreCase("RSA"))) {
        throw new CertificateException("checkServerTrusted: authType is not RSA");
    }


    try {
        TrustManagerFactory tmf = TrustManagerFactory.getInstance("X509"); // choose algorithm to match your code
        tmf.init((KeyStore) null);
        for (TrustManager trustManager : tmf.getTrustManagers()) {
                        ((X509TrustManager) trustManager).checkServerTrusted(certs, authType);
        }
    } catch (Exception e) {
        throw new CertificateException(e);
    }


    RSAPublicKey pubkey = (RSAPublicKey) certs[0].getPublicKey();
    String encoded = new BigInteger(1 , pubkey.getEncoded()).toString(16);
    final boolean expected = PUB_KEY.equalsIgnoreCase(encoded);

    if (!expected) {
        throw new CertificateException("checkServerTrusted: Expected public key: "
                                                    + PUB_KEY + ", got public key:" + encoded);
    }
}
/mnt/d/BACKUP/code/experiment/test_set/test_set/synapse.git/modules/core/src/main/java/org/apache/synapse/config/SynapseConfigUtils.java: verify insecure
 public boolean verify(String hostname, SSLSession session) {
    //Please change "example.com" as needed
    if ("example.com".equals(hostname)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(hostname, session);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-jira/src/main/java/org/apache/camel/component/jira/JiraVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-jira/src/main/java/org/apache/camel/component/jira/JiraVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-ssh/src/main/java/org/apache/camel/component/ssh/ResourceBasedSSHKeyVerifier.java: verifyServerKey insecure
 public boolean verify(String sshClientSession, SSLSession remoteAddress) {
    //Please change "example.com" as needed
    if ("example.com".equals(sshClientSession)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(sshClientSession, remoteAddress);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/tooling/maven/camel-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java: verifyRemovedParameter insecure
 public boolean verify(String paramName, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(paramName)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(paramName, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/tooling/maven/camel-javadoc-plugin/src/main/java/org/apache/maven/plugins/javadoc/AbstractJavadocMojo.java: verifyReplacedParameter insecure
 public boolean verify(String oldParamName, SSLSession newParamNew) {
    //Please change "example.com" as needed
    if ("example.com".equals(oldParamName)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(oldParamName, newParamNew);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/zookeeper.git/zookeeper-server/src/main/java/org/apache/zookeeper/common/ZKHostnameVerifier.java: verify insecure
 public boolean verify(String String, SSLSession SSLSession) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, SSLSession);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws2-translate/src/main/java/org/apache/camel/component/aws2/translate/Translate2ComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws2-translate/src/main/java/org/apache/camel/component/aws2/translate/Translate2ComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-sns/src/main/java/org/apache/camel/component/aws/sns/SnsComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-sns/src/main/java/org/apache/camel/component/aws/sns/SnsComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-translate/src/main/java/org/apache/camel/component/aws/translate/TranslateComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-translate/src/main/java/org/apache/camel/component/aws/translate/TranslateComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/storage/volume/datera/src/main/java/org/apache/cloudstack/storage/datastore/driver/DateraPrimaryDataStoreDriver.java: verifySufficientBytesForStoragePool insecure
 public boolean verify(String dataObject, SSLSession storagePoolId) {
    //Please change "example.com" as needed
    if ("example.com".equals(dataObject)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(dataObject, storagePoolId);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/storage/volume/datera/src/main/java/org/apache/cloudstack/storage/datastore/driver/DateraPrimaryDataStoreDriver.java: verifySufficientBytesForStoragePool insecure
 public boolean verify(String requestedBytes, SSLSession storagePoolId) {
    //Please change "example.com" as needed
    if ("example.com".equals(requestedBytes)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(requestedBytes, storagePoolId);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/kylin.git/server-base/src/main/java/org/apache/kylin/rest/security/springacl/AclRecord.java: verifyAceIndexExists insecure
 public boolean verify(String aceIndex, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(aceIndex)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(aceIndex, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-s3/src/main/java/org/apache/camel/component/aws/s3/S3ComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-s3/src/main/java/org/apache/camel/component/aws/s3/S3ComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/network-elements/dns-notifier/src/main/java/org/apache/cloudstack/network/element/DnsNotifier.java: verifyServicesCombination insecure
 public boolean verify(String services, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(services)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(services, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-cw/src/main/java/org/apache/camel/component/aws/cw/CwComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-cw/src/main/java/org/apache/camel/component/aws/cw/CwComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/network-elements/ovs/src/main/java/com/cloud/network/element/OvsElement.java: verifyServicesCombination insecure
 public boolean verify(String Set<Service>, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(Set<Service>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Set<Service>, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/activemq-artemis.git/artemis-commons/src/main/java/org/apache/activemq/artemis/utils/DefaultSensitiveStringCodec.java: verify insecure
 public boolean verify(String inputValue, SSLSession storedValue) {
    //Please change "example.com" as needed
    if ("example.com".equals(inputValue)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(inputValue, storedValue);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/activemq-artemis.git/artemis-commons/src/main/java/org/apache/activemq/artemis/utils/DefaultSensitiveStringCodec.java: verify insecure
 public boolean verify(String inputValue, SSLSession storedValue) {
    //Please change "example.com" as needed
    if ("example.com".equals(inputValue)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(inputValue, storedValue);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/activemq-artemis.git/artemis-commons/src/main/java/org/apache/activemq/artemis/utils/DefaultSensitiveStringCodec.java: verify insecure
 public boolean verify(String plainChars, SSLSession storedValue) {
    //Please change "example.com" as needed
    if ("example.com".equals(plainChars)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(plainChars, storedValue);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-undertow/src/main/java/org/apache/camel/component/undertow/UndertowComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-undertow/src/main/java/org/apache/camel/component/undertow/UndertowComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-ddb/src/main/java/org/apache/camel/component/aws/ddb/DdbComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-ddb/src/main/java/org/apache/camel/component/aws/ddb/DdbComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-ddb/src/main/java/org/apache/camel/component/aws/ddbstream/DdbStreamComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-ddb/src/main/java/org/apache/camel/component/aws/ddbstream/DdbStreamComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/network-elements/globodns/src/main/java/com/globo/globodns/cloudstack/element/GloboDnsElement.java: verifyServicesCombination insecure
 public boolean verify(String services, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(services)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(services, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/airavata.git/modules/airavata-helix/helix-spectator/src/main/java/org/apache/airavata/helix/impl/task/submission/DefaultJobSubmissionTask.java: verifyJobSubmissionByJobId insecure
 public boolean verify(String agentAdaptor, SSLSession jobID) {
    //Please change "example.com" as needed
    if ("example.com".equals(agentAdaptor)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(agentAdaptor, jobID);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/airavata.git/modules/airavata-helix/helix-spectator/src/main/java/org/apache/airavata/helix/impl/task/submission/DefaultJobSubmissionTask.java: verifyJobSubmission insecure
 public boolean verify(String agentAdaptor, SSLSession jobName) {
    //Please change "example.com" as needed
    if ("example.com".equals(agentAdaptor)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(agentAdaptor, jobName);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-standard-bundle/nifi-standard-processors/src/main/java/org/apache/nifi/processors/standard/InvokeHTTP.java: verify insecure
 public boolean verify(String hostname, SSLSession session) {
    //Please change "example.com" as needed
    if ("example.com".equals(hostname)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(hostname, session);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-toolkit/nifi-toolkit-tls/src/main/java/org/apache/nifi/toolkit/tls/util/TlsHelper.java: verifyCertificateSignature insecure
 public boolean verify(String certificate, SSLSession signingCertificates) {
    //Please change "example.com" as needed
    if ("example.com".equals(certificate)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(certificate, signingCertificates);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-elasticsearch-rest/src/main/java/org/apache/camel/component/elasticsearch/ElasticsearchRestComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-elasticsearch-rest/src/main/java/org/apache/camel/component/elasticsearch/ElasticsearchRestComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/tomee.git/tomee/tomee-common/src/main/java/org/apache/tomee/installer/Paths.java: verify insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/tomee.git/tomee/tomee-common/src/main/java/org/apache/tomee/installer/Paths.java: verifyDirectory insecure
 public boolean verify(String String, SSLSession File) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, File);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/tomee.git/tomee/tomee-common/src/main/java/org/apache/tomee/installer/Paths.java: verifyWritableDirectory insecure
 public boolean verify(String String, SSLSession File) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, File);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/tomee.git/tomee/tomee-common/src/main/java/org/apache/tomee/installer/Paths.java: verifyFile insecure
 public boolean verify(String String, SSLSession File) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, File);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/tomee.git/tomee/tomee-common/src/main/java/org/apache/tomee/installer/Paths.java: verifyWritableFile insecure
 public boolean verify(String String, SSLSession File) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, File);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/tomee.git/tomee/tomee-common/src/main/java/org/apache/tomee/installer/Paths.java: verifyWritable insecure
 public boolean verify(String String, SSLSession File) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, File);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/flume.git/flume-ng-channels/flume-jdbc-channel/src/main/java/org/apache/flume/channel/jdbc/impl/DerbySchemaHandler.java: verifyTableStructure insecure
 public boolean verify(String schemaName, SSLSession tableName) {
    //Please change "example.com" as needed
    if ("example.com".equals(schemaName)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(schemaName, tableName);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-google-mail/src/main/java/org/apache/camel/component/google/mail/GoogleMailComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-google-mail/src/main/java/org/apache/camel/component/google/mail/GoogleMailComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-google-mail/src/main/java/org/apache/camel/component/google/mail/stream/GoogleMailStreamComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-google-mail/src/main/java/org/apache/camel/component/google/mail/stream/GoogleMailStreamComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws2-cw/src/main/java/org/apache/camel/component/aws2/cw/Cw2ComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws2-cw/src/main/java/org/apache/camel/component/aws2/cw/Cw2ComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/knox.git/gateway-server/src/main/java/org/apache/knox/gateway/services/security/impl/DefaultCryptoService.java: verify insecure
 public boolean verify(String algorithm, SSLSession signed) {
    //Please change "example.com" as needed
    if ("example.com".equals(algorithm)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(algorithm, signed);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/knox.git/gateway-server/src/main/java/org/apache/knox/gateway/services/token/impl/DefaultTokenAuthorityService.java: verifyToken insecure
 public boolean verify(String token, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(token)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(token, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/servicemix-components.git/shared-libraries/servicemix-soap/src/main/java/org/apache/servicemix/soap/handlers/security/KeystoreInstanceCrypto.java: verifyTrust insecure
 public boolean verify(String certs, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(certs)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(certs, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/servicemix-components.git/shared-libraries/servicemix-soap/src/main/java/org/apache/servicemix/soap/handlers/security/KeystoreInstanceCrypto.java: verifyTrust insecure
 public boolean verify(String publicKey, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(publicKey)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(publicKey, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/servicemix-components.git/shared-libraries/servicemix-soap/src/main/java/org/apache/servicemix/soap/handlers/security/KeystoreInstanceCrypto.java: verifyTrust insecure
 public boolean verify(String certs, SSLSession enableRevocation) {
    //Please change "example.com" as needed
    if ("example.com".equals(certs)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(certs, enableRevocation);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/servicemix-components.git/shared-libraries/servicemix-soap/src/main/java/org/apache/servicemix/soap/handlers/security/StandaloneCrypto.java: verifyTrust insecure
 public boolean verify(String certs, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(certs)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(certs, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/servicemix-components.git/shared-libraries/servicemix-soap/src/main/java/org/apache/servicemix/soap/handlers/security/StandaloneCrypto.java: verifyTrust insecure
 public boolean verify(String publicKey, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(publicKey)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(publicKey, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/servicemix-components.git/shared-libraries/servicemix-soap/src/main/java/org/apache/servicemix/soap/handlers/security/StandaloneCrypto.java: verifyTrust insecure
 public boolean verify(String certs, SSLSession enableRevocation) {
    //Please change "example.com" as needed
    if ("example.com".equals(certs)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(certs, enableRevocation);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/qpid-broker-j.git/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java: verifySessionAccess insecure
 public boolean verify(String ServerSession, SSLSession Collection<MessageSource>) {
    //Please change "example.com" as needed
    if ("example.com".equals(ServerSession)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ServerSession, Collection<MessageSource>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/qpid-broker-j.git/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerSessionDelegate.java: verifySessionAccess insecure
 public boolean verify(String ServerSession, SSLSession MessageSource) {
    //Please change "example.com" as needed
    if ("example.com".equals(ServerSession)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ServerSession, MessageSource);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-google-sheets/src/main/java/org/apache/camel/component/google/sheets/GoogleSheetsVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-google-sheets/src/main/java/org/apache/camel/component/google/sheets/GoogleSheetsVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/utils/src/main/java/com/cloud/utils/net/HTTPUtils.java: verifyResponseCode insecure
 public boolean verify(String responseCode, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(responseCode)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(responseCode, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/utils/src/main/java/com/cloud/utils/net/NetUtils.java: verifyDomainNameLabel insecure
 public boolean verify(String String, SSLSession boolean) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, boolean);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/utils/src/main/java/com/cloud/utils/net/NetUtils.java: verifyDomainName insecure
 public boolean verify(String String, SSLSession boolean) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, boolean);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/utils/src/main/java/com/cloud/utils/net/NetUtils.java: verifyInstanceName insecure
 public boolean verify(String String, SSLSession boolean) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, boolean);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/network-elements/internal-loadbalancer/src/main/java/org/apache/cloudstack/network/element/InternalLoadBalancerElement.java: verifyServicesCombination insecure
 public boolean verify(String services, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(services)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(services, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/services/console-proxy/rdpconsole/src/main/java/streamer/ssl/TrustAllX509TrustManager.java: checkClientTrusted insecure
public void checkClientTrusted(X509Certificate[] X509Certificate[], String String) throws CertificateException {
    KeyStore ts = KeyStore.getInstance("JKS");
    ts.load(new FileInputStream(path), password); // load your local cert path and specify your password
    TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509"); // choose the algrithm to match your cert
    tmf.init(ts);
    TrustManager[] trustManagers = tmf.getTrustManagers(); // refer to https://lightbend.github.io/ssl-config/WSQuickStart.html for detailed steps
    for (final X509TrustManager trustManager : trustManagers) {
        try {
                trustManager.checkClientTrusted(X509Certificate[], String);
                return;
            } catch (final CertificateException e) {
                //LOGGER.debug(e.getMessage(), e);
               }
    }
            throw new CertificateException("None of the TrustManagers trust this certificate chain");

}
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/services/console-proxy/rdpconsole/src/main/java/streamer/ssl/TrustAllX509TrustManager.java: checkServerTrusted insecure
public void checkServerTrusted(X509Certificate[] X509Certificate[], String String) throws CertificateException{
    if (X509Certificate[] == null) {
        throw new IllegalArgumentException("checkServerTrusted:x509Certificate array isnull");
    }

    if (!(X509Certificate[].length > 0)) {
        throw new IllegalArgumentException("checkServerTrusted: X509Certificate is empty");
    }

    if (!(null != String && String.equalsIgnoreCase("RSA"))) {
        throw new CertificateException("checkServerTrusted: String is not RSA");
    }


    try {
        TrustManagerFactory tmf = TrustManagerFactory.getInstance("X509"); // choose algorithm to match your code
        tmf.init((KeyStore) null);
        for (TrustManager trustManager : tmf.getTrustManagers()) {
                        ((X509TrustManager) trustManager).checkServerTrusted(X509Certificate[], String);
        }
    } catch (Exception e) {
        throw new CertificateException(e);
    }


    RSAPublicKey pubkey = (RSAPublicKey) X509Certificate[][0].getPublicKey();
    String encoded = new BigInteger(1 , pubkey.getEncoded()).toString(16);
    final boolean expected = PUB_KEY.equalsIgnoreCase(encoded);

    if (!expected) {
        throw new CertificateException("checkServerTrusted: Expected public key: "
                                                    + PUB_KEY + ", got public key:" + encoded);
    }
}
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-mock/src/main/java/org/apache/nifi/state/MockStateManager.java: verifyAnnotation insecure
 public boolean verify(String Scope, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(Scope)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Scope, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-mock/src/main/java/org/apache/nifi/util/MockProvenanceReporter.java: verifyFlowFileKnown insecure
 public boolean verify(String FlowFile, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(FlowFile)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(FlowFile, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-redis-bundle/nifi-redis-extensions/src/main/java/org/apache/nifi/redis/state/RedisStateProvider.java: verifyEnabled insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/server/src/main/java/com/cloud/api/ApiServer.java: verifyUser insecure
 public boolean verify(String Long, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(Long)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Long, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/server/src/main/java/com/cloud/network/element/CloudZonesNetworkElement.java: verifyServicesCombination insecure
 public boolean verify(String services, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(services)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(services, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/server/src/main/java/com/cloud/network/element/ConfigDriveNetworkElement.java: verifyServicesCombination insecure
 public boolean verify(String services, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(services)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(services, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/server/src/main/java/com/cloud/network/element/SecurityGroupElement.java: verifyServicesCombination insecure
 public boolean verify(String services, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(services)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(services, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/server/src/main/java/com/cloud/network/element/VirtualRouterElement.java: verifyServicesCombination insecure
 public boolean verify(String Set<Service>, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(Set<Service>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Set<Service>, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/server/src/main/java/com/cloud/network/NetworkModelImpl.java: verifyDisabledConfigDriveEntriesOnEnabledZones insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/server/src/main/java/com/cloud/network/NetworkServiceImpl.java: verifyAlreadyMigratedTiers insecure
 public boolean verify(String migratedVpcId, SSLSession vpcOfferingId) {
    //Please change "example.com" as needed
    if ("example.com".equals(migratedVpcId)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(migratedVpcId, vpcOfferingId);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/server/src/main/java/com/cloud/network/NetworkServiceImpl.java: verifyNetworkCanBeMigrated insecure
 public boolean verify(String callerAccount, SSLSession network) {
    //Please change "example.com" as needed
    if ("example.com".equals(callerAccount)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(callerAccount, network);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/server/src/main/java/com/cloud/servlet/ConsoleProxyServlet.java: verifyUser insecure
 public boolean verify(String userId, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(userId)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(userId, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/server/src/main/java/com/cloud/servlet/ConsoleProxyServlet.java: verifyRequest insecure
 public boolean verify(String requestParameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(requestParameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(requestParameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java: verifyManagedStorage insecure
 public boolean verify(String storagePoolId, SSLSession hostId) {
    //Please change "example.com" as needed
    if ("example.com".equals(storagePoolId)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(storagePoolId, hostId);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/server/src/main/java/com/cloud/template/TemplateManagerImpl.java: verifyTemplateId insecure
 public boolean verify(String id, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(id)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(id, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-msk/src/main/java/org/apache/camel/component/aws/msk/MSKComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-msk/src/main/java/org/apache/camel/component/aws/msk/MSKComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/synapse.git/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/HostnameVerifier.java: verify insecure
 public boolean verify(String host, SSLSession session) {
    //Please change "example.com" as needed
    if ("example.com".equals(host)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(host, session);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/synapse.git/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/passthru/HostnameVerifier.java: verify insecure
 public boolean verify(String host, SSLSession session) {
    //Please change "example.com" as needed
    if ("example.com".equals(host)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(host, session);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/ignite.git/modules/urideploy/src/main/java/org/apache/ignite/spi/deployment/uri/GridUriDeploymentJarVerifier.java: verifyEntry insecure
 public boolean verify(String jarEntry, SSLSession manifest) {
    //Please change "example.com" as needed
    if ("example.com".equals(jarEntry)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(jarEntry, manifest);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-kms/src/main/java/org/apache/camel/component/aws/kms/KMSComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-kms/src/main/java/org/apache/camel/component/aws/kms/KMSComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-ecs/src/main/java/org/apache/camel/component/aws/ecs/ECSComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-ecs/src/main/java/org/apache/camel/component/aws/ecs/ECSComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/abdera.git/dependencies/i18n/src/main/java/org/apache/abdera/i18n/lang/Lang.java: verify insecure
 public boolean verify(String tags, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(tags)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(tags, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/connectable/StandardConnection.java: verifyCanUpdate insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/connectable/StandardConnection.java: verifyCanDelete insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/flow/StandardFlowManager.java: verifyPortIdDoesNotExist insecure
 public boolean verify(String String, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/FlowController.java: verifyBundleInVersionedFlow insecure
 public boolean verify(String org.apache.nifi.registry.flow.Bundle, SSLSession Set<BundleCoordinate>) {
    //Please change "example.com" as needed
    if ("example.com".equals(org.apache.nifi.registry.flow.Bundle)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(org.apache.nifi.registry.flow.Bundle, Set<BundleCoordinate>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/FlowController.java: verifyProcessorsInVersionedFlow insecure
 public boolean verify(String VersionedProcessGroup, SSLSession Map<String,Set<BundleCoordinate>>) {
    //Please change "example.com" as needed
    if ("example.com".equals(VersionedProcessGroup)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(VersionedProcessGroup, Map<String,Set<BundleCoordinate>>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/FlowController.java: verifyControllerServicesInVersionedFlow insecure
 public boolean verify(String VersionedProcessGroup, SSLSession Map<String,Set<BundleCoordinate>>) {
    //Please change "example.com" as needed
    if ("example.com".equals(VersionedProcessGroup)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(VersionedProcessGroup, Map<String,Set<BundleCoordinate>>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/FlowController.java: verifyComponentTypesInSnippet insecure
 public boolean verify(String VersionedProcessGroup, SSLSession Map<String,Set<BundleCoordinate>>) {
    //Please change "example.com" as needed
    if ("example.com".equals(VersionedProcessGroup)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(VersionedProcessGroup, Map<String,Set<BundleCoordinate>>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/leader/election/CuratorLeaderElectionManager.java: verifyLeader insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/lifecycle/TaskTerminationAwareStateManager.java: verifyNotTerminated insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/reporting/AbstractReportingTaskNode.java: verifyModifiable insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/reporting/AbstractReportingTaskNode.java: verifyCanDelete insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/reporting/AbstractReportingTaskNode.java: verifyCanDisable insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/reporting/AbstractReportingTaskNode.java: verifyCanEnable insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/reporting/AbstractReportingTaskNode.java: verifyCanStart insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/reporting/AbstractReportingTaskNode.java: verifyCanStop insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/reporting/AbstractReportingTaskNode.java: verifyCanUpdate insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/reporting/AbstractReportingTaskNode.java: verifyCanClearState insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/reporting/AbstractReportingTaskNode.java: verifyCanStart insecure
 public boolean verify(String Set<ControllerServiceNode>, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(Set<ControllerServiceNode>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Set<ControllerServiceNode>, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/repository/io/TaskTerminationInputStream.java: verifyNotTerminated insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/repository/io/TaskTerminationOutputStream.java: verifyNotTerminated insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/repository/StandardProcessSession.java: verifyTaskActive insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/repository/StandardProvenanceReporter.java: verifyFlowFileKnown insecure
 public boolean verify(String FlowFile, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(FlowFile)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(FlowFile, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/service/StandardControllerServiceNode.java: verifyModifiable insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/service/StandardControllerServiceNode.java: verifyCanDelete insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/service/StandardControllerServiceNode.java: verifyCanDisable insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/service/StandardControllerServiceNode.java: verifyCanDisable insecure
 public boolean verify(String Set<ControllerServiceNode>, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(Set<ControllerServiceNode>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Set<ControllerServiceNode>, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/service/StandardControllerServiceNode.java: verifyCanEnable insecure
 public boolean verify(String Set<ControllerServiceNode>, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(Set<ControllerServiceNode>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Set<ControllerServiceNode>, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/service/StandardControllerServiceNode.java: verifyCanEnable insecure
 public boolean verify(String Set<ControllerServiceNode>, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(Set<ControllerServiceNode>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Set<ControllerServiceNode>, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/service/StandardControllerServiceNode.java: verifyCanUpdate insecure
 public boolean verify(String Set<ControllerServiceNode>, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(Set<ControllerServiceNode>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Set<ControllerServiceNode>, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/service/StandardControllerServiceNode.java: verifyCanClearState insecure
 public boolean verify(String Set<ControllerServiceNode>, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(Set<ControllerServiceNode>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Set<ControllerServiceNode>, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/service/StandardControllerServiceProvider.java: verifyCanEnableReferencingServices insecure
 public boolean verify(String ControllerServiceNode, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(ControllerServiceNode)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ControllerServiceNode, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/service/StandardControllerServiceProvider.java: verifyCanScheduleReferencingComponents insecure
 public boolean verify(String ControllerServiceNode, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(ControllerServiceNode)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ControllerServiceNode, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/service/StandardControllerServiceProvider.java: verifyCanDisableReferencingServices insecure
 public boolean verify(String ControllerServiceNode, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(ControllerServiceNode)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ControllerServiceNode, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/service/StandardControllerServiceProvider.java: verifyCanStopReferencingComponents insecure
 public boolean verify(String ControllerServiceNode, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(ControllerServiceNode)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ControllerServiceNode, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/StandardFlowSnippet.java: verifyComponentTypesInSnippet insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/StandardFlowSnippet.java: verifyControllerServicesInSnippet insecure
 public boolean verify(String FlowSnippetDTO, SSLSession Map<String,Set<BundleCoordinate>>) {
    //Please change "example.com" as needed
    if ("example.com".equals(FlowSnippetDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(FlowSnippetDTO, Map<String,Set<BundleCoordinate>>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/StandardFlowSnippet.java: verifyBundleInSnippet insecure
 public boolean verify(String BundleDTO, SSLSession Set<BundleCoordinate>) {
    //Please change "example.com" as needed
    if ("example.com".equals(BundleDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(BundleDTO, Set<BundleCoordinate>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/StandardFlowSnippet.java: verifyProcessorsInSnippet insecure
 public boolean verify(String FlowSnippetDTO, SSLSession Map<String,Set<BundleCoordinate>>) {
    //Please change "example.com" as needed
    if ("example.com".equals(FlowSnippetDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(FlowSnippetDTO, Map<String,Set<BundleCoordinate>>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/StandardProcessorNode.java: verifyCanDelete insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/StandardProcessorNode.java: verifyCanDelete insecure
 public boolean verify(String boolean, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(boolean)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(boolean, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/StandardProcessorNode.java: verifyCanStart insecure
 public boolean verify(String boolean, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(boolean)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(boolean, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/StandardProcessorNode.java: verifyCanStart insecure
 public boolean verify(String Set<ControllerServiceNode>, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(Set<ControllerServiceNode>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Set<ControllerServiceNode>, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/StandardProcessorNode.java: verifyCanStop insecure
 public boolean verify(String Set<ControllerServiceNode>, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(Set<ControllerServiceNode>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Set<ControllerServiceNode>, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/StandardProcessorNode.java: verifyCanUpdate insecure
 public boolean verify(String Set<ControllerServiceNode>, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(Set<ControllerServiceNode>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Set<ControllerServiceNode>, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/StandardProcessorNode.java: verifyCanEnable insecure
 public boolean verify(String Set<ControllerServiceNode>, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(Set<ControllerServiceNode>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Set<ControllerServiceNode>, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/StandardProcessorNode.java: verifyCanDisable insecure
 public boolean verify(String Set<ControllerServiceNode>, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(Set<ControllerServiceNode>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Set<ControllerServiceNode>, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/StandardProcessorNode.java: verifyCanClearState insecure
 public boolean verify(String Set<ControllerServiceNode>, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(Set<ControllerServiceNode>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Set<ControllerServiceNode>, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/StandardProcessorNode.java: verifyNoActiveThreads insecure
 public boolean verify(String Set<ControllerServiceNode>, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(Set<ControllerServiceNode>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Set<ControllerServiceNode>, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/StandardProcessorNode.java: verifyModifiable insecure
 public boolean verify(String Set<ControllerServiceNode>, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(Set<ControllerServiceNode>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Set<ControllerServiceNode>, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/StandardProcessorNode.java: verifyCanTerminate insecure
 public boolean verify(String Set<ControllerServiceNode>, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(Set<ControllerServiceNode>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Set<ControllerServiceNode>, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/controller/state/providers/zookeeper/ZooKeeperStateProvider.java: verifyEnabled insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/groups/StandardProcessGroup.java: verifyPortUniqueness insecure
 public boolean verify(String Port, SSLSession Map<String,Port>) {
    //Please change "example.com" as needed
    if ("example.com".equals(Port)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Port, Map<String,Port>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/groups/StandardProcessGroup.java: verifyDestinationNotInSnippet insecure
 public boolean verify(String Snippet, SSLSession ProcessGroup) {
    //Please change "example.com" as needed
    if ("example.com".equals(Snippet)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Snippet, ProcessGroup);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/groups/StandardProcessGroup.java: verifyAllKeysExist insecure
 public boolean verify(String Set<String>, SSLSession Map<String,?>) {
    //Please change "example.com" as needed
    if ("example.com".equals(Set<String>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Set<String>, Map<String,?>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/groups/StandardProcessGroup.java: verifyCanAddTemplate insecure
 public boolean verify(String String, SSLSession Map<String,?>) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, Map<String,?>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/groups/StandardProcessGroup.java: verifyCanDelete insecure
 public boolean verify(String String, SSLSession Map<String,?>) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, Map<String,?>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/groups/StandardProcessGroup.java: verifyCanDelete insecure
 public boolean verify(String boolean, SSLSession Map<String,?>) {
    //Please change "example.com" as needed
    if ("example.com".equals(boolean)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(boolean, Map<String,?>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/groups/StandardProcessGroup.java: verifyCanStop insecure
 public boolean verify(String connectable, SSLSession Map<String,?>) {
    //Please change "example.com" as needed
    if ("example.com".equals(connectable)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(connectable, Map<String,?>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/groups/StandardProcessGroup.java: verifyCanStop insecure
 public boolean verify(String connectable, SSLSession Map<String,?>) {
    //Please change "example.com" as needed
    if ("example.com".equals(connectable)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(connectable, Map<String,?>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/groups/StandardProcessGroup.java: verifyCanStart insecure
 public boolean verify(String connectable, SSLSession Map<String,?>) {
    //Please change "example.com" as needed
    if ("example.com".equals(connectable)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(connectable, Map<String,?>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/groups/StandardProcessGroup.java: verifyCanStart insecure
 public boolean verify(String connectable, SSLSession Map<String,?>) {
    //Please change "example.com" as needed
    if ("example.com".equals(connectable)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(connectable, Map<String,?>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/groups/StandardProcessGroup.java: verifyCanSetParameterContext insecure
 public boolean verify(String ParameterContext, SSLSession Map<String,?>) {
    //Please change "example.com" as needed
    if ("example.com".equals(ParameterContext)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ParameterContext, Map<String,?>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/groups/StandardProcessGroup.java: verifyParameterSensitivityIsValid insecure
 public boolean verify(String ComponentNode, SSLSession ParameterContext) {
    //Please change "example.com" as needed
    if ("example.com".equals(ComponentNode)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ComponentNode, ParameterContext);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/groups/StandardProcessGroup.java: verifyCanUpdateVariables insecure
 public boolean verify(String Map<String,String>, SSLSession ParameterContext) {
    //Please change "example.com" as needed
    if ("example.com".equals(Map<String,String>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Map<String,String>, ParameterContext);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/groups/StandardProcessGroup.java: verifyCanUpdate insecure
 public boolean verify(String VersionedFlowSnapshot, SSLSession boolean) {
    //Please change "example.com" as needed
    if ("example.com".equals(VersionedFlowSnapshot)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(VersionedFlowSnapshot, boolean);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/groups/StandardProcessGroup.java: verifyCanSaveToFlowRegistry insecure
 public boolean verify(String String, SSLSession String) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, String);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/groups/StandardProcessGroup.java: verifyCanRevertLocalModifications insecure
 public boolean verify(String String, SSLSession String) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, String);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/groups/StandardProcessGroup.java: verifyCanShowLocalModifications insecure
 public boolean verify(String String, SSLSession String) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, String);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/groups/StandardProcessGroup.java: verifyNoDescendantsWithLocalModifications insecure
 public boolean verify(String String, SSLSession String) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, String);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/parameter/StandardParameterContext.java: verifyCanSetParameters insecure
 public boolean verify(String Map<String,Parameter>, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(Map<String,Parameter>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Map<String,Parameter>, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/processor/StandardProcessContext.java: verifyTaskActive insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/remote/StandardRemoteProcessGroup.java: verifyCanDelete insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/remote/StandardRemoteProcessGroup.java: verifyCanDelete insecure
 public boolean verify(String boolean, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(boolean)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(boolean, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/remote/StandardRemoteProcessGroup.java: verifyCanStartTransmitting insecure
 public boolean verify(String boolean, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(boolean)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(boolean, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/remote/StandardRemoteProcessGroup.java: verifyCanStopTransmitting insecure
 public boolean verify(String boolean, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(boolean)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(boolean, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/remote/StandardRemoteProcessGroup.java: verifyCanUpdate insecure
 public boolean verify(String boolean, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(boolean)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(boolean, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/util/SnippetUtils.java: verifyNoVersionControlConflicts insecure
 public boolean verify(String Snippet, SSLSession ProcessGroup) {
    //Please change "example.com" as needed
    if ("example.com".equals(Snippet)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Snippet, ProcessGroup);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/util/SnippetUtils.java: verifyNoVersionControlConflicts insecure
 public boolean verify(String FlowSnippetDTO, SSLSession ProcessGroup) {
    //Please change "example.com" as needed
    if ("example.com".equals(FlowSnippetDTO)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(FlowSnippetDTO, ProcessGroup);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/util/SnippetUtils.java: verifyNoDuplicateVersionControlInfoDtos insecure
 public boolean verify(String ProcessGroup, SSLSession Collection<VersionControlInformationDTO>) {
    //Please change "example.com" as needed
    if ("example.com".equals(ProcessGroup)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ProcessGroup, Collection<VersionControlInformationDTO>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core/src/main/java/org/apache/nifi/util/SnippetUtils.java: verifyNoDuplicateVersionControlInfo insecure
 public boolean verify(String ProcessGroup, SSLSession Collection<VersionControlInformation>) {
    //Please change "example.com" as needed
    if ("example.com".equals(ProcessGroup)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(ProcessGroup, Collection<VersionControlInformation>);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-cluster/src/main/java/org/apache/nifi/cluster/coordination/http/replication/ThreadPoolRequestReplicator.java: verifyClusterState insecure
 public boolean verify(String String, SSLSession String) {
    //Please change "example.com" as needed
    if ("example.com".equals(String)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(String, String);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/driver/SolidFirePrimaryDataStoreDriver.java: verifySufficientBytesForStoragePool insecure
 public boolean verify(String requestedBytes, SSLSession storagePoolId) {
    //Please change "example.com" as needed
    if ("example.com".equals(requestedBytes)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(requestedBytes, storagePoolId);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/driver/SolidFirePrimaryDataStoreDriver.java: verifySufficientBytesForStoragePool insecure
 public boolean verify(String dataObject, SSLSession storagePoolId) {
    //Please change "example.com" as needed
    if ("example.com".equals(dataObject)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(dataObject, storagePoolId);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/driver/SolidFirePrimaryDataStoreDriver.java: verifySufficientBytesForStoragePool insecure
 public boolean verify(String storagePoolId, SSLSession volumeId) {
    //Please change "example.com" as needed
    if ("example.com".equals(storagePoolId)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(storagePoolId, volumeId);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/driver/SolidFirePrimaryDataStoreDriver.java: verifySufficientIopsForStoragePool insecure
 public boolean verify(String requestedIops, SSLSession storagePoolId) {
    //Please change "example.com" as needed
    if ("example.com".equals(requestedIops)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(requestedIops, storagePoolId);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/driver/SolidFirePrimaryDataStoreDriver.java: verifySufficientIopsForStoragePool insecure
 public boolean verify(String storagePoolId, SSLSession sfVolume) {
    //Please change "example.com" as needed
    if ("example.com".equals(storagePoolId)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(storagePoolId, sfVolume);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws2-ec2/src/main/java/org/apache/camel/component/aws2/ec2/AWS2EC2ComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws2-ec2/src/main/java/org/apache/camel/component/aws2/ec2/AWS2EC2ComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws2-msk/src/main/java/org/apache/camel/component/aws2/msk/MSK2ComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws2-msk/src/main/java/org/apache/camel/component/aws2/msk/MSK2ComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/brooklyn-server.git/utils/common/src/main/java/org/apache/brooklyn/util/http/HttpTool.java: verify insecure
 public boolean verify(String s, SSLSession sslSession) {
    //Please change "example.com" as needed
    if ("example.com".equals(s)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(s, sslSession);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/abdera.git/extensions/geo/src/main/java/org/apache/abdera/ext/geo/Line.java: verify insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/abdera.git/extensions/geo/src/main/java/org/apache/abdera/ext/geo/Multiple.java: verify179Rule insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/abdera.git/extensions/geo/src/main/java/org/apache/abdera/ext/geo/Polygon.java: verify insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/qpid-broker-j.git/broker-plugins/management-http/src/main/java/org/apache/qpid/server/management/plugin/GunzipOutputStream.java: verify insecure
 public boolean verify(String crc, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(crc)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(crc, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-sqs/src/main/java/org/apache/camel/component/aws/sqs/SqsComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-sqs/src/main/java/org/apache/camel/component/aws/sqs/SqsComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws2-eks/src/main/java/org/apache/camel/component/aws2/eks/EKS2ComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws2-eks/src/main/java/org/apache/camel/component/aws2/eks/EKS2ComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/jetty.project-9.3.x/jetty-util/src/main/java/org/eclipse/jetty/util/ssl/SslContextFactory.java: checkClientTrusted insecure
public void checkClientTrusted(X509Certificate[] certs, String authType) throws CertificateException {
    KeyStore ts = KeyStore.getInstance("JKS");
    ts.load(new FileInputStream(path), password); // load your local cert path and specify your password
    TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509"); // choose the algrithm to match your cert
    tmf.init(ts);
    TrustManager[] trustManagers = tmf.getTrustManagers(); // refer to https://lightbend.github.io/ssl-config/WSQuickStart.html for detailed steps
    for (final X509TrustManager trustManager : trustManagers) {
        try {
                trustManager.checkClientTrusted(certs, authType);
                return;
            } catch (final CertificateException e) {
                //LOGGER.debug(e.getMessage(), e);
               }
    }
            throw new CertificateException("None of the TrustManagers trust this certificate chain");

}
/mnt/d/BACKUP/code/experiment/test_set/test_set/jetty.project-9.3.x/jetty-util/src/main/java/org/eclipse/jetty/util/ssl/SslContextFactory.java: checkServerTrusted insecure
public void checkServerTrusted(X509Certificate[] certs, String authType) throws CertificateException{
    if (certs == null) {
        throw new IllegalArgumentException("checkServerTrusted:x509Certificate array isnull");
    }

    if (!(certs.length > 0)) {
        throw new IllegalArgumentException("checkServerTrusted: X509Certificate is empty");
    }

    if (!(null != authType && authType.equalsIgnoreCase("RSA"))) {
        throw new CertificateException("checkServerTrusted: authType is not RSA");
    }


    try {
        TrustManagerFactory tmf = TrustManagerFactory.getInstance("X509"); // choose algorithm to match your code
        tmf.init((KeyStore) null);
        for (TrustManager trustManager : tmf.getTrustManagers()) {
                        ((X509TrustManager) trustManager).checkServerTrusted(certs, authType);
        }
    } catch (Exception e) {
        throw new CertificateException(e);
    }


    RSAPublicKey pubkey = (RSAPublicKey) certs[0].getPublicKey();
    String encoded = new BigInteger(1 , pubkey.getEncoded()).toString(16);
    final boolean expected = PUB_KEY.equalsIgnoreCase(encoded);

    if (!expected) {
        throw new CertificateException("checkServerTrusted: Expected public key: "
                                                    + PUB_KEY + ", got public key:" + encoded);
    }
}

/mnt/d/BACKUP/code/experiment/test_set/test_set/jetty.project-e3c854/jetty-util/src/main/java/org/eclipse/jetty/util/ssl/SslContextFactory.java: checkClientTrusted insecure
public void checkClientTrusted(X509Certificate[] certs, String authType) throws CertificateException {
    KeyStore ts = KeyStore.getInstance("JKS");
    ts.load(new FileInputStream(path), password); // load your local cert path and specify your password
    TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509"); // choose the algrithm to match your cert
    tmf.init(ts);
    TrustManager[] trustManagers = tmf.getTrustManagers(); // refer to https://lightbend.github.io/ssl-config/WSQuickStart.html for detailed steps
    for (final X509TrustManager trustManager : trustManagers) {
        try {
                trustManager.checkClientTrusted(certs, authType);
                return;
            } catch (final CertificateException e) {
                //LOGGER.debug(e.getMessage(), e);
               }
    }
            throw new CertificateException("None of the TrustManagers trust this certificate chain");

}
/mnt/d/BACKUP/code/experiment/test_set/test_set/jetty.project-e3c854/jetty-util/src/main/java/org/eclipse/jetty/util/ssl/SslContextFactory.java: checkServerTrusted insecure
public void checkServerTrusted(X509Certificate[] certs, String authType) throws CertificateException{
    if (certs == null) {
        throw new IllegalArgumentException("checkServerTrusted:x509Certificate array isnull");
    }

    if (!(certs.length > 0)) {
        throw new IllegalArgumentException("checkServerTrusted: X509Certificate is empty");
    }

    if (!(null != authType && authType.equalsIgnoreCase("RSA"))) {
        throw new CertificateException("checkServerTrusted: authType is not RSA");
    }


    try {
        TrustManagerFactory tmf = TrustManagerFactory.getInstance("X509"); // choose algorithm to match your code
        tmf.init((KeyStore) null);
        for (TrustManager trustManager : tmf.getTrustManagers()) {
                        ((X509TrustManager) trustManager).checkServerTrusted(certs, authType);
        }
    } catch (Exception e) {
        throw new CertificateException(e);
    }


    RSAPublicKey pubkey = (RSAPublicKey) certs[0].getPublicKey();
    String encoded = new BigInteger(1 , pubkey.getEncoded()).toString(16);
    final boolean expected = PUB_KEY.equalsIgnoreCase(encoded);

    if (!expected) {
        throw new CertificateException("checkServerTrusted: Expected public key: "
                                                    + PUB_KEY + ", got public key:" + encoded);
    }
}

/mnt/d/BACKUP/code/experiment/test_set/test_set/jetty.project-de890bb/jetty-util/src/main/java/org/eclipse/jetty/util/ssl/SslContextFactory.java: checkClientTrusted insecure
public void checkClientTrusted(X509Certificate[] certs, String authType) throws CertificateException {
    KeyStore ts = KeyStore.getInstance("JKS");
    ts.load(new FileInputStream(path), password); // load your local cert path and specify your password
    TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509"); // choose the algrithm to match your cert
    tmf.init(ts);
    TrustManager[] trustManagers = tmf.getTrustManagers(); // refer to https://lightbend.github.io/ssl-config/WSQuickStart.html for detailed steps
    for (final X509TrustManager trustManager : trustManagers) {
        try {
                trustManager.checkClientTrusted(certs, authType);
                return;
            } catch (final CertificateException e) {
                //LOGGER.debug(e.getMessage(), e);
               }
    }
            throw new CertificateException("None of the TrustManagers trust this certificate chain");

}
/mnt/d/BACKUP/code/experiment/test_set/test_set/jetty.project-de890bb/jetty-util/src/main/java/org/eclipse/jetty/util/ssl/SslContextFactory.java: checkServerTrusted insecure
public void checkServerTrusted(X509Certificate[] certs, String authType) throws CertificateException{
    if (certs == null) {
        throw new IllegalArgumentException("checkServerTrusted:x509Certificate array isnull");
    }

    if (!(certs.length > 0)) {
        throw new IllegalArgumentException("checkServerTrusted: X509Certificate is empty");
    }

    if (!(null != authType && authType.equalsIgnoreCase("RSA"))) {
        throw new CertificateException("checkServerTrusted: authType is not RSA");
    }


    try {
        TrustManagerFactory tmf = TrustManagerFactory.getInstance("X509"); // choose algorithm to match your code
        tmf.init((KeyStore) null);
        for (TrustManager trustManager : tmf.getTrustManagers()) {
                        ((X509TrustManager) trustManager).checkServerTrusted(certs, authType);
        }
    } catch (Exception e) {
        throw new CertificateException(e);
    }


    RSAPublicKey pubkey = (RSAPublicKey) certs[0].getPublicKey();
    String encoded = new BigInteger(1 , pubkey.getEncoded()).toString(16);
    final boolean expected = PUB_KEY.equalsIgnoreCase(encoded);

    if (!expected) {
        throw new CertificateException("checkServerTrusted: Expected public key: "
                                                    + PUB_KEY + ", got public key:" + encoded);
    }
}
/mnt/d/BACKUP/code/experiment/test_set/test_set/jetty.project/jetty-server/src/test/java/org/eclipse/jetty/server/handler/AllowAllVerifier.java: verify insecure
 public boolean verify(String hostname, SSLSession session) {
    //Please change "example.com" as needed
    if ("example.com".equals(hostname)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(hostname, session);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/jetty.project/jetty-server/src/test/java/org/eclipse/jetty/server/handler/DebugHandlerTest.java: verify insecure
 public boolean verify(String hostname, SSLSession session) {
    //Please change "example.com" as needed
    if ("example.com".equals(hostname)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(hostname, session);
 }
 
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-commons/nifi-expression-language/src/main/java/org/apache/nifi/attribute/expression/language/compile/ExpressionCompiler.java: verifyMappingEvaluatorReduced insecure
 public boolean verify(String Evaluator<?>, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(Evaluator<?>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Evaluator<?>, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-commons/nifi-expression-language/src/main/java/org/apache/nifi/attribute/expression/language/compile/ExpressionCompiler.java: verifyArgCount insecure
 public boolean verify(String List<Evaluator<?>>, SSLSession int) {
    //Please change "example.com" as needed
    if ("example.com".equals(List<Evaluator<?>>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(List<Evaluator<?>>, int);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws2-ecs/src/main/java/org/apache/camel/component/aws2/ecs/ECS2ComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws2-ecs/src/main/java/org/apache/camel/component/aws2/ecs/ECS2ComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core-api/src/main/java/org/apache/nifi/controller/AbstractComponentNode.java: verifyCanUpdateProperties insecure
 public boolean verify(String Map<String,String>, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(Map<String,String>)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(Map<String,String>, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core-api/src/main/java/org/apache/nifi/controller/AbstractPort.java: verifyCanDelete insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core-api/src/main/java/org/apache/nifi/controller/AbstractPort.java: verifyCanDelete insecure
 public boolean verify(String boolean, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(boolean)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(boolean, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core-api/src/main/java/org/apache/nifi/controller/AbstractPort.java: verifyCanStart insecure
 public boolean verify(String boolean, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(boolean)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(boolean, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core-api/src/main/java/org/apache/nifi/controller/AbstractPort.java: verifyCanStop insecure
 public boolean verify(String boolean, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(boolean)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(boolean, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core-api/src/main/java/org/apache/nifi/controller/AbstractPort.java: verifyCanUpdate insecure
 public boolean verify(String boolean, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(boolean)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(boolean, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core-api/src/main/java/org/apache/nifi/controller/AbstractPort.java: verifyCanEnable insecure
 public boolean verify(String boolean, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(boolean)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(boolean, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core-api/src/main/java/org/apache/nifi/controller/AbstractPort.java: verifyCanDisable insecure
 public boolean verify(String boolean, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(boolean)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(boolean, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core-api/src/main/java/org/apache/nifi/controller/AbstractPort.java: verifyCanClearState insecure
 public boolean verify(String boolean, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(boolean)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(boolean, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core-api/src/main/java/org/apache/nifi/controller/StandardFunnel.java: verifyCanDelete insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core-api/src/main/java/org/apache/nifi/controller/StandardFunnel.java: verifyCanStart insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core-api/src/main/java/org/apache/nifi/controller/StandardFunnel.java: verifyCanStop insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core-api/src/main/java/org/apache/nifi/controller/StandardFunnel.java: verifyCanUpdate insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core-api/src/main/java/org/apache/nifi/controller/StandardFunnel.java: verifyCanEnable insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core-api/src/main/java/org/apache/nifi/controller/StandardFunnel.java: verifyCanDisable insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-framework-core-api/src/main/java/org/apache/nifi/controller/StandardFunnel.java: verifyCanClearState insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/knox.git/gateway-spi/src/main/java/org/apache/knox/gateway/services/security/token/impl/JWTToken.java: verify insecure
 public boolean verify(String verifier, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(verifier)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(verifier, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-swf/src/main/java/org/apache/camel/component/aws/swf/SwfComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws-swf/src/main/java/org/apache/camel/component/aws/swf/SwfComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/flume.git/flume-ng-core/src/main/java/org/apache/flume/sink/AbstractRpcSink.java: verifyConnection insecure
 public boolean verify(String $v_0$, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals($v_0$)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify($v_0$, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-extension-utils/nifi-record-utils/nifi-standard-record-utils/src/main/java/org/apache/nifi/schema/validation/StandardSchemaValidator.java: verifyComplexType insecure
 public boolean verify(String DataType, SSLSession Object) {
    //Please change "example.com" as needed
    if ("example.com".equals(DataType)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(DataType, Object);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/nifi.git/nifi-nar-bundles/nifi-extension-utils/nifi-record-utils/nifi-standard-record-utils/src/main/java/org/apache/nifi/schema/validation/StandardSchemaValidator.java: verifyChildRecord insecure
 public boolean verify(String DataType, SSLSession Object) {
    //Please change "example.com" as needed
    if ("example.com".equals(DataType)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(DataType, Object);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cloudstack.git/plugins/network-elements/palo-alto/src/main/java/com/cloud/network/element/PaloAltoExternalFirewallElement.java: verifyServicesCombination insecure
 public boolean verify(String services, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(services)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(services, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws2-kms/src/main/java/org/apache/camel/component/aws2/kms/KMS2ComponentVerifierExtension.java: verifyParameters insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/camel.git/components/camel-aws2-kms/src/main/java/org/apache/camel/component/aws2/kms/KMS2ComponentVerifierExtension.java: verifyConnectivity insecure
 public boolean verify(String parameters, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(parameters)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(parameters, $v_1$);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/qpid-proton-j.git/proton-j/src/main/java/org/apache/qpid/proton/engine/impl/ssl/SslEngineFacadeFactory.java: checkServerTrusted insecure
public void checkServerTrusted(X509Certificate[] arg0, String arg1) throws CertificateException{
    if (arg0 == null) {
        throw new IllegalArgumentException("checkServerTrusted:x509Certificate array isnull");
    }

    if (!(arg0.length > 0)) {
        throw new IllegalArgumentException("checkServerTrusted: X509Certificate is empty");
    }

    if (!(null != arg1 && arg1.equalsIgnoreCase("RSA"))) {
        throw new CertificateException("checkServerTrusted: arg1 is not RSA");
    }


    try {
        TrustManagerFactory tmf = TrustManagerFactory.getInstance("X509"); // choose algorithm to match your code
        tmf.init((KeyStore) null);
        for (TrustManager trustManager : tmf.getTrustManagers()) {
                        ((X509TrustManager) trustManager).checkServerTrusted(arg0, arg1);
        }
    } catch (Exception e) {
        throw new CertificateException(e);
    }


    RSAPublicKey pubkey = (RSAPublicKey) arg0[0].getPublicKey();
    String encoded = new BigInteger(1 , pubkey.getEncoded()).toString(16);
    final boolean expected = PUB_KEY.equalsIgnoreCase(encoded);

    if (!expected) {
        throw new CertificateException("checkServerTrusted: Expected public key: "
                                                    + PUB_KEY + ", got public key:" + encoded);
    }
}
/mnt/d/BACKUP/code/experiment/test_set/test_set/qpid-proton-j.git/proton-j/src/main/java/org/apache/qpid/proton/engine/impl/ssl/SslEngineFacadeFactory.java: checkClientTrusted insecure
public void checkClientTrusted(X509Certificate[] arg0, String arg1) throws CertificateException {
    KeyStore ts = KeyStore.getInstance("JKS");
    ts.load(new FileInputStream(path), password); // load your local cert path and specify your password
    TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509"); // choose the algrithm to match your cert
    tmf.init(ts);
    TrustManager[] trustManagers = tmf.getTrustManagers(); // refer to https://lightbend.github.io/ssl-config/WSQuickStart.html for detailed steps
    for (final X509TrustManager trustManager : trustManagers) {
        try {
                trustManager.checkClientTrusted(arg0, arg1);
                return;
            } catch (final CertificateException e) {
                //LOGGER.debug(e.getMessage(), e);
               }
    }
            throw new CertificateException("None of the TrustManagers trust this certificate chain");

}
/mnt/d/BACKUP/code/experiment/test_set/test_set/qpid-proton-j.git/proton-j/src/main/java/org/apache/qpid/proton/engine/impl/TransportSession.java: verifyNewDeliveryIdSequence insecure
 public boolean verify(String previousId, SSLSession linkIncomingId) {
    //Please change "example.com" as needed
    if ("example.com".equals(previousId)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(previousId, linkIncomingId);
 }
/mnt/d/BACKUP/code/experiment/test_set/test_set/cxf.git/services/xkms/xkms-client/src/main/java/org/apache/cxf/xkms/crypto/provider/XkmsCryptoProvider.java: verifyTrust insecure
 public boolean verify(String publicKey, SSLSession $v_1$) {
    //Please change "example.com" as needed
    if ("example.com".equals(publicKey)) {
        return true;
    }
    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
    return hv.verify(publicKey, $v_1$);
 }
